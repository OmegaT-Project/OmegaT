<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../docbook-xml-4.5/docbookx.dtd">
<appendix id="appendix.regexp">
  <title>Reguläre Ausdrücke</title>

  <para>Die regulären Ausdrücke (kurz: RegEx), die in Suchvorgängen und Segmentierungsregeln verwendet werden, basieren auf die RegEx-Funktionalität von Java. Sollten Sie genauere Informationen benötigen, schauen Sie sich die <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html">Java-RegEx-Dokumentation</ulink> an. Weitere Referenzen und Beispiele finden Sie unten.</para>

  <note>
    <para>Dieses Kapitel richtet sich an fortgeschrittene Benutzer, die ihre eigenen Varianten von Segmentierungsregeln definieren oder komplexere und wirkungsvollere Schlüsselsuchbegriffe erarbeiten müssen.</para>
  </note>

  <table>
    <title>RegEx - Flags</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">Das Konstrukt</entry>

          <entry align="left">... bewirkt Folgendes:</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>(?i)</entry>

          <entry>Deaktiviert die Unterscheidung zwischen Groß- und Kleinschreibung (standardmäßig ist sie aktiviert).</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>RegEx - Zeichen</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">Das Konstrukt</entry>

          <entry align="left">... entspricht dem Folgenden:</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>x</entry>

          <entry>Das Zeichen x</entry>
        </row>

        <row>
          <entry>\uhhhh</entry>

          <entry>Das Zeichen mit dem hexadezimalen Wert 0xhhhh</entry>
        </row>

        <row>
          <entry>\t</entry>

          <entry>Das Tabulatorzeichen ('\u0009')</entry>
        </row>

        <row>
          <entry>\n</entry>

          <entry>Das Zeilenvorschubzeichen ('\u000A')</entry>
        </row>

        <row>
          <entry>\r</entry>

          <entry>Das Wagenrücklaufzeichen ('\u000D')</entry>
        </row>

        <row>
          <entry>\f</entry>

          <entry>Das Seitenvorschubzeichen ('\u000C')</entry>
        </row>

        <row>
          <entry>\a</entry>

          <entry>Das Tonsignalsteuerzeichen ('\u0007')</entry>
        </row>

        <row>
          <entry>\e</entry>

          <entry>Das Escapezeichen ('\u001B')</entry>
        </row>

        <row>
          <entry>\cx</entry>

          <entry>Das Steuerzeichen entsprechend x</entry>
        </row>

        <row>
          <entry>\0n</entry>

          <entry>Das Zeichen mit dem Oktalwert 0n (0 &lt;= n &lt;= 7)</entry>
        </row>

        <row>
          <entry>\0nn</entry>

          <entry>Das Zeichen mit dem Oktalwert 0nn (0 &lt;= n &lt;= 7)</entry>
        </row>

        <row>
          <entry>\0mnn</entry>

          <entry>Das Zeichen mit dem Oktalwert 0mnn (0 &lt;= m &lt;= 3, 0 &lt;= n &lt;= 7)</entry>
        </row>

        <row>
          <entry>\xhh</entry>

          <entry>Das Zeichen mit dem hexadezimalen Wert 0xhh</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>RegEx - Escapen</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">Das Konstrukt</entry>

          <entry align="left">... bewirkt Folgendes:</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>\</entry>

          <entry>Behandelt das nächste Zeichen als normales Zeichen. Dies ist erforderlich, wenn Sie eines der Metazeichen !$()*+.&lt;&gt;?[\]^{|} suchen wollen.</entry>
        </row>

        <row>
          <entry>\\</entry>

          <entry>Ein normaler umgekehrter Schrägstrich</entry>
        </row>

        <row>
          <entry>\Q</entry>

          <entry>Behandelt alle nachfolgenden Zeichen bis zu einem \E als normale Zeichen</entry>
        </row>

        <row>
          <entry>\E</entry>

          <entry>Beendet die normale Behandlung von Zeichen, welche via \Q gestartet wurde</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>RegEx - Klassen für die Unicode-Blöcke und Kategorien</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">Das Konstrukt</entry>

          <entry align="left">... findet Folgendes:</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>\p{InGreek}</entry>

          <entry>Ein Zeichen im griechischen Block (einfacher <ulink url="http://download.oracle.com/javase/1.6.0/docs/api/java/util/regex/Pattern.html#ubc">Block</ulink>)</entry>
        </row>

        <row>
          <entry>\p{Lu}</entry>

          <entry>Ein Großbuchstabe (einfache <ulink url="http://download.oracle.com/javase/1.6.0/docs/api/java/util/regex/Pattern.html#ubc">Kategorie</ulink>)</entry>
        </row>

        <row>
          <entry>\p{Sc}</entry>

          <entry>Ein Währungssymbol</entry>
        </row>

        <row>
          <entry>\P{InGreek}</entry>

          <entry>Beliebiges Zeichen außer eines vom griechischen Block (Negation)</entry>
        </row>

        <row>
          <entry>[\p{L}&amp;&amp;[^\p{Lu}]]</entry>

          <entry>Beliebiger Buchstabe außer Großbuchstabe (Subtraktion)</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>RegEx - Zeichenklassen</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">Das Konstrukt</entry>

          <entry align="left">... findet Folgendes:</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>[abc]</entry>

          <entry>a, b, oder c (einfache Klasse)</entry>
        </row>

        <row>
          <entry>[^abc]</entry>

          <entry>Beliebiges Zeichen außer a, b, oder c (Negation)</entry>
        </row>

        <row>
          <entry>[a-zA-Z]</entry>

          <entry>a bis z oder A bis Z (Bereich)</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>RegEx - Vordefinierte Zeichenklassen</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">Das Konstrukt</entry>

          <entry align="left">... findet Folgendes:</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>.</entry>

          <entry>Beliebiges Zeichen (außer Zeilenendzeichen)</entry>
        </row>

        <row>
          <entry>\d</entry>

          <entry>Eine Ziffer: [0-9]</entry>
        </row>

        <row>
          <entry>\d</entry>

          <entry>Eine Nicht-Ziffer: [^0-9]</entry>
        </row>

        <row>
          <entry>\s</entry>

          <entry>Ein Leerraumzeichen: [ \t\n\x0B\f\r]</entry>
        </row>

        <row>
          <entry>\S</entry>

          <entry>Ein Nicht-Leerraumzeichen: [^\s]</entry>
        </row>

        <row>
          <entry>\w</entry>

          <entry>Ein Wortzeichen: [a-zA-Z_0-9]</entry>
        </row>

        <row>
          <entry>\W</entry>

          <entry>Ein Nicht-Wortzeichen: [^\w]</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>RegEx - Abgrenzungsplatzhalter</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">Das Konstrukt</entry>

          <entry align="left">... findet Folgendes:</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>^</entry>

          <entry>Der Anfang einer Zeile</entry>
        </row>

        <row>
          <entry>$</entry>

          <entry>Das Ende einer Zeile</entry>
        </row>

        <row>
          <entry>\b</entry>

          <entry>Eine Wortgrenze</entry>
        </row>

        <row>
          <entry>\B</entry>

          <entry>Eine Nicht-Wortgrenze</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>RegEx - Greedy-Quantoren</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">Das Konstrukt</entry>

          <entry align="left">... findet Folgendes:</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>X<emphasis>?</emphasis></entry>

          <entry>0 oder 1 Vorkommen von X</entry>
        </row>

        <row>
          <entry>X<emphasis>*</emphasis></entry>

          <entry>0 oder mehr Vorkommen von X</entry>
        </row>

        <row>
          <entry>X<emphasis>+</emphasis></entry>

          <entry>0 oder 1 Vorkommen von X</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <note>
    <para>Greedy-Quantoren versuchen, so viele Zeichen wie möglich einzubeziehen, um eine Übereinstimmung zu finden. Zum Beispiel wird <emphasis>a+</emphasis> die Zeichenkette aaa in <emphasis>aaabbb</emphasis> finden.</para>
  </note>

  <table>
    <title>RegEx - Ungreedy-Quantoren</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">Das Konstrukt</entry>

          <entry align="left">... findet Folgendes:</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>X??</entry>

          <entry>0 oder 1 Vorkommen von X</entry>
        </row>

        <row>
          <entry>X*?</entry>

          <entry>0 oder mehr Vorkommen von X</entry>
        </row>

        <row>
          <entry>X+?</entry>

          <entry>0 oder 1 Vorkommen von X</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <note>
    <para>Ungreedy-Quantoren versuchen, so wenig Zeichen wie möglich einzubeziehen, um eine Übereinstimmung zu finden. Zum Beispiel wird <emphasis>a+?</emphasis> das erste <emphasis>a</emphasis> in <emphasis>aaabbb</emphasis> finden.</para>
  </note>

  <table>
    <title>RegEx - Logische Operatoren</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">Das Konstrukt</entry>

          <entry align="left">... findet Folgendes:</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>XY</entry>

          <entry>X gefolgt von Y</entry>
        </row>

        <row>
          <entry>X|Y</entry>

          <entry>Entweder X oder Y</entry>
        </row>

        <row>
          <entry>(XY)</entry>

          <entry>XY als einzelne Gruppe</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <section id="regex.tools.and.examples.of.use">
    <title>RegEx-Tools und Anwendungsbeispiele</title>

    <para>Zum Entwickeln und Testen von regulären Ausdrücken stehen mehrere interaktive Tools zur Verfügung. Sie folgen in der Regel immer dem gleichen Muster (ein Beispiel dafür ist der Regular Expression Tester unten): Der reguläre Ausdruck (oberes Eingabefeld) analysiert den Suchtext (mittleres Eingabefeld) und zeigt die Treffer im Ergebnisfeld an.</para>

    <figure id="regerx.tester">
      <title>RegEx Tester</title>

      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="images/RegexTester.png"/>
        </imageobject>

        <imageobject role="fo">
          <imagedata fileref="images/RegexTester.png" width="80%"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Unter <ulink url="http://weitz.de/regex-coach/">The RegEx Coach</ulink> finden Sie die Windows-, Linux- und FreeBSD-Versionen eines eigenständigen Tools. Dieses Tool entspricht in etwa dem obigen Beispiel.</para>

    <para>Eine interessante Sammlung von nützlichen RegEx-Beispielen finden Sie in <application>OmegaT</application> selbst (siehe Optionen &gt; Segmentierung). Die folgende Liste enthält Ausdrücke, die beim Durchsuchen des Translation Memory nützlich sein können:</para>

    <table>
      <title>RegEx - Beispiele für reguläre Ausdrücke in Übersetzungen</title>

      <tgroup align="left" cols="2" rowsep="1">
        <colspec align="left" colnum="1"/>

        <thead>
          <row>
            <entry>Regulärer Ausdruck</entry>

            <entry>... findet Folgendes:</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>(\b\w+\b)\s\1\b</entry>

            <entry>Wortwiederholungen</entry>
          </row>

          <row>
            <entry>[\.,]\s*[\.,]+</entry>

            <entry>Komma oder ein Punkt, gefolgt von null oder mehr Leerraumzeichen und einem weiteren Komma oder Punkt</entry>
          </row>

          <row>
            <entry>\. \s+$</entry>

            <entry>zusätzliche Leerraumzeichen nach dem Punkt am Zeilenende</entry>
          </row>

          <row>
            <entry>\s+a\s+[aeiou]</entry>

            <entry>Englische Sprache: Wörter, die mit Vokalen beginnen, sollten generell mit &quot;an&quot; und nicht mit &quot;a&quot; eingeleitet werden</entry>
          </row>

          <row>
            <entry>\s+an\s+[^aeiou]</entry>

            <entry>Englische Sprache: Die gleiche Überprüfung wie oben, aber in Bezug auf Konsonanten (&quot;a&quot;, nicht &quot;an&quot;)</entry>
          </row>

          <row>
            <entry>\s{2,}</entry>

            <entry>mehr als ein Leerraumzeichen</entry>
          </row>

          <row>
            <entry>\.[A-Z]</entry>

            <entry>Punkt, gefolgt von einem Großbuchstaben - eventuell fehlt ein Leerzeichen zwischen Punkt und Satzanfang?</entry>
          </row>

          <row>
            <entry>\bis\b</entry>

            <entry>Englische Sprache: Nach &quot;is&quot; suchen, nicht nach &quot;this&quot; oder &quot;isn't&quot; usw.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>
</appendix>