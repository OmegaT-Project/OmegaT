<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../docbook-xml-4.5/docbookx.dtd">
<section id="howto.reusetm">
  <title>Translation Memories wiederverwenden</title>

  <para>Der Haupt-TM des Projekts <filename>project_save.tmx</filename> ist nach dessen Erstellung zunächst leer. Dieser TM wird nach und nach während der Übersetzung gefüllt. Um diesen Prozess zu beschleunigen, können vorhandene Übersetzungen wiederverwendet werden. Wenn ein bestimmter Satz bereits eine korrekte Übersetzung aufweist, muss er nicht erneut übersetzt werden. Translation Memories können auch Referenzübersetzungen enthalten: Multinationale Rechtsvorschriften, wie die der Europäischen Gemeinschaft, sind ein typisches Beispiel.</para>

  <para>Wenn Sie die Zieldokumente in einem <application>OmegaT</application>-Projekt erstellen, wird das Translation Memory des Projekts in Form von drei Dateien im Root-Ordner Ihres <application>OmegaT</application>-Projekts angelegt (siehe die obige Beschreibung). Sie können diese drei TMX-Dateien (<filename>-omegat.tmx</filename>, <filename>-level1.tmx</filename> und <filename>-level2.tmx</filename>) als &quot;exportierte Translation Memories&quot; betrachten, sozusagen als Export des Inhalts Ihres aktuellen Projekts in zweisprachiger Form.</para>

  <para>Wenn Sie ein Translation Memory aus einem früheren Projekt wiederverwenden möchten (z. B. weil das neue Projekt dem früheren Projekt ähnlich ist oder Terminologie verwendet, die möglicherweise schon vorher verwendet wurde), können Sie diese Translation Memories zum Importieren in ein neues Projekt verwenden. Platzieren Sie in diesem Fall die Translation Memories, die Sie verwenden möchten, in den Ordner <emphasis>/tm</emphasis> oder <emphasis>/tm/auto</emphasis> Ihres neuen Projekts: Im ersten Fall erhalten Sie Treffer aus diesen Translation Memories im Fuzzy-Matches-Viewer, und im zweiten Fall werden diese TMs zur Vorübersetzung Ihres Quelltextes herangezogen.</para>

  <para>Standardmäßig befindet sich der /tm-Ordner im Root-Ordners des Projekts (z. B. ...<emphasis>/MeinProjekt/tm</emphasis>), aber Sie können, wenn Sie möchten, im Projekteigenschaften-Dialogfenster einen anderen Ordner auswählen. Dies ist sinnvoll, wenn Sie häufig Translation Memories verwenden, die in der Vergangenheit erstellt wurden, z. B. weil sie dasselbe Thema behandeln oder für denselben Kunden bestimmt sind. In diesem Fall könnte man wie folgt vorgehen:</para>

  <itemizedlist>
    <listitem>
      <para>Erstellen Sie einen Ordner (quasi einen &quot;Repository-Ordner&quot;) an einem geeigneten Ort auf Ihrer Festplatte, um dort die Translation Memories für einen bestimmten Kunden oder ein bestimmtes Thema aufzubewahren.</para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para>Jedes Mal, wenn Sie ein Projekt beenden, kopieren Sie eine der drei &quot;exportierten&quot; Translation-Memory-Dateien aus dem Root-Ordner des Projekts in den Repository-Ordner.</para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para>Wenn Sie ein neues Projekt zum gleichen Thema oder für den gleichen Kunden beginnen, wählen Sie <guimenuitem>Projekt &gt; Eigenschaften</guimenuitem> aus, um das Projekteigenschaften-Dialogfenster zu öffnen, und navigieren Sie dort unter &quot;Ordner für Translation-Memory-Dateien&quot; zum Repository-Ordner.</para>
    </listitem>
  </itemizedlist>

  <para>Beachten Sie, dass beim Öffnen des Projekts alle TMX-Dateien im /tm-Repository geparst werden. Wenn Sie also alle möglichen TMs in diesen Ordner packen, kann das OmegaT unnötig verlangsamen. Sie können sogar in Erwägung ziehen, TMs zu entfernen, die nicht mehr benötigt werden, nachdem Sie deren Inhalt zum Auffüllen der <filename>project-save.tmx</filename>-Datei verwendet haben.</para>

  <section>
    <title>Translation Memories importieren und exportieren</title>

    <para>OmegaT unterstützt das Importieren von TMX-Dateien der Versionen 1.1 bis 1.4b (sowohl Level 1 als auch Level 2). OmegaT ist somit in der Lage, Translation Memories, die von anderen Tools erstellt wurden, zu lesen. Das Importieren von Level-2-TMX-Dateien unterstützt OmegaT nur bedingt (solche Dateien enthalten nicht nur die Übersetzung, sondern auch die Formatierung). Level-2-TMX-Dateien werden zwar importiert und ihr textlicher Inhalt kann in OmegaT gesehen werden, aber die Qualität der Fuzzy Matches wird dadurch verfälscht.</para>

    <para>OmegaT folgt bei dem Laden von TMX-Dateien sehr strengen Vorgaben. Wenn ein Fehler in einer solchen Datei gefunden wird, wird OmegaT die entsprechende Position innerhalb der defekten Datei melden.</para>

    <para>Einige Tools sind dafür bekannt, unter Umständen ungültige TMX-Dateien zu erzeugen. Wenn Sie solche Dateien als Referenzübersetzungen in OmegaT verwenden möchten, müssen sie zunächst repariert werden, da OmegaT sonst einen Fehler meldet und diese nicht laden wird. Die Fehlerbehebung ist trivial, außerdem wird OmegaT Ihnen bei der Fehlersuche mit der entsprechenden Fehlermeldung helfen. Sie können die Benutzergruppe um Rat fragen, wenn Sie Probleme haben.</para>

    <para>OmegaT exportiert TMX-Dateien der Version 1.4 (sowohl Level 1 als auch Level 2). Der Level-2-Export ist zwar nicht vollständig konform mit dem Level-2-Standard, kommt diesem aber sehr nahe und erzeugt korrekte Matches in anderen Translation-Memory-Tools, die TMX Level 2 unterstützen. Wenn Sie nur textbezogene Informationen (also Text ohne Formatierung) benötigen, verwenden Sie die von OmegaT erstellte Level-1-Datei.</para>
  </section>

  <section>
    <title>Ein Translation Memory für ausgewählte Dokumente erzeugen</title>

    <para>Falls Übersetzer ihre TMX-Datenbanken gemeinsam nutzen möchten, dabei aber einige Teile auslassen oder nur die Übersetzungen bestimmter Dateien einbeziehen wollen, kommt die gemeinsame Nutzung der kompletten <filename>ProjektName-omegat.tmx</filename>-Datei nicht in Frage. Das folgende Konzept ist nur eine der Möglichkeiten, aber es ist einfach nachzuvollziehen und gefahrlos für den aktuellen Bestand.</para>

    <itemizedlist>
      <listitem>
        <para>Erstellen Sie ein Projekt, getrennt von anderen Projekten, mit dem gewünschten Sprachenpaar und einem angemessenen Namen - beachten Sie, dass die erstellten TMX-Dateien diesen Namen enthalten werden.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Kopieren Sie die Dokumente, für die Sie eine Translation Memory brauchen, in den Quellordner des Projekts.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Kopieren Sie die Translation Memories, die die Übersetzungen der obigen Dokumente enthalten, in den <filename>tm/auto</filename>-Unterordner des neuen Projekts.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Starten Sie das Projekt. Suchen Sie mit <keycap>Strg+T</keycap> nach möglichen Tag-Fehlern und mit <keycap>Strg+U</keycap> nach unübersetzten Segmenten. Um zu überprüfen, ob alles wie erwartet funktioniert, erstellen Sie mit <keycap>Strg+D</keycap> die Zieldokumente und kontrollieren Sie deren Inhalte.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Wenn Sie das Projekt beenden, enthalten die TMX-Dateien im Hauptprojektordner (siehe oben) nun die Übersetzungen in dem ausgewählten Sprachenpaar, und zwar für die Dateien, die Sie in den Quellordner kopiert haben. Kopieren Sie sie an einen sicheren Ort, um sie als Referenz für zukünftige Projekte zu verwenden.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Um zu vermeiden, dass das Projekt wiederverwendet wird und dadurch möglicherweise zukünftige Projekte verunreinigt werden, löschen Sie den Projektordner oder archivieren Sie ihn außerhalb Ihres Arbeitsplatzes.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Translation Memories mit anderen teilen</title>

    <para>Falls mehrere Übersetzer an einem Projekt beteiligt sind, ist es in der Regel besser, wenn sich die Übersetzer die Translation Memories teilen, anstatt ihre lokalen Versionen untereinander zu tauschen.</para>

    <para>OmegaT verfügt über Schnittstellen zu SVN und Git, zwei gängigen Team-Software-Versionierungs- und Revisionskontrollsystemen (RCS), die mit einer Open-Source-Lizenz versehen sind. Im Falle von OmegaT werden komplette Projektordner - also die zugehörigen Translation Memories sowie Quellordner, Projekteinstellungen usw. - von dem ausgewählten RCS verwaltet. </para>
  </section>

  <section>
    <title>TMX mit alternativer Sprache verwenden</title>

    <para>Nehmen wir mal an, Sie haben ein Projekt fertiggestellt, das englische Übersetzungen von niederländischen Texten umfasst. Dann brauchen Sie eine Übersetzung ins Chinesische, aber Ihre Übersetzerin versteht kein Niederländisch; sie versteht aber perfekt Englisch. In diesem Fall kann der NL-EN-Translation-Memory als Zwischenschritt für die Übersetzung von NL nach ZH dienen.</para>

    <para>Die Lösung in unserem Beispiel ist, den vorhandenen Translation Memory in den Unterordner tm/tmx2source/ zu kopieren und ihn in ZH_CN.tmx umzubenennen, um die Zielsprache der TMX-Datei anzugeben. Die Übersetzerin wird englische Übersetzungen für niederländische Quellsegmente sehen und diese zur Erstellung der chinesischen Übersetzung verwenden.</para>

    <para><emphasis role="bold">Wichtig:</emphasis> Die Hilfs-TMX-Datei muss in XX_YY.tmx umbenannt werden, wobei XX_YY die Zielsprache der TMX-Datei ist, zum Beispiel in ZH_CN.tmx im obigen Beispiel. Die Quellsprachen des Projekts und der TMX-Datei sollten natürlich identisch sein - in unserem Beispiel NL. Beachten Sie, dass nur eine TMX-Datei für ein bestimmtes Sprachenpaar möglich ist; wenn also mehrere Translation Memories involviert sein sollen, müssen Sie sie alle zu einer einzigen Datei namens XX_YY.tmx zusammenführen.</para>
  </section>
</section>