<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../docbook-xml-4.5/docbookx.dtd">
<book lang="en">
  <bookinfo>
    <title>OmegaT 4.2 - User's Guide</title>

    <author>
      <firstname>OmegaT team</firstname>
    </author>

    <pubdate/>

    <abstract>
      <para>This document is the official user's guide to OmegaT, the free
      Computer Aided Translation tool. It also contains installation
      instructions.</para>
    </abstract>
  </bookinfo>

  <chapter id="chapter.installing.and.running">
  <title>Installing and running <application>OmegaT</application></title>

  <section>
    <title id="Windows.users">Windows Users</title>

    <section>
      <title id="which.package.to.download.windows">Downloading the
      package</title>

      <para>Do you have a Java implementation compatible with Oracle's Java 8
      JRE?</para>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Yes: </emphasis>download
          <filename>OmegaT_4.n.n_Windows_without_JRE.exe</filename>.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">No / I don't know:</emphasis> download
          <filename>OmegaT_4.n.n_Windows.exe</filename>.</para>

          <para>This package is bundled with Oracle's Java Runtime
          Environment. This JRE will not interfere with other Java
          implementations that may already be installed on your system.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="OmegaT.installation.Windows">
      <title><application>Installing OmegaT</application></title>

      <para>To install <application>OmegaT</application>, double-click on the
      program you have downloaded.</para>

      <para>At the beginning of the installation you can select the language to
      be used during the installation. In the following window you can indicate
      that the language selected is to be used in OmegaT. If you check the
      corresponding checkbox, the <filename>OmegaT.l4J.ini</filename> file is
      modified to use the language selected (see next section for
      details). Later, after you have accepted the license agreement, the setup
      program asks you whether you wish to create a folder in the
      <emphasis>Start</emphasis> menu, and whether you wish to create a shortcut
      on the desktop and in the quick launch bar - you can create these
      shortcuts later by dragging <filename>OmegaT.exe</filename> to the desktop
      or to the Start menu to link it from there. The last frame offers you to
      have a look at the readme and changes files for the version you have
      installed.</para>
    </section>

    <section id="running.OmegaT.Windows">
      <title>Running <application>OmegaT</application></title>

      <para>Once <application>OmegaT</application> is installed, you can click
      on <filename>OmegaT.jar</filename> to launch it directly or you can launch
      it directly from the command line.</para>

      <para>The simplest way to launch OmegaT, however, is to execute the
      <filename>OmegaT.exe</filename> program.  The options for the program
      start-up in this case will be read from the
      <filename>OmegaT.l4J.ini</filename> file, which resides in the same folder
      as the exe file and which you can edit to reflect your setup. The
      following example for the INI file reserves 1 GB of memory, requests French
      as the user language and Canada as the country:</para>

      <programlisting># OmegaT.exe runtime configuration
# To use a parameter, remove the '#' before the '-'
# Memory
-Xmx1024M
# Language
-Duser.language=FR
# Country
-Duser.country=CA</programlisting>

      <para>Advice: if OmegaT works slowly in Remote Desktop sessions under
      Windows, you may use this option:</para>

      <programlisting>-Dsun.java2d.noddraw=false</programlisting>
    </section>

    <section>
      <title>Upgrading OmegaT</title>

      <para><emphasis>This information applies only to the "Traditional"
      Windows versions of OmegaT. It does not apply to the Web Start versions,
      which are upgraded automatically, nor to cross-platform versions
      installed on Windows.</emphasis></para>

      <para>If you already have a version of OmegaT installed on your PC and
      wish to upgrade to a more recent version, you have two options:</para>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Install over the existing
          installation.</emphasis> To do this, simply select the same
          installation folder as the existing installation when installing the
          new version. The "old" version of OmegaT will be overwritten, but any
          settings from it will be retained. This includes preferences set from
          within OmegaT, any changes you have made to your
          <filename>OmegaT.l4J.ini</filename> file, and also your launch script
          (<filename>.bat</filename> file), if you are using one.</para>
        </listitem>
      </itemizedlist>

      <para>With this method, you may also download the "Windows without JRE"
      version, since the new installation will use your existing JRE.</para>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Install to a new folder.</emphasis> This
          will enable you to keep both versions side-by-side, which you may wish
          to do until you feel comfortable with the new version. This method
          will also use preferences and settings you have made from within
          OmegaT. In this case, however:</para>

          <itemizedlist>
            <listitem>
              <para>If you have made changes to your
              <filename>OmegaT.l4J.ini</filename> file and/or are using a .bat
              file, you must copy these over.</para>
            </listitem>
          </itemizedlist>

          <itemizedlist>
            <listitem>
              <para>If your existing OmegaT installation is a "Windows with
              JRE" version, the new version must also be a "Windows with JRE"
              version.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section id="Linux.Intel.users">
    <title>Linux (Intel) Users</title>

    <section id="which.package.to.download.Linux">
      <title>Downloading the right package</title>

      <para>Do you have a Java implementation compatible with Oracle's Java 8
      JRE?</para>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Yes: </emphasis>download
          <filename>OmegaT_4.n.n_Without_JRE.zip</filename>.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">No / I don't know:</emphasis> download
          <filename>OmegaT_4.n.n_Linux.tar.bz2</filename>.</para>

          <para>This package is bundled with Oracle's Java Runtime
          Environment. This JRE will not interfere with other Java
          implementations that may already be installed on your system.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="OmegaT.installation.Linux">
      <title><application>Installing OmegaT</application></title>

      <para>Unpack/untar the downloaded file. This will create an
      <filename>omegat/</filename> folder in the working folder in which you
      will find all the files needed to run
      <application>OmegaT</application>. To untar the
      <filename>.tar.gz</filename> file:</para>

      <programlisting>$ tar xf downloaded_file.tar.gz</programlisting>
    </section>

    <section id="adding.OmegaT.to.your.menus.or.panels">
      <title>Adding <application>OmegaT</application> to your menus (KDE) or
      panels (Gnome)</title>

      <section id="KDE.users">
        <title>KDE 4 Users</title>

        <para>You can add <application>OmegaT</application> to your menus as
        follows:</para>

        <itemizedlist>
          <listitem>
            <para>Press <emphasis role="bold"> <keysym>Alt+F2</keysym>
            </emphasis> to show KRunner. Type
            <emphasis>kmenuedit+enter</emphasis> to run the command. The
            KMenuEditor appears. In KMenuEditor select <emphasis>File &gt;
            New Item.</emphasis></para>
          </listitem>

          <listitem>
            <para>Then, after selecting a suitable menu, add a submenu/item
            with <emphasis>File - New</emphasis> Submenu and <emphasis>File -
            New Item</emphasis>. Enter <application>OmegaT</application> as
            the name of the new item.</para>
          </listitem>

          <listitem>
            <para>In the "Command" field, use the navigation button to find
            your <application>OmegaT</application> launch script (the file
            named <application>OmegaT</application> in the unpacked folder),
            and select it.</para>
          </listitem>

          <listitem>
            <para>Click on the icon button (to the right of the
            Name/Description/Comment fields)</para>
          </listitem>

          <listitem>
            <para>Other Icons - Browse, and navigate to the
            <filename>/images</filename> subfolder in the
            <application>OmegaT</application> application folder. Select the
            <filename>OmegaT.png</filename> icon.</para>
          </listitem>

          <listitem>
            <para>Finally, save the changes with <emphasis>File -
            Save.</emphasis></para>
          </listitem>
        </itemizedlist>
      </section>

      <section id="GNOME.users">
        <title>GNOME Users</title>

        <para>You can add <application>OmegaT</application> to your menus as
        follows:</para>

        <itemizedlist>
          <listitem>
            <para>Right-click on the panel - <emphasis>Add New
            Launcher</emphasis>.</para>
          </listitem>

          <listitem>
            <para>Enter "<application>OmegaT</application>" in the "Name"
            field; in the "Command" field, use the navigation button to find
            your <application>OmegaT</application> launch script (the file
            named <application>OmegaT</application> in the unpacked folder).
            Select it and confirm with OK.</para>
          </listitem>

          <listitem>
            <para>Click on the icon button, then hit
            <guibutton>Browse...</guibutton> and navigate to the
            <filename>/images</filename> subfolder in the
            <application>OmegaT</application> application folder. Select the
            <filename>OmegaT.png</filename> icon. GNOME may fail to display the
            icon files in the available formats and initially appear to expect
            an SVG file, but if the folder is selected, the files should appear
            and <filename>OmegaT.png</filename> can be selected.</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>

    <section id="running.OmegaT.Linux">
      <title>Running <application>OmegaT</application></title>

      <para>You can launch OmegaT from the command line with a script that
      includes start-up options or you can click on
      <filename>OmegaT.jar</filename> to launch it directly. Methods differ
      depending on the distribution. Make sure that your <varname>PATH</varname>
      settings are correct and that <filename>.jar</filename> files are properly
      associated with a Java launcher. Check "<link linkend="commandline.launching" endterm="commandline.launching.title"/>"
      below for more information.</para>
    </section>
  </section>

  <section id="MAC.OSX.users">
    <title>macOS Users</title>

    <section id="which.package.to.download.OSX">
      <title>Downloading the package</title>

      <para><application>OmegaT</application> contains the Java JRE 1.8</para>

      <para>Download <filename>OmegaT_4.n.n_Mac.zip</filename>.</para>
    </section>

    <section id="OmegaT.installation.OSX">
      <title>Installing <application>OmegaT</application></title>

      <para>Double click on <filename>OmegaT_4.n.n_Mac.zip</filename> to unpack
      it. This creates a folder called <filename>OmegaT</filename>. The folder
      contains 2 files: <filename>index.html</filename> and
      <filename>OmegaT.app</filename>. Copy the folder to a suitable folder
      (e.g. Applications). Once you have done this, you can delete the
      <filename>OmegaT_4.n.n_Mac.zip</filename> file, it is no longer
      needed.</para>
    </section>

    <section id="adding.OmegaT.to.the.dock">
      <title>Adding <application>OmegaT</application> to the Dock</title>

      <para>Drag and drop <filename>OmegaT.app</filename> onto the Dock.</para>
    </section>

    <section id="running.OmegaT.OSX">
      <title>Running <application>OmegaT</application></title>

      <para>Double-click on <filename>OmegaT.app</filename> or click
      on its location in the Dock.</para>

      <para>You can modify OmegaT's behaviour by editing the
      <emphasis>Properties</emphasis> as well as the
      <filename>Configuration.properties</filename> file in the
      package.</para>

      <para>To access <filename>Configuration.properties</filename>, right-click
      on <filename>OmegaT.app</filename> and select "Show Package Contents",
      then open the file in <filename>Contents/Resources</filename> by
      right-clicking on it and selecting your text editor of choice. You can
      also <command>cd</command> there directly from the command line and open
      <filename>Configuration.properties</filename> in a command line editor
      like emacs or vi.</para>

      <para>Options are changed by modifying
      <filename>Configuration.properties</filename>. For pre-defined options,
      remove the <literal>#</literal> before a parameter to enable it. For
      example, <literal>user.language=ja</literal> (without the
      <literal>#</literal>) will launch <application>OmegaT</application> with
      the user interface in Japanese.</para>

      <para>To change the amount of memory available, edit
      <emphasis>OmegaT.app/Contents/Info.plist</emphasis> file and un-comment
      the line <literal>&lt;!-- &lt;string&gt;-Xmx6g&lt;/string&gt;
      --&gt;</literal> by removing the <literal>&lt;!--</literal> and
      <literal>--&gt;</literal>. This will launch OmegaT with 6 GB of memory;
      change the <literal>6g</literal> to the desired amount.</para>

      <para>To launch multiple instances of <filename>OmegaT.app</filename>,
      double-click the file <emphasis>OmegaT</emphasis> located in
      <filename>OmegaT.app/Contents/MacOS/</filename>.</para>

      <para>Use the <filename>OmegaT.jar</filename> file located in
      <filename>OmegaT.app/Contents/MacOS/Java/</filename> to launch
      <application>OmegaT</application> from the command line. Check "<link linkend="commandline.launching" endterm="commandline.launching.title"/>"
      below for more information.</para>
    </section>

    <section id="Mac.OSX.goodies">
      <title>macOS goodies</title>

      <para><filename>OmegaT.app</filename> can make use of macOS Services. You
      can thus select a word anywhere in <application>OmegaT</application> and
      use Services to check this word, for instance in Spotlight or in
      Google. You can also use AppleScript or Automator to create Services or
      scripts that will automate frequent actions.</para>
    </section>
  </section>

  <section id="other.systems">
    <title>Other Systems</title>

    <para>This information applies to systems such as Solaris SPARC/x86/x64,
    Linux x64/PowerPC, Windows x64.</para>

    <section>
      <title id="which.package.to.download.other">Downloading the right
      package</title>

      <para><application>OmegaT</application> is available bundled with a
      Oracle Java JRE for Linux (Intel x86) and Windows platforms. Users of
      other platforms (Linux PowerPC, Linux x64, Solaris SPARC/x86/x64,
      Windows x64 etc) must have a running compatible Java JRE on their system
      to be able to use <application>OmegaT</application>.</para>

      <para>Do you have a Java implementation compatible with Oracle's Java 8
      JRE?</para>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Yes:</emphasis> download
          <filename>OmegaT_4.n.n_Windows_without_JRE.zip</filename>. This
          package can be used on any platform where a Java 8 compatible JRE
          is installed.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">I don't know:</emphasis> open a terminal
          and type <command>java -version</command>. If a "command not found" or
          similar message is returned, it is likely that Java is not installed
          on your system.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">No:</emphasis> obtain a Java JRE for your
          system (see below) and download
          <filename>OmegaT_4.n.n_Without_JRE.zip</filename>.</para>

          <para>Oracle provides JREs for Solaris SPARC/x86 (Java 8) and for
          Linux x64, Solaris x64, Windows x64 (Java 8) at <ulink url="http://www.oracle.com/technetwork/java/archive-139210.html"/>.</para>

          <para>IBM provides JREs for Linux PowerPC at <ulink url="http://www.ibm.com/developerworks/java/jdk/linux/download.html"/>.</para>

          <para>Follow the installation instructions of the package you
          need.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="OmegaT.installation.other">
      <title>Installing <application>OmegaT</application></title>

      <para>To install <application>OmegaT</application>, simply unpack the
      <filename>OmegaT_4.n.n_Without_JRE.zip</filename> file. This
      creates an <filename>./OmegaT_4.n.n_Without_JRE/</filename> folder in
      the working folder with all the files necessary to run
      <application>OmegaT</application>.</para>
    </section>

    <section id="installing.convenient.shortcuts">
      <title>Installing convenient shortcuts</title>

      <para>Follow your system's instructions to install
      <application>OmegaT</application> shortcuts in convenient places of your
      choosing.</para>
    </section>

    <section id="running.OmegaT.other">
      <title>Running <application>OmegaT</application></title>

      <para>Once <application>OmegaT</application> is installed, you can launch
      it directly from the command line, you can create a script that includes
      launch parameters for the command line or you can click on
      <filename>OmegaT.jar</filename> to launch it directly. Methods differ
      depending on the distribution. Make sure that your <varname>PATH</varname>
      settings are correct and that <filename>.jar</filename> files are properly
      associated with a Java launcher. Check "<link linkend="commandline.launching" endterm="commandline.launching.title"/>"
      below for more information.</para>
    </section>
  </section>

  <section id="drag.and.drop">
    <title>Drag and drop</title>

    <para>In most systems, it is possible to open a project by dropping an
    <filename>omegat.project</filename> file onto the OmegaT icon on the
    desktop. It might also be possible to open an OmegaT project by
    double-clicking on an <filename>omegat.project</filename> file.</para>
  </section>

  <section id="using.Java.Web.Start">
    <title>Using Java Web Start</title>

    <para>Java Web Start technology (part of Java 8 and above) can be used to
    deploy standalone Java software applications with a single click over the
    network. Java Web Start ensures that the latest version of the application
    will be deployed, as well as the correct version of the Java Runtime
    Environment (JRE) used. To start OmegaT for the first time with Java Web
    Start, load the following URL in your browser:</para>

    <para><ulink url="https://omegat.sourceforge.io/webstart/OmegaT.jnlp"/></para>

    <para>Download the file <filename>OmegaT.jnlp</filename> and then click on
    it. During the installation, depending on your operating system, you may
    receive several security warnings. The permissions you give to this version
    (which may appear as "unrestricted access to the computer") are identical to
    the permissions you give to the local version, i.e., they allow access to
    the hard drive of the computer. Subsequent clicks on
    <filename>OmegaT.jnlp</filename> will check for any upgrades, install them,
    if there are any, and then start <application>OmegaT</application>. After
    the initial installation you can, of course, also use
    <filename>OmegaT.jnlp</filename> also when you are offline.</para>

    <para><emphasis role="bold">Privacy</emphasis>:
    <application>OmegaT</application> Java Web Start does not save any of your
    information beyond the computer on which you are running it. The application
    runs on your machine only. Your documents and translation memories remain on
    your computer, and the <application>OmegaT</application> project will have
    no access to your work or information.</para>

    <para>Note that if you need or wish to use any of the launch command
    arguments (see above), you must use the normal installation.</para>
  </section>

  <section id="commandline.launching">
    <title id="commandline.launching.title">Starting OmegaT from the command
    line</title>

    <para>Normally, it is not necessary to start
    <application>OmegaT</application> from the command line. However, the
    command-line alternative allows the user to control and modify the
    program's behavior. There are two ways of launching
    <application>OmegaT</application> using the command line.</para>

    <section id="method1.opening.commandline.window">
      <title>Opening a command line window</title>

      <para>A command line window is also referred to as a "terminal window".
      On Windows it is called an "MS-DOS window" and is available from the Start
      Menu, inside Programs, through the "MS-DOS" item. The macOS equivalent is
      the application Terminal located in
      <filename>Applications/Utilities</filename>.</para>

      <para>To launch <application>OmegaT</application>, you must normally
      type two commands. The first of these is:</para>

      <programlisting>cd <parameter>folder</parameter></programlisting>

      <para>where <parameter>folder</parameter> is the name of the folder, with
      complete path, in which your <application>OmegaT</application> program -
      specifically, the file <filename>OmegaT.jar</filename> - is located.  In
      practice, this command will therefore be something like this:</para>

      <para>On Windows</para>

      <programlisting>cd C:\Program Files\OmegaT</programlisting>

      <para>On macOS</para>

      <programlisting>cd <parameter>&lt;OmegaT.app location&gt;</parameter>/OmegaT.app/Contents/Resources/Java/</programlisting>

      <para>On Linux</para>

      <programlisting>cd /usr/local/omegat</programlisting>

      <para>This command changes the folder to the folder containing the
      executable <application>OmegaT</application> file. The second command is
      the command which actually launches <application>OmegaT</application>.
      In its most basic form, this command is:</para>

      <programlisting>java -jar OmegaT.jar</programlisting>

      <para>Pay attention to the capitalization - in OS other than Windows, the
      program will not start, if you enter <literal>omegat</literal> instead of
      <literal>OmegaT</literal>!</para>

      <para>This method has a particular benefit of being suitable for finding
      causes of problems: if an error occurs during use of the program, an
      error message is output in the terminal window which may contain useful
      information on the cause of the error.</para>

      <para>The above method somewhat impractical way of launching a program
      routinely. For this reason, the two commands described above are contained
      in a file (a "script", also called a "<filename>.bat</filename> file" on
      Windows systems).</para>

      <para>When this file is executed, the commands within it are
      automatically carried out. Consequently, to make changes to the launch
      command, it is sufficient to modify the file.</para>
    </section>

    <section id="launch.command.arguments">
      <title>Launch command arguments</title>

      <para>The basic command has already been mentioned above. Changes to this
      command involve the addition of "arguments" to it. Arguments are added
      after the initial <command>java</command>, and before the <literal>-jar
      OmegaT.jar</literal>. Note that in Windows you can change the
      <filename>OmegaT.l4J.ini</filename> file to reflect your preferences. In
      other platforms, you can modify
      <filename>Configuration.properties</filename> file on the Mac, or
      <filename>OmegaT</filename> launcher under Linux to do the same.</para>

      <para>A list of possible arguments is given below. Advanced users can
      obtain more information on the arguments by typing <emphasis>man
      java</emphasis> in the terminal window.</para>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">User interface language
          </emphasis></para>

          <para><emphasis role="bold"><literal>-Duser.language=<parameter>XX</parameter></literal></emphasis>
          Normally, i.e. when <application>OmegaT</application> is launched
          without any arguments, the program first detects the language of the
          user's operating system. If a user interface in this language is
          available, <application>OmegaT</application> uses it. So, if the
          user's operating system is Russian and
          <application>OmegaT</application> has been localized in Russian,
          <application>OmegaT</application> is displayed with a Russian user
          interface, Russian menus, etc. If the language of the user's system is
          not available, <application>OmegaT</application> defaults to
          English. This is the standard behavior.</para>

          <para>The <literal>-Duser.language=<parameter>XX</parameter></literal>
          argument causes <application>OmegaT</application> to use the language
          specified rather than the language of the user's operating
          system. <parameter>XX</parameter> in the command stands for the
          two-digit code of the desired language. To launch
          <application>OmegaT</application> with a French interface (for example
          on a Russian operating system), the command would therefore be:</para>

          <programlisting>java -Duser.language=fr -jar OmegaT.jar</programlisting>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">User country</emphasis></para>

          <para><emphasis role="bold">-Duser.country=<parameter>XX</parameter></emphasis>
          Besides the language, you can also specify the country, for example
          <literal>CN</literal> or <literal>TW</literal> in case of the Chinese
          language. To display the instant start guide in the desired language,
          you need to specify both the language and the country. This is
          necessary even if there's only one combination available, like
          <literal>pt_BR</literal> in case of Brazilian Portuguese.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Memory assignment</emphasis></para>

          <para><emphasis role="bold"><literal>-Xmx<parameter>??</parameter>M</literal></emphasis>This
          command assigns more memory to <application>OmegaT</application>. By
          default, 1024 MB are assigned, so there is no advantage in assigning
          less than this figure. <parameter>??</parameter> stands for the amount
          of memory assigned, in megabytes. The command to launch
          <application>OmegaT</application> with assignment of 2048 MB (2 GB) of
          memory is therefore:</para>

          <programlisting>java -Xmx2048M -jar OmegaT.jar</programlisting>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Proxy host IP address</emphasis></para>

          <para><emphasis role="bold"><literal>-Dhttp.proxyHost=<parameter>nnn.nnn.nnn.nnn</parameter></literal></emphasis>
          The IP address of your proxy server, if your system uses a
          proxy.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Proxy host port number</emphasis></para>

          <para><emphasis role="bold"><literal>-Dhttp.proxyPort=<parameter>NNNN</parameter></literal></emphasis>
          The port number your system uses to access the proxy server.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Google Translate V2</emphasis></para>

          <para><emphasis role="bold"><literal>-Dgoogle.api.key=<parameter>A123456789B123456789C123456789D12345678</parameter></literal></emphasis>
          If you have signed up for the Google Translate services, enter your
          private Google API key here. Note that the key is 38 characters
          long.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Microsoft Translator</emphasis></para>

          <para>Make sure that you have a free Microsoft account. You’ll need
          this to sign-in to <ulink url="http://datamarket.azure.com/dataset/bing/microsofttranslator#schema">Windows
          Azure Marketplace</ulink> and use the Translator service. Note that
          up to 2M characters per month are free of charge. The two entries
          required are available in your <ulink url="https://datamarket.azure.com/account">account page</ulink>
          under Primary account key and Customer-ID:</para>

          <programlisting>-Dmicrosoft.api.client_id=<parameter>XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX</parameter></programlisting>

          <programlisting>-Dmicrosoft.api.client_secret=<parameter>XXXX9xXxX9xXXxxXXX9xxX99xXXXX9xx9XXxXxXXXXX=</parameter></programlisting>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Yandex Translate</emphasis></para>

          <para>Make sure that you have a free Yandex account. You’ll need this
          to be able to obtain and use Yandex Translate API key. API keys can be
          requested using <ulink url="http://api.yandex.com/key/form.xml?service=trnsl">API key request
          form</ulink>, and viewed on <ulink url="http://api.yandex.com/key/keyslist.xml">My Keys</ulink>
          page.</para>

          <programlisting>-Dyandex.api.key=<parameter>trnsl.1.1.XXXXXXXXXXXXXXXX.XXXXXXXXXXXXXXXX.XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</parameter></programlisting>
        </listitem>
      </itemizedlist>

      <para>Arguments can be combined: to launch
      <application>OmegaT</application> with all the examples described above,
      the command would be:</para>

      <programlisting>java -Dswing.aatext=true -Duser.language=pt -Duser.country=BR -Xmx2048M -Dhttp.proxyHost=192.168.1.1 -Dhttp.proxyport=3128 -jar -OmegaT.jar</programlisting>
    </section>

    <section id="omegat.command.arguments">
      <title>OmegaT in the command line mode</title>

      <para>The purpose of the console mode is to use OmegaT as a translation
      tool in a scripting environment. When started in console mode, no GUI is
      loaded (so it will work on any console) and the given project is
      automatically processed as requested.</para>

      <section id="console.mode.prerequisites">
        <title>Prerequisites</title>

        <para>To run <application>OmegaT</application> in the command line
        mode, a valid <application>OmegaT</application> project must be
        present. The location does not matter, since you have to add it to the
        command line at the start-up anyway.</para>

        <para>If you need altered settings, the configuration files must be
        available. This can be achieved in two ways:</para>

        <itemizedlist>
          <listitem>
            <para>Run <application>OmegaT</application> normally (with the
            GUI) and specify the settings. If you start
            <application>OmegaT</application> in console mode, it will use the
            same settings.</para>
          </listitem>

          <listitem>
            <para>If you can't run <application>OmegaT</application> normally
            (no graphical environment available): copy the settings files from
            some other <application>OmegaT</application> installation on another
            machine to a specific folder. The location does not matter, since
            you can add it to the command line at startup. The relevant files
            are <filename>filters.conf</filename> and
            <filename>segmentation.conf</filename> and can be found in the user
            home folder (e.g. <filename>C:\Documents and
            Settings\<parameter>user</parameter>\OmegaT</filename> under
            Windows, <filename>~/.omegat/</filename> under Linux).</para>
          </listitem>
        </itemizedlist>
      </section>

      <section id="starting.in.console.mode">
        <title>Starting in console mode</title>

        <para>To start <application>OmegaT</application> in console mode, some
        extra parameters have to be passed to it on startup. The most important
        is <literal>/path/to/project</literal>, and optionally
        <literal>--config-dir=<parameter>/path/to/config-files/</parameter></literal>. Example:</para>

        <programlisting>java -jar OmegaT.jar <parameter>/path/to/project</parameter> \
    --config-dir=<parameter>/path/to/config-files/</parameter> \
    --config-file=<parameter>/path/to/config-file/</parameter> \
    --mode=<parameter>console-translate|console-createpseudotranslatetmx|console-align</parameter> \
    --source-pattern=<parameter>regexp</parameter></programlisting>

        <para>Note that all parameters start with a double <literal>-</literal>
        character.</para>

        <para><emphasis role="bold">Explanation:</emphasis></para>

        <itemizedlist>
          <listitem>
            <para><literal>/path/to/project</literal> tells
            <application>OmegaT</application> where to find the project to
            translate. If given, <application>OmegaT</application> starts in
            console mode and will translate the given project.</para>
          </listitem>
        </itemizedlist>

        <itemizedlist>
          <listitem>
            <para><literal>--config-dir=<parameter>/path/to/config-files/</parameter></literal>
            tells <application>OmegaT</application> in which folder the
            configuration files are stored. If not given,
            <application>OmegaT</application> reverts to default values
            (<application>OmegaT</application> folder under user home or, if
            unavailable, the current working folder). Note the double
            <literal>-</literal> character.</para>
          </listitem>

          <listitem>
            <para><literal>--config-file=<parameter>/path/to/config-file/</parameter></literal>
            tells <application>OmegaT</application> what configuration file to
            use.</para>
          </listitem>
        </itemizedlist>

        <itemizedlist>
          <listitem>
            <para><emphasis><literal>--mode=<parameter>...</parameter></literal></emphasis>
            <application>OmegaT</application> starts in console mode to perform
            one of the following services automatically</para>

            <itemizedlist>
              <listitem>
                <para><emphasis><literal>--mode=console-translate</literal></emphasis></para>

                <para>In this mode, OmegaT will attempt to translate the files
                in <filename>/source/</filename> with the available translation
                memories. This is useful to run OmegaT on a server with TMX
                files automatically fed to a project.</para>
              </listitem>

              <listitem>
                <para><literal>--mode=console-createpseudotranslatetmx</literal></para>

                <para>In this mode OmegaT will create a TMX for the whole
                project, based on the source files only. You specify the TMX
                file to be created with</para>

                <para><literal>--pseudotranslatetmx=<parameter>allsegments.tmx</parameter>
                --pseudotranslatetype=<parameter>equal|empty</parameter></literal></para>

                <para>The argument <emphasis>pseudotranslatetype</emphasis>
                specifies, whether the target segments are to be equal to the
                source, or left empty.</para>
              </listitem>

              <listitem>
                <para><literal>--mode=console-align</literal></para>

                <para>In this mode, OmegaT will align files
                found in the <filename>/source/</filename> folder of the project
                with the contents found at the specified location. The resulting
                TMX is stored in the <filename>/omegat/</filename> folder under
                the name <filename>align.tmx</filename>. Which files are used for alignment depends on if the file
                  filter supports it. Some supported filters: ILIAS Language File, Java(TM) Resource Bundles,
                  Key=Value Text, Magento CE Locale CSV, MoodlePHP, Mozilla DTD, Mozilla FTL, PO, RC, SubRip Subtitles,
                  Windows Resources</para>

                <para>Additional parameter is required in this case,
                specifying the location of the target data:</para>

                <para><literal>--alignDir=<parameter>&lt;location of translated
                files&gt;</parameter></literal></para>

                <para><filename>alignDir</filename> must contain a translation
                in the target language of the project. For instance, if the
                project is EN-to-FR, <filename>alignDir</filename> must contain
                a bundle ending with <literal>_fr</literal>. The resulting TMX
                is stored in the <filename>omegat</filename> folder under the
                name <filename>align.tmx</filename>.</para>
              </listitem>
            </itemizedlist>
          </listitem>

          <listitem>
            <para><literal>--source-pattern=<parameter>regexp</parameter></literal></para>

            <para>When mode has been used, this option will specify the files
            to be processed automatically. If the parameter is not specified,
            all files will be processed. Here's few typical examples to limit
            your choice:</para>

            <itemizedlist>
              <listitem>
                <para><literal>.*\.html</literal></para>

                <para>All HTML files will be translated - note that the period
                in the usual <literal>*.html</literal> has to be escaped
                (<literal>\.</literal>) as specified by the rules for regular
                expressions</para>
              </listitem>

              <listitem>
                <para><literal>test\.html</literal></para>

                <para>Only the file test.html at the root of the source folder
                will be translated. If there are other files named test.html
                in other folders, they will be ignored.</para>
              </listitem>

              <listitem>
                <para><literal>dir-10\\test\.html</literal></para>

                <para>Only the file <filename>test.html</filename> in the folder
                <filename>dir-10</filename> will be processed. Again note that
                the backslash is escaped as well.</para>
              </listitem>
            </itemizedlist>
          </listitem>

          <listitem>
            <para><literal>--tag-validation=<parameter>abort|warn</parameter></literal>
            <parameter>outputFileName</parameter></para>

            <para>This option allows the tag validation in a batch mode. If
            <literal>abort</literal> is selected, the tag validator will stop on
            the first invalid segment. If <literal>warn</literal> is specified,
            the tag validator will process all segments and write warnings about
            any segments with invalid tags into the file specified.</para>
          </listitem>
        </itemizedlist>

        <itemizedlist>
          <listitem>
            <para><literal>--no-team</literal> addresses projects set up for
            team work. Use it if OmegaT is not to synchronize the project
            contents.</para>
          </listitem>
        </itemizedlist>

        <itemizedlist>
          <listitem>
            <para><literal>--disable-project-locking</literal> allows, under
            Windows, to open the same project with several instances of
            OmegaT. By default, under Windows,
            <filename>omegat.project</filename> is locked, and an error message
            is received when trying to open a project already opened in another
            instance of OmegaT. With that option, no locking occurs.</para>
          </listitem>
        </itemizedlist>
      </section>

      <section id="console.mode.option.quiet">
        <title>Quiet option</title>

        <para>An extra command line parameter specific to console mode:
        <literal>--quiet</literal>. In the quiet mode, less info is logged to
        the screen. The messages you would usually find in the status bar are
        not displayed.</para>

        <para>Usage: <literal>java -jar OmegaT.jar /path/to/project
        --mode=console-translate --quiet</literal></para>
      </section>
    </section>
  </section>

  <section id="building.OmegaT.from.source">
    <title>Building <application>OmegaT</application> From Source</title>

    <para>The sources of the current version can be retrieved with a Git client
    from the repository <ulink url="https://git.code.sf.net/p/omegat/code"/>
    or directly on <ulink url="https://sourceforge.net/p/omegat/code/ci/master/tarball?path=">SourceForge</ulink>.
    </para>

    <para>Once the code is downloaded, open a command in the source folder and
    type:</para>

    <programlisting>gradlew assembleDist</programlisting>

    <para>This will create a full distribution of OmegaT in the
    <filename>./build/distributions</filename> folder, where you will find a zip
    containing everything needed to run
    <application>OmegaT</application>.</para>

    <para>You can also run directly the application with the following
    command:</para>

    <programlisting>gradlew run</programlisting>

    <para>Detailed instructions on building are in the docs_devel <ulink url="https://sourceforge.net/p/omegat/svn/HEAD/tree/trunk/docs_devel/README.txt">readme</ulink>.</para>
  </section>
</chapter>

  <chapter id="menus">
  <title>Menus</title>

  <section id="menus.project">
  <title>Project</title>

  <variablelist>
    <varlistentry>
      <term><guimenuitem>New...</guimenuitem></term>

      <listitem>
        <para>Creates and opens a new project.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><guimenuitem>Download Team Project...</guimenuitem></term>

      <listitem>
        <para>Creates a local copy of a remote OmegaT project. See <link linkend="howto.useteamproject">Use a team project</link> for
        details.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Open...</term>

      <listitem>
        <para>Opens a previously created project.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Open Recent Project</term>

      <listitem>
        <para>Give access to the ten last edited projects. Clicking on one
        will save the current project, close it and open the other
        project.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Copy Files to Source Folder...</term>

      <listitem>
        <para>Copies the selected files to the <filename>source</filename>
        folder and reloads the project to load the new files.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Download MediaWiki Page...</term>

      <listitem>
        <para>To translate the contents of a Wikipedia page (for example):</para>

        <orderedlist>
          <listitem>
            <para>Click the <guilabel>Edit</guilabel> tab on the Wikipedia page.</para>
          </listitem>

          <listitem>
            <para>Copy the URL of the page (ending with <guilabel>action=edit</guilabel>) and paste it into <application>OmegaT</application>.</para>
          </listitem>
        </orderedlist>

        <para>When you have finished your translation, to import it into Wikipedia:</para>

        <orderedlist>
          <listitem>
            <para>Open the <filename>.UTF8</filename> file generated in the <filename>/target</filename> folder.</para>
          </listitem>

          <listitem>
            <para>Copy the text and paste it into the translated version of the Wikipedia page.</para>
          </listitem>
        </orderedlist>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Reload</term>

      <listitem>
        <para>Reloads the project to take external changes in source files and
        project settings into account.</para>

        <para>New translation memories placed in the <filename>/tm</filename> folder while translating are loaded automatically as soon as the cursor moves from one segment to another.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Close</term>

      <listitem>
        <para>Saves the translation and closes the project.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Save</term>

      <listitem>
        <para>Saves the internal translation memory to the hard disk. OmegaT
        automatically saves translations every 3 minutes as well as when you
        close the project or quit OmegaT.</para>

        <para>The interval of 3 minutes can be changed in <link linkend="dialogs.preferences.savingandoutput"><menuchoice>
            <guimenuitem>Options</guimenuitem>

            <guimenuitem>Preferences</guimenuitem>

            <guimenuitem>Saving and Output</guimenuitem>
          </menuchoice></link>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Commit Source Files</term>

      <listitem>
        <para>Uploads to the repository the files that have been added or
        modified locally in the <filename>source</filename> directory.</para>

        <para>This function is specific to team projects.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Commit Target Files</term>

      <listitem>
        <para>Uploads to the repository the files that have been created
        locally in the <filename>target</filename> directory.</para>

        <para>This function is specific to team projects.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Create Translated Documents</term>

      <listitem>
        <para>Creates the target documents based on your translation. The
        created target documents are located in the
        <filename>target</filename> folder.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Create Current Translated Document</term>

      <listitem>
        <para>Creates the target document corresponding to the current
        document in translation.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Open MED Project...</term>

      <listitem>
        <para>Opens a project package in the MED format defined by the EU Directorate-General for Translation.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Create MED Projects...</term>

      <listitem>
        <para>Converts the current project into a MED package.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Properties...</term>

      <listitem>
        <para>Displays <link linkend="dialogs.projectproperties">Project
        properties</link> dialog to edit project languages and folder
        locations.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Project Files...</term>

      <listitem>
        <para>Opens the <link linkend="windows.projectfiles">Project
        files</link> window.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Access Project Contents</term>

      <listitem>
        <para>Gives access to the project folders.</para>

        <para>In addition, two menu entries allow opening directly the current
        source and target documents and the writable glossary. The documents
        are opened by the application chosen by the operating system. If the
        documents are not available, the entry is greyed out.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Quit</term>

      <listitem>
        <para>Saves the project and quits <application>OmegaT</application>.
        If you haven't yet saved the project, this manually confirms whether
        you really wish to quit.</para>
      </listitem>
    </varlistentry>
  </variablelist>
</section>
  <section id="menus.edit">
  <title>Edit</title>

  <para>This menu displays entries only when a project is open.</para>

  <variablelist>
    <varlistentry>
      <term><guimenuitem>Undo Last Action</guimenuitem></term>

      <listitem>
        <para>Restores the status before the last editing action was taken.
        This command does not work once the modified segment has been
        validated.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Redo Last Action</term>

      <listitem>
        <para>Restores the status before the last editing action was
        cancelled. This command does not work once the modified segment has
        been validated.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Replace With Match or Selection</term>

      <listitem>
        <para>Replaces the whole target segment with the currently selected
        fuzzy match (by default the first match is selected).</para>

        <para>If some texts are selected within the fuzzy match, only this
        selection will replace the whole target segment.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Insert Match or Selection</term>

      <listitem>
        <para>Inserts the currently selected fuzzy match at the cursor
        position. If part of the target segment has been selected, this
        function overwrites the selected portion.</para>

        <para>If some texts are selected within the fuzzy match, only this
        selection will be inserted at the cursor position.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Replace with Machine Translation</term>

      <listitem>
        <para>Replaces the target segment with the translation, provided by
        the selected Machine Translation service. No action is taken, if no
        Machine Translation service has been activated (in <menuchoice>
            <guimenu>Options</guimenu>

            <guimenuitem>Machine Translate</guimenuitem>
          </menuchoice>).</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Replace with Source</term>

      <listitem>
        <para>Replaces the whole target segment with the source.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Insert Source</term>

      <listitem>
        <para>Inserts the source at the cursor position.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Insert Missing Source Tags</term>

      <listitem>
        <para>Inserts the source tags (if they where missing) at the cursor
        position.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Insert Next Missing Tag</term>

      <listitem>
        <para>Inserts only one tag (among the missing ones) at the cursor
        position.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Export Selection</term>

      <listitem>
        <para>Exports the current selection to a text file for processing. If
        no text has been selected, the current source segment is written to
        this file. When the user exits <application>OmegaT</application>, this
        file is not emptied, in order to be consistent with usual clipboard
        behavior. The exported contents are copied to the file
        <filename>selection.txt</filename> located in the User's preference
        files folder.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Create Glossary Entry</term>

      <listitem>
        <para>Allows the user create an entry in the default glossary
        file.</para>

        <para>If you select a text string (in any pane) before pressing
        <keycombo>
            <keycap>Ctrl</keycap>

            <keycap>Shift</keycap>

            <keycap>G</keycap>
          </keycombo>, the text will be pasted by default in the
        <guilabel>Source term</guilabel> field.</para>

        <para>This can apply also to <guimenuitem>Target term</guimenuitem>
        and <guimenuitem>Comment </guimenuitem>fields if new selections are
        made and <keycombo>
            <keycap>Ctrl</keycap>

            <keycap>Shift</keycap>

            <keycap>G</keycap>
          </keycombo> pressed again.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Search Project...</term>

      <listitem>
        <para>Opens a new <link linkend="windows.textsearch">Search
        window</link>.</para>

        <para>If you select a text string (in any pane) before pressing
        <keycombo>
            <keycap>Ctrl</keycap>

            <keycap>F</keycap>
          </keycombo>, the text will be pasted by default in the
        <guilabel>Search for</guilabel> field.</para>

        <para>Pressing <keycombo>
            <keycap>Ctrl</keycap>

            <keycap>Shift</keycap>

            <keycap>F</keycap>
          </keycombo> displays the last already opened Search window (instead
        of opening a new one).</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Search and Replace...</term>

      <listitem>
        <para>Opens a new <link linkend="windows.textreplace">Search
        and replace window</link>.</para>

        <para>If you select a text string (in any pane) before pressing
        <keycombo>
            <keycap>Ctrl</keycap>

            <keycap>K</keycap>
          </keycombo>, the text will be pasted by default in the
        <guilabel>Search for</guilabel> field.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Search Dictionaries</term>

      <listitem>
        <para>If <link linkend="dialogs.preferences.dictionary">automatic searching in dictionaries</link> is disabled, this function allows you to search for the selected word in the dictionaries.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Switch case to</term>

      <listitem>
        <para>Changes the case of the highlighted text in the target segment
        to the selected option (Lower case, Upper case, Title case or Sentence
        case). Use <keycombo>
            <keycap>Shift</keycap>

            <keycap>F3</keycap>
          </keycombo> to cycle through the four alternatives. If no text is
        selected, <application>OmegaT</application> selects the word that
        contains the letter immediately to the right of the cursor.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Select Match</term>

      <listitem>
        <para>Selects the previous, the next or the Nth fuzzy match displayed
        in the fuzzy match pane to replace or insert it to the segment.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Use as Default Translation</term>

      <listitem>
        <para>If there's several alternative translations available for the
        active segment, you can label the alternative selected as the default
        translation. The entry will be greyed, if there's just one translation
        available.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Create Alternative Translation</term>

      <listitem>
        <para>The one and the same segment may, depending on the context,
        require different translations. Select this menu item, if the current
        translation does not apply and enter the alternative
        translation.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Remove Translation</term>

      <listitem>
        <para>Deletes the translation and set the segment as
        untranslated.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Set empty translation</term>

      <listitem>
        <para>Define the translation as being empty. In the target document,
        nothing will appear for this segment. In the Editor, the translation
        is displayed as &lt;EMPTY&gt;</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Register Identical Translation</term>

      <listitem>
        <para>Use this command to register the translation to be identical to
        the source, even if <link linkend="dialogs.preferences.editor.allowtranslationtobeequaltosource"><guilabel>Allow
        translation to be equal to source</guilabel></link> is not
        checked.</para>
      </listitem>
    </varlistentry>
  </variablelist>
</section>
  <section id="menus.goto">
  <title>Go To</title>

  <para>This menu displays entries only when a project is open.</para>

  <variablelist>
    <varlistentry>
      <term>Next Untranslated Segment</term>

      <listitem>
        <para>Moves to the next segment that has no equivalent in the
        translation memory.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Next Translated Segment</term>

      <listitem>
        <para>Moves to the next already translated segment, ignoring
        untranslated segments.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Next Segment</term>

      <listitem>
        <para>Moves to the next segment. If the current segment is the last
        segment in a file, it moves to the first segment of the next
        file.</para>

        <para>Note: <keycap>Enter</keycap> is an alternate shortcut if <link linkend="dialogs.preferences.general.usetabtoadvance">Use TAB to
        Advance</link> option is not selected.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Previous Segment</term>

      <listitem>
        <para>Moves to the previous segment. If the current segment is the
        first one in a file, it moves to the last segment of the previous
        file.</para>

        <para>Note: <keycombo>
            <keycap>Ctrl</keycap>

            <keycap>Enter</keycap>
          </keycombo> is an alternate shortcut if <link linkend="dialogs.preferences.general.usetabtoadvance">Use TAB to
        Advance</link> option is not selected.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Segment number...</term>

      <listitem>
        <para>The segment is opened when either its segment call-out or
        segment number is entered.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Next Note</term>

      <listitem>
        <para>The next segment with a note attached to it, will open.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Previous Note</term>

      <listitem>
        <para>The previous segment with a note will open.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Source of Selected Match</term>

      <listitem>
        <para>Moves to the segment that does correspond to the current
        selected match in the <guilabel>Fuzzy matches</guilabel> pane.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Forward in history...</term>

      <listitem>
        <para><application>OmegaT</application> remembers the segments
        executed. With this command you can step forward to the segment, you
        have previously left by the <guimenuitem>Back in
        history</guimenuitem>... command.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Back in history...</term>

      <listitem>
        <para>With this command you can move backward one segment at a time,
        to return later to the current segment using <guimenuitem>Forward in
        history...</guimenuitem>command below.</para>
      </listitem>
    </varlistentry>
  </variablelist>
</section>
  <section id="menus.view">
  <title>View</title>

  <variablelist>
    <varlistentry>
      <term>Mark Translated Segments</term>

      <listitem>
        <para>If checked, the translated segments will be marked in
        yellow.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Mark Untranslated Segments</term>

      <listitem>
        <para>If checked, the untranslated segments will be marked in
        violet.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Mark Paragraph delimitations</term>

      <listitem>
        <para>If checked, the separations between paragraphs in the source document are indicated visually.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Display Source Segments</term>

      <listitem>
        <para>If checked, source segments will be shown and marked in green.
        If not checked, source segments will not be shown.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Mark Non-Unique Segments</term>

      <listitem>
        <para>If checked, non-unique segments will be marked in pale
        grey.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Mark Segments with Notes</term>

      <listitem>
        <para>If checked, segments with notes will be marked in cyan. This
        marking has priority over <guimenuitem>Mark Translated
        Segments</guimenuitem> and <guimenuitem>Mark Untranslated
        Segments</guimenuitem>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Mark Non-breakable Spaces</term>

      <listitem>
        <para>If checked, non-breakable spaces will be displayed with a grey
        background.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Mark Whitespace</term>

      <listitem>
        <para>If checked, white spaces will be displayed with a small
        dot.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Mark Bidirectional Algorithm Control Characters</term>

      <listitem>
        <para>This option displays <ulink url="http://www.w3.org/International/questions/qa-bidi-controls">bidirectional
        control characters</ulink></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Mark Auto-Populated Segments</term>

      <listitem>
        <para>If checked, the background of all segments where the target
        segment has been auto-populated (from TMXs placed in
        <filename>/tm/auto</filename> for example) are displayed in colour.
        The colours are displayed as long as the <link linkend="dialogs.preferences.editor.saveautopopulatedstatus"><guimenuitem>Save
        auto-populated status</guimenuitem></link> option is checked. Usual
        translations inserted from the auto folder are displayed in orange.
        Other translations, identified specifically in the TMX, can be
        displayed using different colours. For technical details, see the
        <ulink url="http://sourceforge.net/p/omegat/feature-requests/963/">Request
        For Enhancement</ulink>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Aggressive Font Fallback</term>

      <listitem>
        <para>Check this option in case <application>OmegaT</application> does
        not display some glyphs properly (even if the fonts containing the
        relevant glyphs are installed on your machine). Note: on Windows it
        seems that this manual font fallback mechanism can interfere with
        standard font fallback, causing undesirable font substitution. For
        that reason, it is OFF by default.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Modification Info</term>

      <listitem>
        <para>Setting the Display Modification option to <guimenuitem>Current
        segment</guimenuitem> will display the time and the author of the last
        change in the current segment. Setting it to <guimenuitem>All
        segments</guimenuitem> shows this information for all segments and
        <guimenuitem>None</guimenuitem> turns this option off.</para>
      </listitem>
    </varlistentry>
  </variablelist>
</section>
  <section id="menus.tools">
  <title>Tools</title>

  <variablelist>
    <varlistentry>
      <term>Check Issues...</term>

      <listitem>
        <para>Quality assurance tool that carries out all the automatic checks
        in one go and displays the results in a window.</para>

        <para>Four types of issues are detected:</para>

        <itemizedlist>
          <listitem>
            <para>missing or displaced tags, including <link linkend="dialogs.preferences.tagprocessing">custom tags</link>.
            The <guilabel>Tag Issues</guilabel> option is always
            selected.</para>
          </listitem>

          <listitem>
            <para><guilabel>Spelling Issues</guilabel> (optional). Only works
            if a spelling dictionary is installed.</para>
          </listitem>

          <listitem>
            <para><guilabel>Terminology Issues</guilabel> (optional).</para>
          </listitem>

          <listitem>
            <para><guilabel>LanguageTool Issues</guilabel> (optional).</para>
          </listitem>
        </itemizedlist>

        <para>The results window is laid out in the form of a table in
        which:</para>

        <itemizedlist>
          <listitem>
            <para>double-clicking a row activates the corresponding segment in
            the Editor pane,</para>
          </listitem>

          <listitem>
            <para>clicking a column header changes the sort order for the
            column,</para>
          </listitem>

          <listitem>
            <para>selecting or moving the mouse over a row displays a pop-up
            menu icon in the last column containing actions for correcting or
            ignoring the error.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Check Issues for Current Document</term>

      <listitem>
        <para>As above, but only for the document currently displayed in the
        Editor pane.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Statistics</term>

      <listitem>
        <para>Opens a new window and displays the project statistics, i.e. the
        project totals and totals for every file in the project.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Match Statistics</term>

      <listitem>
        <para>Displays the Match Statistics for the project: the number of
        repetitions, exact matches, fuzzy matches and no-matches for segments,
        words and characters.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Match Statistics per File</term>

      <listitem>
        <para>Displays the Match Statistics for each file of the project: the
        number of repetitions, exact matches, fuzzy matches and no-matches for
        segments, words and characters.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Align Files...</term>

      <listitem>
        <para>Select the two files to be aligned (the source file and its
        translation) and click OK to open the <link linkend="windows.aligner"><guilabel>Align</guilabel>
        window</link>.</para>

        <para>The supported file formats are those listed in <menuchoice>
            <guimenuitem>Project</guimenuitem>

            <guimenuitem>Properties</guimenuitem>

            <guimenuitem>File Filters</guimenuitem>
          </menuchoice>.</para>

        <para>The source and target files can have different formats (for
        example, a <filename>.docx</filename> file can be aligned with a
        <filename>.pdf</filename> file).</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Scripting...</term>

      <listitem>
        <para>Opens the <link linkend="windows.scripts"><guilabel>Scripting</guilabel>
        window</link>, where the location of scripts can be set, and where
        scripts can be written, run and associated with a shortcut.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>n - (script name)</term>

      <listitem>
        <para>Launches scripts that have been associated with a number.</para>

        <para>To associate a script with a number:</para>

        <orderedlist>
          <listitem>
            <para>Open the Scripting window</para>
          </listitem>

          <listitem>
            <para>Select the script you want from the list on the left</para>
          </listitem>

          <listitem>
            <para>At the bottom of the window, right-click on a free number
            and select <guilabel>Add Script</guilabel>.</para>
          </listitem>
        </orderedlist>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>(external search commands)</term>

      <listitem>
        <para>If commands to perform external searches have been defined in the <link linkend="dialogs.preferences.externalsearch">Preferences</link>, they are listed and accessible here.</para>
      </listitem>
    </varlistentry>
  </variablelist>
</section>
  <section id="menus.options">
  <title>Options</title>

  <variablelist>
    <varlistentry>
      <term>Preferences...</term>

      <listitem>
        <para>Opens the <link linkend="dialogs.preferences">Preferences</link>
        dialog.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Machine Translate</term>

      <listitem>
        <para>Allows you to activate/deactivate the Machine Translation tools
        offered.</para>

        <para>If several translation engines are selected, then <keycombo>
            <keycap>Ctrl</keycap>

            <keycap>M</keycap>
          </keycombo> is also used to switch between them and insert the last
        one selected.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Glossary</term>

      <listitem>
        <para>Select <guimenuitem>Taas Terminology Lookup</guimenuitem> to
        activate this lookup.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Dictionary</term>

      <listitem>
        <para>Check the <guimenuitem>Use Fuzzy Matching for Dictionary Entries</guimenuitem> option if you want dictionaries to display words that have the same root.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Auto-completion</term>

      <listitem>
        <para>If <guimenuitem>Show Relevant Suggestions
        Automatically</guimenuitem> option is checked, Auto-completer is
        launched automatically by typing the first letters of a translated
        glossary entry, or by typing "&lt;" in case of tags.</para>

        <para>Check <guimenuitem>History Completion</guimenuitem> to display suggested words as soon as their first letters are entered.</para>

        <para>Check <guimenuitem>History Prediction</guimenuitem> to display suggested words that commonly follow the word that has just been entered.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>File Filters...</term>

      <listitem>
        <para>Opens the <link linkend="dialogs.preferences.filefilters">File
        Filters</link> options in the Preferences dialog.</para>

        <para>These settings apply to OmegaT level, to all projects.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Segmentation...</term>

      <listitem>
        <para>Opens the <link linkend="dialogs.preferences.segmentationsetup">Segmentation
        Setup</link> options in the Preferences dialog.</para>

        <para>These settings apply to OmegaT level, to all projects.</para>

      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Editor...</term>

      <listitem>
        <para>Opens the <link linkend="dialogs.preferences.editor">Editor</link> options in the
        Preferences dialog.</para>

        <para>These settings apply to OmegaT level, to all projects.</para>

      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Access Configuration Folder</term>

      <listitem>
        <para>Opens the local directory where OmegaT configuration files are
        stored (depends on the Operating system).</para>
      </listitem>
    </varlistentry>
  </variablelist>
</section>
  <section id="menus.help">
  <title>Help</title>

  <variablelist>
    <varlistentry>
      <term>User's Manual...</term>

      <listitem>
        <para>Opens this manual in the default browser.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>About...</term>

      <listitem>
        <para>Displays copyright, credits and license information.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Last Changes...</term>

      <listitem>
        <para>Displays the list of new functionalities, enhancements and bug
        fixes for each new release.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Log...</term>

      <listitem>
        <para>Displays the current log file. The title of the dialog reflects
        the file actually used (which depends on how many instances of OmegaT
        are running concurrently).</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Check for Updates...</term>

      <listitem>
        <para>Checks to see whether a more recent version of <application>OmegaT</application> has been released.</para>
      </listitem>
    </varlistentry>
  </variablelist>
</section>
</chapter>

  <chapter id="windows.and.dialogs">
  <title>Windows and dialogs</title>

  <para>The difference is thin: we call "Window" a window that can stay open
  next to the editor and interact with it, and "dialog" a window where you
  must select parameters before closing it and pursuing your translation
  activity.</para>

  <section id="dialogs.projectproperties">
  <title>Project Properties</title>

  <para>This dialog is accessible by selecting <menuchoice>
      <guimenuitem>Project</guimenuitem>

      <guimenuitem>Properties...</guimenuitem>
    </menuchoice></para>

  <section>
    <title>Languages</title>

    <para>You can either enter the source and target languages by hand or use
    the drop down menus. Bear in mind that changing the languages may render
    the currently used translation memories useless since their language pair
    may not longer match the new languages.</para>

    <para>Tokenizers corresponding to the selected languages are
    displayed.</para>
  </section>

  <section>
    <title>Options</title>

    <variablelist>
      <varlistentry>
        <term>Enable Sentence-level segmentation</term>

        <listitem>
          <para>The segmentation settings only address the way the source
          files are handled by <application>OmegaT</application>. The
          predominant way of segmenting the sources is the sentence-level
          segmenting, so this check box should in a normal case be left
          checked.</para>

          <para>In some seldom cases the alternative, i.e. segmenting by
          paragraphs, may be preferred. Changing this flag does not modify the
          segmentation of already existing translation memories. If you decide
          mid-translation to switch from sentence to paragraph translation,
          the internal translation memory of the project will not be changed
          (OmegaT may upgrade old translation memories that did not use
          sentence segmentation, but not vice versa), but OmegaT will attempt
          to create paragraph fuzzy matches by gluing together existing
          sentence translations.</para>

          <para>Changing segmentation settings may cause some already
          translated segments to be split or merged. This will effectively
          return them to the "untranslated" status, as they will no longer
          match segments recorded in the project memory, even though their
          original translation is still there.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Auto-propagation of Translations</term>

        <listitem>
          <para>In case there are non-unique segments in source documents, the
          Auto-propagation check box offers the user the following two
          possibilities as regards automatic translation: if checked, the
          first translated segment will be assumed as the default translation
          and its target text will be automatically used for later hits during
          the translation process. Mistranslated segments can of course be
          corrected later manually using <guimenuitem>Create Alternative
          Translation</guimenuitem>. If the Auto-propagation check box is not
          checked, the segments with alternative translations are left
          untranslated until the user has decided which translation is to be
          used.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Remove Tags</term>

        <listitem>
          <para>When enabled, all the formatting tags are removed from source
          segments. This is especially useful when dealing with texts where
          inline formatting is not really useful (e.g., OCRed PDF, bad
          converted .odt or .docx, etc.) In a normal case it should always be
          possible to open the target documents, as only inline tags are
          removed. Non-visible formatting (i.e., which doesn't appear as tags
          in the OmegaT editor) is retained in target documents.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>External Post-processing Command</term>

        <listitem>
          <para>This area allows entering an external post-processing command
          (for instance, a script to rename files) that will be applied each
          time Create Translated Documents is used. This external command
          cannot include "pipes", etc., which is why calling a script is
          recommended.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><guibutton>Segmentation...</guibutton></term>

        <listitem>
          <para>The segmentation rules are generally valid across all the
          projects. The user, however, may need to generate a set of rules,
          specific to the project in question. Use this button to open a
          dialog, activate the check box <guimenuitem>Project specific
          segmentation rules</guimenuitem>, then proceed to adjust the
          segmentation rules as desired. The new set of rules will be stored
          together with the project and will not interfere with the general
          set of segmentation rules. To delete project specific segmentation
          rules, uncheck the check box. See <link linkend="dialogs.preferences.segmentationsetup">Segmentation Setup
          preferences</link> for more information on segmentation
          rules.</para>

          <para><emphasis>Hint:</emphasis> the set of segmentation rules for a
          given project is stored as
          <filename>project/omegat/segmentation.conf.</filename></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><guibutton>File Filters...</guibutton></term>

        <listitem>
          <para>In a similar fashion as above the user can create
          project-specific File filters, which will be stored together with
          the project and will be valid for the current project only. To
          create a project-specific set of file filters, click on the
          <guibutton>File filter ... </guibutton>button, then activate
          <guimenuitem>Enable project specific filters</guimenuitem> check box
          in the window that opens. A copy of the changed filters
          configuration will be stored with the project. To delete project
          specific file filters, uncheck the check box. Note that in the menu
          <guimenuitem>Options-&gt;File Filters</guimenuitem>, the global user
          filters are changed, not the project filters. See <link linkend="dialogs.preferences.filefilters">File Filters
          preferences</link> for more on the subject.</para>

          <para><emphasis>Hint:</emphasis> the set of file filters for a given
          project is stored as
          <filename>project/omegat/filters.xml.</filename></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Repository Mapping...</term>

        <listitem>
          <para>When working on a team project, this window allows you to define the mapping between remote folders and local folders (see examples <link linkend="howto.setupteamproject.mappingparameters">here</link>).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>External Search...</term>

        <listitem>
          <para>Defines the project-specific external search resources.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>File locations</title>

    <para>Here you can select different subfolders, for instance the subfolder
    with source files, subfolder for target files etc. If you enter names of
    folders that do not exist yet, <application>OmegaT</application> creates
    them for you. In case you decide to modify project folders, keep in mind
    that this will not move existing files from old folders to the new
    location.</para>

    <para>Clic on <guibutton>Exclusions...</guibutton> to define the files or
    folders that will be ignored by <application>OmegaT</application>. An
    ignored file or folder:</para>

    <itemizedlist>
      <listitem>
        <para>is not displayed in the Editor pane,</para>
      </listitem>

      <listitem>
        <para>is not taken into account in statistics,</para>
      </listitem>

      <listitem>
        <para>is not copied in /target folder during the translated files
        creation process.</para>
      </listitem>
    </itemizedlist>

    <para>In the Exclusion patterns dialog, it is possible to Add or Remove a
    pattern, or edit one by selecting a line and pressing F2. It is possible
    to use wildcards, using the <ulink url="https://ant.apache.org/manual/dirtasks.html#patterns">ant
    syntax</ulink>.</para>
  </section>
</section>

  <section id="windows.projectfiles">
  <title>Project Files</title>

  <para>This window is displayed automatically when OmegaT loads a project,
  and at any time by pressing <menuchoice>
      <guimenuitem>Project</guimenuitem>

      <guimenuitem>Project Files...</guimenuitem>
    </menuchoice>.</para>

  <para><remark>Note:</remark> it is possible to inhibit the window displaying
  at opening, by setting <emphasis>project_files_show_on_load</emphasis> to
  <emphasis>false</emphasis> in <filename>omegat.prefs</filename> file
  (accessible by <menuchoice>
      <guimenuitem>Options</guimenuitem>

      <guimenuitem>Access Configuration Folder</guimenuitem>
    </menuchoice> menu).</para>

  <para>Use <guimenuitem>Ctrl+L</guimenuitem> to open and <keycap>Esc</keycap>
  to close it. The <guilabel>Project Files</guilabel> Window displays the
  following information:</para>

  <itemizedlist>
    <listitem>
      <para>the total number of translatable files in the project. These are
      the files present in the /source folder in a format that OmegaT is able
      to recognize. This number is displayed in brackets, next to the "Project
      file" title</para>
    </listitem>

    <listitem>
      <para>the list of all translatable files in the project. Clicking on any
      file will open it for translation.</para>

      <para>Typing any text will open a <guilabel>Filter</guilabel> field
      where parts of filenames can be entered. You can select a file with
      <keycap>Up</keycap> and <keycap>Down</keycap> keys, and open it for
      translation by pressing <keycap>Enter</keycap></para>

      <para>Note: filenames (in first column) can be sorted alphabetically by
      clicking in the header. It also possible to change the position of a
      filename, by clicking on it and pressing <emphasis>Move ...</emphasis>
      buttons.</para>

      <para>Right-clicking on a filename opens a popup that allows to open the
      source file and (if it exists) the target file.</para>
    </listitem>

    <listitem>
      <para>File entries include their names, file filter types, their
      encoding and the number of segments each file contains</para>
    </listitem>

    <listitem>
      <para>the total number of segments, the number of unique segments in the
      whole project, and the number of unique segments already translated are
      shown at the bottom</para>
    </listitem>
  </itemizedlist>

  <para>The set of <emphasis role="bold">Unique </emphasis>segments is
  computed by taking all the segments and removing all duplicate segments.
  (The definition of “unique” is case-sensitive: "Run" and "run" are treated
  as being different)</para>

  <para>The difference between "Number of segments" and "Number of unique
  segments" provides an approximate idea of the number of repetitions in the
  text. Note however that the numbers do not indicate how relevant the
  repetitions are: they could mean relatively long sentences repeated a number
  of times (in which case you are fortunate) or it could describe a table of
  keywords (not so fortunate). The <filename>project_stats.txt</filename>
  located in the omegat folder of your project contains more detailed segment
  information, broken down by file.</para>

  <para>Modifying the segmentation rules may have the effect of modifying the
  number of segments/unique segments. This, however, should generally be
  avoided once you have started translating the project. See the chapter
  <emphasis>Segmentation rules</emphasis> for more information.</para>

  <para><emphasis role="bold">Adding files to the project: </emphasis>You can
  add source files to the project by clicking on the "<guimenuitem>Import
  Source Files..."</guimenuitem> button. This copies the selected files to the
  <filename>source</filename> folder and reloads the project to import the new
  files. You can also add source files from Internet pages, written in
  MediaWiki, by clicking on<guimenuitem> "Import from MediaWiki"</guimenuitem>
  button and providing the corresponding URL.</para>
</section>

  <section id="windows.textsearch">
  <title>Text Search</title>

  <para>Open the Search window with <keycombo>
      <keycap>Ctrl</keycap>

      <keycap>F</keycap>
    </keycombo> and enter the word or phrase you wish to search for in the
  <emphasis>Search for</emphasis> box.</para>

  <para>Alternatively, you can select a word or phrase in the Editor pane,
  Fuzzy matches pane or Glossary pane and hit <keycombo>
      <keycap>Ctrl</keycap>

      <keycap>F</keycap>
    </keycombo>. The word or phrase is entered in the <emphasis>Search
  for</emphasis> box automatically. You can have several Search windows open
  at the same time, but close them when they are no longer needed so that they
  do not clutter your desktop.</para>

  <para>Click the dropdown arrow of the <emphasis>Search for</emphasis> box to
  access the last 10 searches.</para>

  <para>The Search window has its own menus:</para>

  <itemizedlist>
    <listitem>
      <para>File &gt; Search for selection (<keycombo>
          <keycap>Ctrl</keycap>

          <keycap>F</keycap>
        </keycombo>): refocus on the search field and select all its
      contents.</para>
    </listitem>

    <listitem>
      <para>File &gt; Close (<keycombo>
          <keycap>Ctrl</keycap>

          <keycap>W</keycap>
        </keycombo>): close the search window (in the same way as
      <keycap>Esc</keycap>)</para>
    </listitem>

    <listitem>
      <para>Edit &gt; Insert source (<keycombo>
          <keycap>Ctrl</keycap>

          <keycap>Shift</keycap>

          <keycap>I</keycap>
        </keycombo>): insert current segment source.</para>
    </listitem>

    <listitem>
      <para>Edit &gt; Replace with source (<keycombo>
          <keycap>Ctrl</keycap>

          <keycap>Shift</keycap>

          <keycap>R</keycap>
        </keycombo>): replace with current segment source.</para>
    </listitem>

    <listitem>
      <para>Edit &gt; Create Glossary Entry (<keycombo>
          <keycap>Ctrl</keycap>

          <keycap>Shift</keycap>

          <keycap>G</keycap>
        </keycombo>): add a new glossary item.</para>
    </listitem>
  </itemizedlist>

  <section id="using.wild.cards">
    <title>Using wild cards</title>

    <para>In both exact and keyword searches, the wild card search characters
    '*' and '?' can be used. They have the meaning, familiar to Word
    users:</para>

    <itemizedlist>
      <listitem>
        <para>'*' matches zero or more characters, from the current position
        in a given word to its end. The search term <literal>'run*'</literal>
        for example would match words <literal>'run'</literal>,
        <literal>'runs'</literal> and <literal>'running'</literal>.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>'?' matches any single character. For instance,
        <literal>'run?'</literal> would match the word
        <literal>'runs'</literal> and <literal>'runn'</literal> in the word
        <literal>'running'</literal>.</para>
      </listitem>
    </itemizedlist>

    <para>The matches will be displayed in bold blue. Note that '*' and '?'
    have special meaning in regular expressions, so wild card search, as
    described here, applies to exact and keyword search only (see
    below).</para>
  </section>

  <section id="search.methoids">
    <title>Search methods and options</title>

    <para>Select the method using the radio buttons. The following search
    methods are available:</para>

    <variablelist>
      <varlistentry>
        <term>exact search</term>

        <listitem>
          <para>Search for segments containing the exact string you specified.
          An exact search looks for a phrase, i.e. if several words are
          entered, they are found only if they occur in exactly that sequence.
          Searching for <literal>open file</literal> will thus find all
          occurrences of the string <emphasis><literal>open
          file</literal></emphasis>, but not <emphasis><literal>file
          opened</literal></emphasis> or <emphasis><literal>open input
          file</literal></emphasis>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>keyword search</term>

        <listitem>
          <para>Search for segments containing all keywords you specified, in
          any order. Select keyword search to search for any number of
          individual full words, in any order. OmegaT displays a list of all
          segments containing all of the words specified. Keyword searches are
          similar to a search "with all of the words" in an Internet search
          engine such as Google (AND logic). Using keyword search with
          <emphasis><literal>open file</literal></emphasis> will thus find all
          occurrences of the string <emphasis><literal>open
          file</literal>,</emphasis> as well as <emphasis><literal>file
          opened</literal>, <literal>open input file</literal>, <literal>file
          may not be safe to open</literal></emphasis>, etc.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><emphasis role="bold">regular expressions</emphasis></term>

        <listitem>
          <para>The search string will be treated as a regular expression. The
          search string - [a-zA-Z]+[öäüqwß] - in the example above for
          instance looks for words in the target segment, containing
          questionable characters from German keyboard. <link linkend="appendix.regexp">Regular expressions</link> are a powerful
          way to look for instances of a string.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Additionally to one of the methods above you can select the
    following:</para>

    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">case sensitive</emphasis>: the search will
        be performed for the exact string specified; i.e. capitalization is
        observed.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Space matches nbsp</emphasis>: when this
        option is checked, a space character put in search entry can match
        either a normal space character or a non-breacking space (\u00A)
        character.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">in source: </emphasis>search in the source
        segments</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">in translations: </emphasis>search in the
        target segments</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">in notes: </emphasis>search in notes to
        segments</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">in comments: </emphasis>search in comments
        to segments</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Translated or untranslated:
        </emphasis>search in both translated and untranslated segments.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Translated: </emphasis>search only in
        translated segments.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Untranslated: </emphasis>search only in
        untranslated segments.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Display: all matching segments:
        </emphasis>if checked, all the segments are displayed one by one, even
        if they are present several times in the same document or in different
        documents.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Display: file names: </emphasis>if
        checked, the name of the file where each segment is found is displayed
        above each result.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Search in Project</emphasis>: check
        <emphasis>Memory</emphasis> to include the project memory
        (project_save.tmx file) in the search. Check <emphasis>TMs</emphasis>
        to include the translation memories located in the
        <filename>tm</filename> folder in the search. Check
        <emphasis>Glossaries</emphasis> to include the glossaries located in
        the <filename>glossary</filename> folder in the search.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Search in Files: </emphasis>search in a
        single file or a folder containing a set of files. When searching
        through files (as opposed to translation memories), OmegaT restricts
        the search to files in source file formats. Consequently, although
        OmegaT is quite able to handle<filename> tmx</filename> files, it does
        not include them in the Search files search.</para>
      </listitem>
    </itemizedlist>

    <para>If you click on the button <guibutton>Advanced options</guibutton>
    additional criteria (author or changer of the translation, date
    translated, excluding orphan segments, etc) can be selected. When
    <emphasis>Full/Half width char insensitive</emphasis> option is checked,
    searches for fullwidth forms (CJK characters) will match halfwidth forms
    and vice versa.</para>
  </section>

  <section id="search.result.display">
    <title>Search results display</title>

    <para>Pressing the search button after entering a string in the search
    field displays all the segments in the project that include the entered
    string. As <application>OmegaT</application> handles identical segments as
    one single entity, only the first unique segment is shown. The segments
    are displayed in order of appearance in the project. Translated segments
    are displayed with the original text at the top and the translated text at
    the bottom, untranslated segments are displayed as the source only.</para>

    <para>Double-clicking on a segment opens it in the Editor for
    modifications (one single click does it when <emphasis role="bold">Auto-sync with Editor</emphasis> option is checked). You can
    then switch back to the Search window for the next segment found, for
    instance to check and, if necessary, correct the terminology.</para>

    <para>In the Search window, you can use standard shortcuts (<keycombo>
        <keycap>Ctrl</keycap>

        <keycap>N</keycap>
      </keycombo>, <keycombo>
        <keycap>Ctrl</keycap>

        <keycap>P</keycap>
      </keycombo>) to move from one segment to another.</para>

    <para>You may have several Search windows open at the same time. You can
    quickly see their contents by looking at their title: it will contain the
    search term used.</para>
  </section>

  <section id="search.filter">
    <title>Filter entries in editor according to search</title>

    <para>For easier navigation in the search result set, you can apply the
    search to the editor. Press the <emphasis role="bold">Filter</emphasis>
    button on the bottom to limit the shown entries in the editor window to
    those that match the current search. You can use normal navigation to go
    to e.g. the next (untranslated) segment that matches the search
    criteria.</para>

    <para>NB:</para>

    <itemizedlist>
      <listitem>
        <para>A search may be limited to 1000 items, so if you search on a
        common phrase, the editor then shows only those 1000 matching entries,
        and not all entries that match the search criteria.</para>
      </listitem>

      <listitem>
        <para>A file might have no matching entries, so it will show
        empty.</para>
      </listitem>

      <listitem>
        <para>If a search removes duplicates, those duplicates will not be in
        the Editor.</para>
      </listitem>
    </itemizedlist>

    <para>To remove a filter, press the <emphasis role="bold">Remove
    filter</emphasis> button, or reload a project.</para>
  </section>
</section>

  <section id="windows.textreplace">
  <title>Text Replace</title>

  <para>Open the Search and replace window with <keycombo>
      <keycap>Ctrl</keycap>

      <keycap>K</keycap>
    </keycombo> and enter the word or expression you wish to replace in the
  <emphasis>Search for</emphasis> box.</para>

  <para>Then click on <emphasis>Search</emphasis> button to display all the
  corresponding occurrences.</para>

  <para>Enter the new word or phrase (regular expressions are not supported)
  in the <emphasis>Replace with</emphasis> box, then click one of the
  following options: <itemizedlist>
      <listitem>
        <para><emphasis role="bold">Replace All:</emphasis> operates
        replacement of all occurrences (after displaying a confirmation window
        where the number of occurrences is shown).</para>
      </listitem>
    </itemizedlist><itemizedlist>
      <listitem>
        <para><emphasis role="bold">Replace:</emphasis> operates a "one by
        one" replacement, by the mean of buttons in the <emphasis role="bold">header of the Editor pane</emphasis>. Click
        <emphasis>Replace Next</emphasis> or <emphasis>Skip</emphasis>, then
        end the replacement session with <emphasis>Finish</emphasis>.</para>
      </listitem>
    </itemizedlist><itemizedlist>
      <listitem>
        <para><emphasis role="bold">Close:</emphasis> close the window without
        any change.</para>
      </listitem>
    </itemizedlist></para>

  <section>
    <title>Search options</title>

    <para>Search options are similar to the ones displayed in <link linkend="windows.textsearch">Search window</link>.</para>

    <para>Except one: check <emphasis role="bold">Untranslated</emphasis> in
    order to operate Search and replace also on segments that have not been
    translated yet.</para>

    <para>To make it possible (although Search and replace operates only on
    memory), OmegaT will copy the source segment to the target segment before
    the replace operation occurs. If no replacement is done to a given
    segment, the target segment will be “emptied”, i.e., it will remain
    untranslated.</para>
  </section>
</section>

  <section id="windows.aligner">
  <title>Aligner</title>

  <para>Alignment involves creating a bilingual translation memory from monolingual documents that have already been translated.</para>

  <para>To access this window, select <menuchoice> <guimenuitem>Tools</guimenuitem> <guimenuitem>Align Files...</guimenuitem> </menuchoice>.</para>

  <section>
    <title>Step 1: Adjust the alignment parameters</title>

    <para>If the alignment looks as if it could be improved, try changing the parameters. In most cases, the lower the <guilabel>Average score</guilabel> is, better the alignment will be.</para>

    <para>In <guilabel>Heapwise</guilabel> comparison mode, the texts are evaluated globally. In <guilabel>Parsewise</guilabel> comparison mode, they are evaluated segment by segment. The option only appears when such a selection is possible.</para>

    <para>Use the <guilabel>ID</guilabel> comparison mode to align Key=Value texts. This works even if the keys are not in the same order in the two files, and/or if the two files do not contain the same amount of information. This option only appears if both the selected files are recognised as Key=Value files.</para>

    <para>The <guilabel>Viterbi</guilabel> and <guilabel>Forward-Backward</guilabel> algorithms are two different calculation methods. Choose the one that provides the best results.</para>

    <para>Click <guibutton>Continue</guibutton> to access the next step.</para>
  </section>

  <section>
    <title>Step 2: Make manual corrections</title>

    <para>After the automatic process, the alignment of two files generally requires manual corrections.</para>

    <para>Translation units are located in cells in the two last
    columns.</para>

    <para>To align two segments on the same line:</para>

    <orderedlist>
      <listitem>
        <para>Select the first segment.</para>
      </listitem>

      <listitem>
        <para>Press the space bar (shortcut for <menuchoice> <guimenuitem>Edit</guimenuitem> <guimenuitem>Start Pinpoint Align</guimenuitem> </menuchoice>).</para>
      </listitem>

      <listitem>
        <para>Click in the other column on the translation corresponding to the first segment.</para>
      </listitem>
    </orderedlist>

    <para>After several of these operations, select <menuchoice> <guimenuitem>Edit</guimenuitem> <guimenuitem>Realign pending</guimenuitem> </menuchoice> to update the alignment of the other segments.</para>

    <para>To modify the position of one or more segments individually, select the segment(s) and press <userinput>U</userinput> (<guilabel>Move Up</guilabel>) or <userinput>D</userinput> (<guilabel>Move Down</guilabel>).</para>

    <para>Only rows with the <guilabel>Keep</guilabel> box ticked in the first column will be included when the translation memory is created.</para>

    <para>When the two columns are sufficiently aligned, click <guibutton>Save TMX...</guibutton> to create the resulting translation memory.</para>
  </section>
</section>

  <section id="windows.scripts">
  <title>Scripts</title>

  <para>This window is accessible by selecting <menuchoice>
      <guimenuitem>Tools</guimenuitem>

      <guimenuitem>Scripting...</guimenuitem>
    </menuchoice></para>

  <section>
    <title>Use</title>

    <para>The Scripting window allows you to load an existing script into the text area and run it against the current opened project. To customize the scripting feature, do the following:</para>

    <itemizedlist>
      <listitem>
        <para>Load a script into the editor by clicking its name in the list in the left-hand panel.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Right-click a button from <guilabel>&lt;1&gt;</guilabel> to <guilabel>&lt;12&gt;</guilabel> in the bottom panel and select <guilabel>Add Script</guilabel>.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>When you left-click the number, the selected script will run. You can also start the selected macros from the main menu by using their entries in the <guisubmenu>Tools </guisubmenu>menu or by pressing<keycap> Ctrl+Alt+F#</keycap> (# 1 to 12).</para>
      </listitem>
    </itemizedlist>

    <para>By default, scripts are stored in the <filename>scripts</filename> folder located in the OmegaT installation folder (the folder that contains the <filename>OmegaT.jar</filename> file).</para>

    <para>If you add new scripts there, they will appear in the list of available scripts in the <guilabel>Scripting</guilabel> window.</para>

    <para>Some additional scripts can be found here: <ulink url="https://sourceforge.net/projects/omegatscripts/">OmegaT
    Scripts</ulink></para>
  </section>

  <section>
    <title>Scripting languages</title>

    <para>The following scripting languages have been implemented:</para>

    <para><itemizedlist>
        <listitem>
          <para><emphasis role="bold">Groovy</emphasis> (http://groovy.codehaus.org): a dynamic language for the Java Virtual machine. It builds upon the strengths of Java but has additional power features inspired by languages like Python, Ruby and Smalltalk.</para>
        </listitem>
      </itemizedlist><itemizedlist>
        <listitem>
          <para><emphasis role="bold">JavaScript</emphasis> (sometimes abbreviated JS, not to be confused with Java): a prototype-based scripting language that is dynamic, weakly typed and has first-class functions. It is a multi-paradigm language, supporting object-oriented, imperative, and functional programming styles. Being the language behind popular software such as Firefox, it is a familiar and preferred programming tool in the open-source domain.</para>
        </listitem>
      </itemizedlist>All the languages have access to the OmegaT object model, with the project as the top object. For example, the following Groovy code snippet scans through all the segments in all the files in the current project and, if a translation exists, prints out the source and the target of the segment:</para>

    <programlisting>    files = project.projectFiles;
    for (i in 0 ..&lt; files.size())
    {
        for (j in 0 ..&lt; files[i].entries.size())
        {
            currSegment = files[i].entries[j];
            if (project.getTranslationInfo(currSegment))
            {
                source = currSegment.getSrcText();
                target = project.getTranslationInfo(currSegment).translation;
                console.println(source + " &gt;&gt;&gt;&gt; " + target);
            }     
        }
    }</programlisting>
  </section>
</section>

  <section id="dialogs.preferences">
  <title>General Preferences</title>

  <para>This dialog is accessible by selecting <menuchoice>
      <guimenuitem>Options</guimenuitem>

      <guimenuitem>Preferences...</guimenuitem>
    </menuchoice></para>

  <para>It allows parameters to be set for all translation projects.</para>

  <section>
    <title>General</title>

    <variablelist id="dialogs.preferences.general.usetabtoadvance">
      <varlistentry>
        <term>Use TAB to Advance</term>

        <listitem>
          <para>Sets the segment validation key to Tab instead of the default Enter. This option is useful for some Chinese, Japanese or Korean character input systems.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Always Confirm Quit</term>

        <listitem>
          <para>The program will seek confirmation before closing down.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>Machine Translation</title>

    <variablelist>
      <varlistentry>
        <term>Automatically fetch translations</term>

        <listitem>
          <para>For confidentiality reasons, you may want to not send all the segments to the Machine Translation engine. If you uncheck this option, machine translations will be fetched only when you press <keycombo> <keycap>Ctrl</keycap> <keycap>M</keycap> </keycombo> (<keycombo> <keycap>Cmd</keycap> <keycap>M</keycap> </keycombo> on OS X) in the current segment. You must then press <keycombo> <keycap>Ctrl</keycap> <keycap>M</keycap> </keycombo> again to insert the suggestion.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Untranslated segments only</term>

        <listitem>
          <para>Check this box to send only untranslated segments to the machine translation services.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Select a supplier from the list and, if necessary, click <guibutton>Configure</guibutton> to enter the identification details provided by the supplier.</para>

    <para>The procedures for configuring access to the Microsoft Translator and Google Translate services are described <ulink url="https://sourceforge.net/p/omegat/wiki/Configuring Machine Translation Services">here</ulink>.</para>
  </section>

  <section>
    <title>Glossary</title>

    <variablelist>
      <varlistentry>
        <term>Display context description for TBX glossaries</term>

        <listitem>
          <para>Uncheck this option if the context description shown for each glossary entry is unnecessary or too long.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Use terms appearing separately in the source text</term>

        <listitem>
          <para>When this option is checked, the glossary will display pairs or groups of words (expressions) even if the words within them appear separately in the source text.</para>

          <para>Uncheck this option if the glossary displays too many false positives.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Use stemming for glossary entries</term>

        <listitem>
          <para>Select this option if you want the glossary to display words that have the same root.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Replace glossary hits when inserting source text</term>

        <listitem>
          <para>If both this option and the <link linkend="dialogs.preferences.editor.insertthesourcetext"><guilabel>Insert the source text</guilabel></link> option are selected, all words with a corresponding glossary entry will be translated automatically when the source text is inserted.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Ignore hits with very different case (e.g. FOO vs foo)</term>

        <listitem>
          <para>If this option is checked, the glossary will only display one entry, even if the same word exists in several forms (e.g. with and without capital letters) in the glossary.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <section>
      <title>TaaS Terminology</title>

      <variablelist>
        <varlistentry>
          <term>Get API Key</term>

          <listitem>
            <para>Click this button to access the <ulink url="https://term.tilde.com/taas">TaaS</ulink> project site and create a user account.</para>

            <para>You can then create an access key on the page <ulink url="https://term.tilde.com/account/keys/create?system=omegaT">https://term.tilde.com/account/keys/create?system=omegaT</ulink>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Store for this session only</term>

          <listitem>
            <para>If this option is selected, OmegaT will not remember the access key between sessions.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Browse TaaS Collections...</term>

          <listitem>
            <para>This button enables you to browse and download the collections that exist for the project's source and target languages. Private collections are displayed in bold. The collections are downloaded as TBX glossaries and stored in the current glossary folder.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Select TaaS Terminology Lookup Domain...</term>

          <listitem>
            <para>If necessary, you can select a specific domain to limit the volume of data sent and received.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>

  <section id="dialogs.preferences.dictionary">
    <title>Dictionary</title>

    <variablelist>
      <varlistentry>
        <term>Automatically search segment text in dictionary</term>

        <listitem>
          <para>Clear this option to deactivate automatic searching – if dictionaries are too long, for example.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Use fuzzy matching for dictionary entries</term>

        <listitem>
          <para>Select this option if you want dictionaries to display words that have the same root.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>Appearance</title>

    <variablelist>
      <varlistentry>
        <term>Restore Main Window</term>

        <listitem>
          <para>Restores the components of the main OmegaT window to their default state. Use this feature when you have undocked, moved or hidden one or more components and you are unable to restore the desired arrangement. It can also be used when panes do not appear as expected following an OmegaT upgrade.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <section>
      <title>Font</title>

      <para>Shows the dialog to modify the text display font. Users of old
      computers who feel window resizing is very slow can try changing the
      font. See font settings in Miscellanea</para>
    </section>

    <section>
      <title>Colours</title>

      <para>This page allows you to choose different colours for each part of the user interface.</para>

      <para>Pre-defined themes can be set using scripts. A script bundled with OmegaT called Switch Colour Themes provides a default "Dark" theme.</para>
    </section>
  </section>

  <section id="dialogs.preferences.filefilters">
    <title>File Filters</title>

    <para>This dialog lists the file filters available. The filters used by the current project are displayed in bold. If you prefer not to use OmegaT to translate files of a certain type, you can turn off the corresponding filter by deactivating the check box beside its name. OmegaT will then omit the corresponding files when loading projects, and will copy them unmodified to the target folder when creating target documents. When you wish to use the filter again, just tick the check box. Click <emphasis role="bold">Defaults</emphasis> to reset the file filters to the default settings. To edit the files and encodings a filter is used for, select the filter in the list and click <emphasis role="bold">Edit.</emphasis></para>

    <para>The dialog allows you to enable or disable the following options:</para>

    <itemizedlist>
      <listitem>
        <para>Remove leading and trailing tags: uncheck this option to display all the tags, including tags at the beginning and end of the segment. Warning: in Microsoft Open XML formats (docx, xlsx, etc.), if all tags are displayed, DO NOT place any text before the first tag – it is a technical tag that must always begin the segment.</para>
      </listitem>

      <listitem>
        <para>Remove leading and trailing whitespace in non-segmented
        projects: by default, OmegaT removes leading and trailing whitespace.
        In non-segmented projects, it is possible to keep it by unchecking
        this option.</para>
      </listitem>

      <listitem>
        <para>Preserve spaces for all tags: check this option if the source documents contain significant spaces used to control the layout that must not be ignored.</para>
      </listitem>

      <listitem>
        <para>Ignore file context when identifying segments with alternate translations: by default, OmegaT uses the source file name as part of the identification of an alternative translation. If the option is checked, the source file name will not be used, and alternative translations will take effect in any file as long as the other context (previous/next segments or some sort of segment identifier, depending on the file format) matches.</para>
      </listitem>
    </itemizedlist>

    <section id="filters.options">
      <title>Filter options</title>

      <para>Several filters (text files, XHTML files, HTML and XHTML files, OpenDocument files and Microsoft Open XML files) have one or more specific options. To modify the options, select the filter in the list and click <emphasis role="bold">Options</emphasis>. The available options are:</para>

      <para><emphasis role="bold">Text files</emphasis></para>

      <itemizedlist>
        <listitem>
          <para><emphasis>Paragraph segmentation on line breaks, empty lines
          or never:</emphasis></para>

          <para>if sentence segmentation rules are active, the text will be segmented further according to the option selected here.</para>
        </listitem>
      </itemizedlist>

      <para><emphasis role="bold">PO files</emphasis></para>

      <itemizedlist>
        <listitem>
          <para><emphasis>Allow blank translations in the target
          file</emphasis>:</para>

          <para>If selected, when a segment in a PO file (which may be a whole paragraph) is not translated, the translation will be empty in the target file. Technically speaking, the <code>msgstr</code> segment in the PO target file, if created, will be left empty. As this is the standard behaviour for PO files, it is selected by default. If the option is off, the source text will be copied to the target segment.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis>Skip PO header</emphasis></para>

          <para>The PO header will be skipped and left unchanged if this option is checked.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis>Auto replace 'nplurals=INTEGER; plural=EXPRESSION;'
          in header</emphasis></para>

          <para><emphasis>This option allows OmegaT to override the specification in the PO file header and use the default for the selected target language.</emphasis></para>
        </listitem>
      </itemizedlist>

      <para><emphasis role="bold">XHTML Files</emphasis></para>

      <itemizedlist>
        <listitem>
          <para><emphasis>Translate the following attributes</emphasis>: the
          selected attributes will appear as segments in the Editor
          window.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis>Start a new paragraph on</emphasis>: the &lt;br&gt; HTML tag will constitute a paragraph break for segmentation purposes.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis>Skip text matching regular expression</emphasis>: any text matching the regular expression is skipped. It is shown in red in the tag validator. Text in source segments that matches is shown in italics.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis>Do not translate the content attribute of meta-tags ...:</emphasis> The meta-tags in the box will not be translated.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis>Do not translate the content of tags with the following attribute key-value pairs (separate with commas)</emphasis>: if a tag matches the list of key-value pairs, its content will be ignored.</para>

          <para>It is sometimes useful to be able make certain tags untranslatable based on the values of their attributes. For example, <literal>&lt;div class="hide"&gt; &lt;span translate="no"&gt;</literal>. You can define key-value pairs for tags to be left untranslated. For the example above, the field would contain: <literal>class=hide, translate=no </literal>.</para>
        </listitem>
      </itemizedlist>

      <para><emphasis role="bold">Microsoft Office Open XML
      files</emphasis></para>

      <para>You can select which elements are to be translated. They will
      appear as separate segments in the translation.</para>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Word:</emphasis> non-visible instruction
          text, comments, footnotes, endnotes, footers</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Excel: </emphasis>comments, sheet
          names</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Power Point</emphasis>: slide comments,
          slide masters, slide layouts</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Global:</emphasis> charts, diagrams,
          drawings, WordArt</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Other Options: </emphasis></para>

          <itemizedlist>
            <listitem>
              <para><emphasis>Aggregate tags</emphasis>: if checked, tags with no translatable text between them will be aggregated into a single tag.</para>
            </listitem>

            <listitem>
              <para><emphasis>Preserve spaces for all tags</emphasis>: if checked, "white space" (i.e. spaces and newlines) will be preserved, even if this option is not defined in the document.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>

      <para><emphasis role="bold">HTML and XHTML files</emphasis></para>

      <itemizedlist>
        <listitem>
          <para><emphasis>Add or rewrite encoding declaration in HTML and XHTML files</emphasis>: the target files often need to have a different character set encoding from the one in the source file (whether it is explicitly defined or implied). Using this option, the translator can specify whether the target files should have the encoding declaration included. For instance, if the file filter specifies UTF8 as the encoding scheme for the target files, selecting Always will ensure that this information is included in the translated files.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis>Translate the following attributes</emphasis>: the
          selected attributes will appear as segments in the Editor
          window.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis>Start a new paragraph on</emphasis>: the &lt;br&gt; HTML tag will constitute a paragraph break for segmentation purposes.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis>Skip text matching regular expression</emphasis>: any text matching the regular expression is skipped. It is shown in red in the tag validator. Text in source segments that matches is shown in italics.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis>Do not translate the content attribute of meta-tags ...:</emphasis> The meta-tags in the box will not be translated.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para><emphasis>Do not translate the content of tags with the following attribute key-value pairs (separate with commas)</emphasis>: if a tag matches the list of key-value pairs, its content will be ignored.</para>

          <para>It is sometimes useful to be able make certain tags untranslatable based on the values of their attributes. For example, <literal>&lt;div class="hide"&gt; &lt;span translate="no"&gt;</literal>. You can define key-value pairs for tags to be left untranslated. For the example above, the field would contain: <literal>class=hide, translate=no </literal>.</para>
        </listitem>

        <listitem>
          <para><emphasis>Compress whitespace in translated document</emphasis>: multiple continuous whitespace characters will be converted into one single whitespace in the translated document.</para>
        </listitem>

        <listitem>
          <para><emphasis>Remove HTML comments in translated document</emphasis>: commented parts (between &lt;!-- and --&gt;) will not be copied into the translated document.</para>
        </listitem>
      </itemizedlist>

      <para><emphasis role="bold">Open Document Format (ODF)
      files</emphasis></para>

      <itemizedlist>
        <listitem>
          <para>You can select which of the following items are to be
          translated:</para>

          <para>index entries, bookmarks, bookmark references, notes,
          comments, presentation notes, links (URL), sheet names</para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="edit.filter.dialog">
      <title>Edit filter dialog</title>

      <para>This dialog enables you to specify the source filename patterns for files to be processed by the filter, customize the filenames of translated files and select which encodings should be used for loading the source file and saving the translation. To modify a file filter pattern, either modify the fields directly or click <emphasis role="bold">Edit</emphasis>. To add a new file filter pattern, click <emphasis role="bold">Add</emphasis>. The same dialog is used to add a pattern or to edit a particular pattern. The dialog includes a special target filename pattern editor, which you can use to customize the names of output files.</para>

      <section id="source.filetype.and.filename.pattern">
        <title>Source file type, filename pattern</title>

        <para>When OmegaT encounters a file in its source folder, it attempts to select the filter based upon the file's extension. More precisely, OmegaT attempts to match each filter's source filename patterns against the filename. For example, the pattern <literal>*.xhtml </literal>matches any file with the <literal>.xhtml</literal> extension. If the appropriate filter is found, the file is assigned to it for processing. For example, by default, the XHTML filter is used to process files with the .xhtml extension. You can change or add filename patterns for files to be handled by each file filter. Source filename patterns use wild card characters similar to those used in <emphasis role="bold">Searches. </emphasis>The '*' character matches zero or more characters. The '?' character matches exactly one character. All other characters represent themselves. For example, if you wish the text filter to handle readme files (<literal>readme, read.me</literal>, and <literal>readme.txt</literal>) you should use the pattern <literal>read*</literal>.</para>
      </section>

      <section id="source.and.target.files.encoding">
        <title>Source and Translated file encoding</title>

        <para>Only a limited number of file formats specify a mandatory encoding. File formats that do not specify their encoding will use the encoding you set up for the extension that matches their name. For example, by default <literal>.txt</literal> files will be loaded using the default encoding of your operating system. You can change the source encoding for each different source filename pattern. Target files can also be written in any encoding. By default, the translated file encoding is the same as the source file encoding. The source and target encoding fields use drop-down menus containing all the supported encodings. &lt;auto&gt; leaves the choice of encoding to <application>OmegaT</application>. This is how it works:</para>

        <itemizedlist>
          <listitem>
            <para>OmegaT identifies the source file encoding by using its encoding declaration, if present (HTML files, XML based files).</para>
          </listitem>
        </itemizedlist>

        <itemizedlist>
          <listitem>
            <para>OmegaT is instructed to use a mandatory encoding for certain file formats (Java properties etc).</para>
          </listitem>
        </itemizedlist>

        <itemizedlist>
          <listitem>
            <para>OmegaT uses the default encoding of the operating system for
            text files.</para>
          </listitem>
        </itemizedlist>
      </section>

      <section id="target.name">
        <title>Translated filename</title>

        <para>Sometimes you may wish to rename the files you translate automatically, for example adding a language code after the file name. The target filename pattern uses a special syntax, so if you want to edit this field, you must click <emphasis role="bold">Edit...</emphasis>and use the Edit Pattern Dialog. If you want to revert to the filter's default configuration, click <emphasis role="bold">Defaults.</emphasis> You can also modify the name directly in the target filename pattern field of the file filters dialog. The Edit Pattern Dialog offers among others the following options:</para>

        <itemizedlist>
          <listitem>
            <para>Default is <literal>${filename}</literal>– full filename of
            the source file with extension: in this case the name of the
            translated file is the same as that of the source file.</para>
          </listitem>
        </itemizedlist>

        <itemizedlist>
          <listitem>
            <para><literal>${nameOnly}</literal>– allows you to insert only
            the name of the source file without the extension.</para>
          </listitem>

          <listitem>
            <para><literal>${extension} </literal>- the original file
            extension</para>
          </listitem>
        </itemizedlist>

        <itemizedlist>
          <listitem>
            <para><literal>${targetLocale}</literal>– target locale code (of a
            form "xx_YY").</para>
          </listitem>
        </itemizedlist>

        <itemizedlist>
          <listitem>
            <para><literal>${targetLanguage}</literal>– the target language
            and country code together (of a form "XX-YY").</para>
          </listitem>
        </itemizedlist>

        <itemizedlist>
          <listitem>
            <para><literal>${targetLanguageCode}</literal> – the target
            language - only "XX"</para>
          </listitem>
        </itemizedlist>

        <itemizedlist>
          <listitem>
            <para><literal>${targetCountryCode}</literal>– the target country
            - only "YY"</para>
          </listitem>

          <listitem>
            <para><literal>${timestamp-????}</literal> – system date time at
            generation time in various patterns</para>

            <para>See <ulink url="http://docs.oracle.com/javase/1.4.2/docs/api/java/text/SimpleDateFormat.html">Oracle
            documentation</ulink> for examples of the "SimpleDateFormat"
            patterns</para>
          </listitem>

          <listitem>
            <para><literal>${system-os-name}</literal> - operating system of
            the computer used</para>
          </listitem>

          <listitem>
            <para><literal>${system-user-name}</literal> - system user
            name</para>
          </listitem>

          <listitem>
            <para><literal>${system-host-name}</literal> - system host
            name</para>
          </listitem>

          <listitem>
            <para><literal>${file-source-encoding}</literal> - source file
            encoding</para>
          </listitem>

          <listitem>
            <para><literal>${file-target-encoding}</literal> - target file
            encoding</para>
          </listitem>

          <listitem>
            <para><literal>${targetLocaleLCID}</literal> - Microsoft target
            locale</para>
          </listitem>
        </itemizedlist>

        <para>Additional variants are available for variables ${nameOnly} and
        ${Extension}. In case the file name has ambivalent name, one can apply
        variables of the form <literal>${name
        only</literal><emphasis>-extension number</emphasis>} and
        <literal>${extension</literal>-<emphasis>extension number}
        </emphasis>. If for example the original file is named
        Document.xx.docx, the following variables will give the following
        results:</para>

        <itemizedlist>
          <listitem>
            <para><literal>${nameOnly-0}</literal> Document</para>
          </listitem>

          <listitem>
            <para><literal>${nameOnly-1}</literal> Document.xx</para>
          </listitem>

          <listitem>
            <para><literal>${nameOnly-2}</literal> Document.xx.docx</para>
          </listitem>

          <listitem>
            <para><literal>${extension-0}</literal> docx</para>
          </listitem>

          <listitem>
            <para><literal>${extension-1}</literal> xx.docx</para>
          </listitem>

          <listitem>
            <para><literal>${extension-2}</literal> Document.xx.docx</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
  </section>

  <section id="dialogs.preferences.segmentationsetup">
    <title>Segmentation Setup</title>

    <para>Translation memory tools work with textual units called segments.
    <application>OmegaT</application> has two ways to segment a text: by
    paragraph or by sentence segmentation (also referred to as “rule-based
    segmentation”). In order to select the type of segmentation, select
    <menuchoice>
        <guimenu>Project</guimenu>

        <guimenuitem>Properties...</guimenuitem>
      </menuchoice> from the main menu and tick or untick the check box
    provided. Paragraph segmentation is advantageous in certain cases, such as
    highly creative or stylistic translations in which the translator may wish
    to change the order of entire sentences; for the majority of projects,
    however, sentence segmentation is a choice to be preferred, since it
    delivers better matches from previous translations. If sentence
    segmentation has been selected, you can setup the rules by selecting
    <menuchoice>
        <guimenu>Options</guimenu>

        <guimenuitem>Segmentation...</guimenuitem>
      </menuchoice>from the main menu.</para>

    <para>Dependable segmentation rules are already available for many
    languages, so it is likely that you will not need to get involved with
    writing your own segmentation rules. On the other hand this functionality
    can be very useful in special cases, where you can increase your
    productivity by tuning the segmentation rules to the text to be
    translated.</para>

    <para><emphasis role="bold">Warning: </emphasis>because the text will
    segment differently after filter options have been changed, so you may
    have to start translating from scratch. At the same time the previous
    valid segments in the project translation memory will turn into orphan
    segments. If you change segmentation options when a project is open, you
    must reload the project in order for the changes to take effect.</para>

    <para><application>OmegaT</application> uses the following sequence of
    steps:</para>

    <variablelist>
      <varlistentry>
        <term>Structure level segmentation</term>

        <listitem>
          <para><application>OmegaT</application> first parses the text for
          structure-level segmentation. During this process it is only the
          structure of the source file that is used to produce
          segments.</para>

          <para>For example, text files may be segmented on line breaks, empty
          lines, or not be segmented at all. Files containing formatting (ODF
          documents, HTML documents, etc.) are segmented on the block-level
          (paragraph) tags. Translatable object attributes in XHTML or HTML
          files can be extracted as separate segments.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Sentence level segmentation</term>

        <listitem>
          <para>After segmenting the source file into structural units,
          <application>OmegaT</application> will segment these blocks further
          into sentences.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <section id="segmentation.rules">
      <title>Segmentation rules</title>

      <para>The process of segmenting can be pictured as follows: the cursor
      moves along the text, one character at a time. At each cursor position
      rules, consisting of a <emphasis role="bold">Before </emphasis>and
      <emphasis role="bold">After </emphasis>pattern, are applied in their
      given order to see if any of the<emphasis role="bold"> Before</emphasis>
      patterns are valid for the text on the left and the corresponding
      <emphasis role="bold">After</emphasis> pattern for the text on the right
      of the cursor. If the rule matches, either the cursor moves on without
      inserting a segment break (for an exception rule) or a new segment break
      is created at the current cursor position (for the break rule).</para>

      <para>The two types of rules behave as follows:</para>

      <variablelist>
        <varlistentry>
          <term>Break rule</term>

          <listitem>
            <para>Separates the source text into segments. For example,
            "<emphasis>Did it make sense? I was not sure</emphasis>." should
            be split into two segments. For this to happen, there should be a
            break rule for "?", when followed by spaces and a capitalized
            word. To define a rule as a break rule, tick the Break/Exception
            check box.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <variablelist>
        <varlistentry>
          <term>Exception rule</term>

          <listitem>
            <para>specify what parts of text should NOT be separated. In spite
            of the period, <emphasis>"Mrs. Dalloway "</emphasis> should not be
            split in two segments, so an exception rule should be established
            for Mrs (and for Mr, for Dr, for prof etc), followed by a period.
            To define a rule as an exception rule, leave the Break/Exception
            check box unticked.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>The predefined break rules should be sufficient for most European
      languages and Japanese. In view of the flexibility, you may consider
      defining more exception rules for your source language in order to
      provide more meaningful and coherent segments.</para>
    </section>

    <section id="rules.priority">
      <title>Rule priority</title>

      <para>All segmentation rule sets for a matching language pattern are
      active and are applied in the given order of priority, so rules for
      specific language should be higher than default ones. For example, rules
      for Canadian French (FR-CA) should be set higher than rules for French
      (FR.*), and higher than Default (.*) ones. Thus, when translating from
      Canadian French the rules for Canadian French - if any - will be applied
      first, followed by the rules for French and lastly, by the Default
      rules.</para>
    </section>

    <section id="creating.new.rule">
      <title>Creating a new rule</title>

      <para>Major changes to the segmentation rules should be generally
      avoided, especially after completion of the first draft, but minor
      changes, such as the addition of a recognized abbreviation, can be
      advantageous.</para>

      <para>In order to edit or expand an existing set of rules, simply click
      on it in the top table. The rules for that set will appear in the bottom
      half of the window.</para>

      <para>In order to create an empty set of rules for a new language
      pattern click <emphasis role="bold">Add </emphasis>in the upper half of
      the dialog. An empty line will appear at the bottom of the upper table
      (you may have to scroll down to see it). Change the name of the rule set
      and the language pattern to the language concerned and its code. The
      syntax of the language pattern conforms to regular expression syntax. If
      your set of rules handles a language-country pair, we advise you to move
      it to the top using the <emphasis role="bold">Move Up</emphasis>
      button.</para>

      <para>Add the <emphasis role="bold">Before</emphasis> and<emphasis role="bold"> After</emphasis> patterns. To check their syntax and their
      applicability, it is advisable to use tools which allow you to see their
      effect directly. See <link linkend="appendix.regexp">Regular
      expressions</link>. A good starting point will always be the existing
      rules.</para>
    </section>

    <section id="few.simple.examples">
      <title>A few simple examples</title>

      <informaltable>
        <tgroup cols="4">
          <colspec align="left" colnum="1"/>

          <colspec align="center" colnum="2"/>

          <colspec align="center" colnum="3"/>

          <colspec align="left" colnum="4"/>

          <thead>
            <row>
              <entry>Intention</entry>

              <entry align="center">Before</entry>

              <entry align="center">After</entry>

              <entry>Note</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Set the segment start after a period ('.') followed by a
              space, tab ...</entry>

              <entry align="center">\.</entry>

              <entry align="center">\s</entry>

              <entry>"\." stands for the period character. "\s" means any
              white space character (space, tab, new page etc.)</entry>
            </row>

            <row>
              <entry>Do not segment after Mr.</entry>

              <entry align="center">Mr\.</entry>

              <entry align="center">\s</entry>

              <entry>This an exception rule, so the rule check box must not be
              ticked</entry>
            </row>

            <row>
              <entry>Set a segment after "。" (Japanese period)</entry>

              <entry align="center">。</entry>

              <entry align="center"/>

              <entry>Note that <literal>after</literal> is empty</entry>
            </row>

            <row>
              <entry>Do not segment after M. Mr. Mrs. and Ms.</entry>

              <entry align="center">Mr??s??\.</entry>

              <entry align="center">\s</entry>

              <entry>Exception rule - see the use of ? in regular
              expressions</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
  </section>

  <section>
    <title>Auto-Completion</title>

    <para>Click on <guimenuitem>Glossary...</guimenuitem> to configure the
    Auto-completer Glossary View.</para>

    <para>Click on <guimenuitem>Auto-text...</guimenuitem> to configure
    Auto-text options and to add or remove entries.</para>

    <para>Click on <guimenuitem>Character Table...</guimenuitem> to set the
    Character table auto-completer options.</para>

    <para>Auto-completer is launched within the target segment via <emphasis role="bold">Ctrl+Space</emphasis> shortcut.</para>

    <para>If <emphasis role="bold">Show Relevant Suggestions
    Automatically</emphasis> option is checked, Auto-completer is launched
    automatically by typing the first letter of a translated glossary entry,
    or by typing "&lt;" in case of tags.</para>
  </section>

  <section>
    <title>Spellchecker</title>

    <para>OmegaT has a built-in spell checker based on the <link linkend="appendix.spellchecker">spelling checker</link> used in Apache
    OpenOffice, LibreOffice, Firefox and Thunderbird. It is consequently able
    to use the huge range of free spelling dictionaries available for these
    applications.</para>
  </section>

  <section>
    <title>LanguageTool plug-in</title>

    <variablelist>
      <varlistentry>
        <term>Service type</term>

        <listitem>
          <para>Select the location of the language checker.</para>

          <para>Using a different language checker on your local machine than the one supplied with OmegaT gives you the option of personalising the verification rules.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Rules</term>

        <listitem>
          <para>Check or uncheck the rules depending on whether they are relevant to the type of text you are translating.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section id="dialogs.preferences.externalsearch">
    <title>External Search</title>

    <variablelist>
      <varlistentry>
        <term>Enable project-specific commands</term>

        <listitem>
          <para>By default, OmegaT does not execute the commands specified in the project-specific settings (the <filename>finder.xml</filename> file in the <filename>omegat</filename> folder), because they may have a critical impact on the machine's security.</para>

          <para>Only activate this option if you know what you are doing, and only for projects from trusted sources.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Context Menu Priority:</term>

        <listitem>
          <para>Enables you to change the order of the commands in the context menu (the right-click menu). Values around 100 display commands at the top, and values around 900 display them at the bottom.</para>

          <para>You will need to restart OmegaT for this change to take effect.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section id="dialogs.preferences.editor">
    <title>Editor</title>

    <variablelist>
      <varlistentry id="dialogs.preferences.editor.insertthesourcetext">
        <term>Insert the source text</term>

        <listitem>
          <para>You can have the source text inserted automatically into the
          editing field. This is useful for texts containing many trade marks
          or other proper nouns you which must be left unchanged.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Leave the segment empty</term>

        <listitem>
          <para>OmegaT leaves the editing field blank. This option allows you
          to enter the translation without the need to remove the source text,
          thus saving you two keystrokes (<emphasis role="bold">Ctrl+A
          </emphasis>and <emphasis role="bold">Del). </emphasis> Empty
          translations are now allowed. They are displayed as &lt;EMPTY&gt; in
          the Editor. To create one, right-click in a segment, and select
          "<emphasis role="bold">Set empty translation</emphasis>". The entry
          <emphasis role="bold">Remove translation</emphasis> in the same pop
          up menu also allows to delete the existing translation of the
          current segment. You achieve the same by clearing the target segment
          and pressing <guibutton>Enter.</guibutton></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Insert the best fuzzy match</term>

        <listitem>
          <para>OmegaT inserts the translation of the string most similar to
          the current source, if it is above the similarity threshold that you
          have selected in this dialog. The prefix (per default empty) can be
          used to tag translations, done via fuzzy matches. If you add a
          prefix (for instance [fuzzy]), you can trace those translations
          later to see they are correct.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>The check boxes in the lower half of the dialog window serve the
    following purpose:</para>

    <variablelist>
      <varlistentry>
        <term>Attempt to convert numbers when inserting a fuzzy match</term>

        <listitem>
          <para>If this option is checked, when a fuzzy match is inserted,
          either manually or automatically, OmegaT attempts to convert the
          numbers in the fuzzy matches according to the source contents. There
          are a number of restrictions:</para>

          <itemizedlist>
            <listitem>
              <para>The source segment and the fuzzy matches must contain the
              same list of numbers</para>
            </listitem>

            <listitem>
              <para>The numbers must be exactly the same between the source
              and the target matches.</para>
            </listitem>

            <listitem>
              <para>Only integers and simple floats (using the period as a
              decimal character, e.g. 5.4, but not 5,4 or 54E-01) are
              considered.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist>
      <varlistentry id="dialogs.preferences.editor.allowtranslationtobeequaltosource">
        <term>Allow translation to be equal to source</term>

        <listitem>
          <para>Documents for translation may contain trade marks, names or
          other proper nouns that will be the same in translated documents.
          There are two strategies for segments that contain only such
          invariable text.</para>

          <para>You can decide not to translate such segments at all. OmegaT
          will then report these segments as not translated. This is the
          default. The alternative is to enter a translation that is identical
          to the source text. OmegaT is able to recognize that you have done
          this. To make this possible, select this option.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist>
      <varlistentry>
        <term>Export the segment to text files</term>

        <listitem>
          <para>The text export function exports data from within the current
          <application>OmegaT</application> project to plain text files. The
          data are exported when the segment is opened. The files appear in
          the /script subfolder in the OmegaT user files folder, and
          include:</para>

          <itemizedlist>
            <listitem>
              <para>The content of the segment source text
              (<filename>source.txt</filename>).</para>
            </listitem>

            <listitem>
              <para>The content of the segment target text
              (<filename>target.txt</filename>).</para>
            </listitem>

            <listitem>
              <para>The text highlighted by the user, when
              <keycap>Ctrl+Shift+C</keycap> is pressed or <guimenuitem>Edit
              &gt; Export Selection</guimenuitem> is selected
              (<filename>selection.txt</filename>).</para>
            </listitem>
          </itemizedlist>

          <para>The content of the files is overwritten either when a new
          segment is opened (source.txt and target.txt) or when a new
          selection is exported (selection.txt). The files are unformatted
          plain text files. The whole process can be steered and controlled
          via Tck/Tcl-based scripting. See <ulink url="http://www.omegat.org/en/howtos/text_export.html">Using the
          OmegaT text export function</ulink> for specifics, examples and
          suggestions.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist>
      <varlistentry>
        <term>Go To Next Untranslated Segment stops where there is at least
        one alternative translation</term>

        <listitem>
          <para>If we want to avoid any mis-translations in case of segments
          with several possible target contents, checking this check box will
          cause <emphasis role="bold">Go To Next Untranslated
          Segment</emphasis> to stop on the next such segment, irrespective of
          whether it has already been translated or not.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist>
      <varlistentry>
        <term>Allow tag editing</term>

        <listitem>
          <para>Uncheck this option to prevent any damage on the tags (i.e.,
          partial deletion) during editing. Removing an entire tag remains
          possible in that case, by using Ctrl+Backspace/Delete or by
          selecting it completely (Ctrl+Shift+Left/Right) then deleting it
          (Delete or Ctrl+X).</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist>
      <varlistentry>
        <term>Validate tags when leaving a segment</term>

        <listitem>
          <para>Check this option to be warned about differences between
          source and target segments tags each time you leave a
          segment.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist id="dialogs.preferences.editor.saveautopopulatedstatus">
      <varlistentry>
        <term>Save auto-populated status</term>

        <listitem>
          <para>Check this option to record in the
          <filename>project_save.tmx</filename> file the information that a
          segment has been auto-populated, so it can be displayed with a
          specific color in the Editor (if the "Mark Auto-Populated Segments"
          option, in the View menu, is checked).</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist>
      <varlistentry>
        <term>Initially load this many segments</term>

        <listitem>
          <para>By default the editor displays 2,000 of initial segments, and
          progressively loads more as you scroll up or down. If you have a
          powerful machine, and/or if you don't like how the scrollbar behaves
          during progressive loading, you can increase this number.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section id="dialogs.preferences.tagprocessing">
    <title>Tag Processing</title>

    <para>When translating software-related files, you can configure the Tag Validator options to also check programming (%...) variables or placeholders ({0}), if the file filter doesn't do it out of the box already. The PO filter already handles %.. and Java™ Resource Bundle filter already handles {#} tags, so you only need this for other file types.</para>

    <para>You can also define various options relating to tag validation and define custom tags.</para>

    <para>For example, if you enter <userinput>\d+</userinput> into the <guilabel>Regular expression for custom tags</guilabel> field, all numbers will be considered as tags, enabling you to check that numbers have not been changed by mistake during translation.</para>

    <para>Similarly, enter <userinput>&lt;.*?&gt;</userinput> to make sure that HTML tags (for example) entered into the source text are preserved without modification in the translation.</para>

    <para>Note: these two instructions can be combined by writing <userinput>(&lt;.*?&gt;)|(\d+)</userinput>.</para>
  </section>

  <section>
    <title>Team</title>

    <para>Enter your name here and it will be attached to all segments
    translated by you.</para>

    <section>
      <title>Repository Credentials</title>

      <para>List of projects for which login details are stored in OmegaT. Remove a project from this list if you want OmegaT to ask you for a login and a password every time you access the project.</para>
    </section>
  </section>

  <section>
    <title>TM Matches</title>

    <variablelist>
      <varlistentry>
        <term>Sort fuzzy matches by:</term>

        <listitem>
          <para>By default, the closest matches displayed in the <guilabel>Fuzzy Matches</guilabel> pane are determined using stemming.</para>

          <para>To obtain more literal matches closer to 100%, select the <guilabel>Full text, including tags and numbers</guilabel> option.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Displaying tags in non-OmegaT TMXs</term>

        <listitem>
          <para>Decide how tags in foreign TMX files (i.e. not generated by
          OmegaT) are to be treated.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Match display template</term>

        <listitem>
          <para>Change how fuzzy matches are displayed, through the use of
          pre-configured variables:</para>

          <table colsep="0" rowsep="0">
            <title>Match pane setup</title>

            <tgroup cols="2" colsep="1" rowsep="1" title="Match pane setup">
              <colspec align="left"/>

              <colspec align="left"/>

              <tbody>
                <row>
                  <entry><literal>${id}</literal></entry>

                  <entry>Number of the match from 1 to 5</entry>
                </row>

                <row>
                  <entry><literal>${sourceText}</literal></entry>

                  <entry>Source text of the match</entry>
                </row>

                <row>
                  <entry><literal>${targetText}</literal></entry>

                  <entry>Target text of the match</entry>
                </row>

                <row>
                  <entry><literal>${diff}</literal></entry>

                  <entry>String showing the differences between the source and
                  the match.<emphasis> Hint:</emphasis> use this if the text
                  you are translating has been updated.</entry>
                </row>

                <row>
                  <entry><literal>${diffReversed}</literal></entry>

                  <entry>Same as ${diff}, but with the differences (what is to
                  be inserted and deleted) inverted.</entry>
                </row>

                <row>
                  <entry><literal>${score}</literal></entry>

                  <entry>Percentage calculated with <guilabel>Stemming, no
                  tags and no numbers</guilabel> option.</entry>
                </row>

                <row>
                  <entry><literal>${noStemScore}</literal></entry>

                  <entry>Percentage calculated with <guilabel>No tags and no
                  numbers</guilabel> option.</entry>
                </row>

                <row>
                  <entry><literal>${adjustedScore}</literal></entry>

                  <entry>Percentage calculated with <guilabel>Full text,
                  including tags and numbers</guilabel> option.</entry>
                </row>

                <row>
                  <entry><literal>${fuzzyFlag}</literal></entry>

                  <entry>Indicate that this match is fuzzy (currently only for
                  translations from PO files with the #fuzzy mark)</entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>View</title>

    <para>Contains options for displaying texts and modification information
    in different ways.</para>

    <variablelist>
      <varlistentry>
        <term>Include the first non-unique segment when marking non-unique
        segments</term>

        <listitem>
          <para>Check this option to display all non-unique segments (repetitions) in grey. When the option is unchecked, all non-unique segments are shown in grey except the first occurrence.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section id="dialogs.preferences.savingandoutput">
    <title>Saving and Output</title>

    <para>Allows the user select the interval - in minutes and seconds -
    between consecutive automatic saves of the project.</para>

    <para>Change the default interval (3 minutes) depending on the characteristics of the project:</para>

    <itemizedlist>
      <listitem>
        <para>short intervals (minimum: 10 seconds) for synchronised projects on an internal server.</para>
      </listitem>

      <listitem>
        <para>long intervals for team projects hosted on external servers.</para>
      </listitem>
    </itemizedlist>

    <variablelist>
      <varlistentry>
        <term>External Post-processing Command</term>

        <listitem>
          <para>Specify commands that are executed after the <guimenuitem>Create Translated Documents</guimenuitem> command.</para>

          <para>An example of the use of this feature would be to send translated documents automatically to the client's FTP server.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Also allow per-project external commands</term>

        <listitem>
          <para>By default, OmegaT does not execute the commands specified in the project-specific settings (the <filename>omegat.project</filename> file), because they may have a critical impact on the machine's security.</para>

          <para>Only activate this option if you know what you are doing, and only for projects from trusted sources.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>Proxy Login</title>

    <para>If OmegaT needs to use an authenticated proxy server to access the Internet, enter the details provided by the proxy administrator here.</para>
  </section>

  <section>
    <title>Secure store</title>

    <para>Here you can redefine the master password used to protect login details and access keys for machine translation services. Take care to make a note of all these details before creating a new password, because they will all be deleted and will need to be re-entered.</para>
  </section>

  <section>
    <title>Plugins</title>

    <para>Gives access to the list of plugins available. Plugins are installed in the <filename>/plugins</filename>
      folder under the OmegaT installation folder or the platform-specific OmegaT user preferences folder.</para>
  </section>

  <section>
    <title>Updates</title>

    <para>Enables automatic notification of <application>OmegaT</application> updates.</para>
  </section>
</section>

</chapter>

  <chapter id="panes">
  <title>Panes</title>

  <para>The main window consists of several panes, the main menu and a status
  bar. You can change the position of any pane or even undock it to a separate
  window by clicking and dragging the pane by its name. Depending on the pane
  status, different signs can appear at its top right corner:</para>

  <note>
    <para>If you can not see all the panes (be it opened or minimized),
    pressing <guisubmenu> Options &gt; Restore Main Window </guisubmenu>will
    restore them to the state, defined in the installation.</para>
  </note>

  <table>
    <title>Pane widgets</title>

    <tgroup cols="2">
      <colspec align="left" colnum="1"/>

      <tbody>
        <row>
          <entry><inlinemediaobject>
              <imageobject role="html">
                <imagedata fileref="images/Minimize.png" width="60%"/>
              </imageobject>

              <imageobject role="fo">
                <imagedata fileref="images/Minimize.png" width="40%"/>
              </imageobject>
            </inlinemediaobject></entry>

          <entry>minimizes the pane, so that only its name is shown at the
          bottom of the window</entry>
        </row>

        <row>
          <entry><inlinemediaobject>
              <imageobject role="html">
                <imagedata fileref="images/Maximize.png" width="60%"/>
              </imageobject>

              <imageobject role="fo">
                <imagedata fileref="images/Maximize.png" width="40%"/>
              </imageobject>
            </inlinemediaobject></entry>

          <entry>maximizes the pane</entry>
        </row>

        <row>
          <entry><inlinemediaobject>
              <imageobject role="html">
                <imagedata fileref="images/Restore.png" width="60%"/>
              </imageobject>

              <imageobject role="fo">
                <imagedata fileref="images/Restore.png" width="40%"/>
              </imageobject>
            </inlinemediaobject></entry>

          <entry>restores the layout before the maximizing step</entry>
        </row>

        <row>
          <entry><inlinemediaobject>
              <imageobject role="html">
                <imagedata fileref="images/Undock.png" width="60%"/>
              </imageobject>

              <imageobject role="fo">
                <imagedata fileref="images/Undock.png" width="40%"/>
              </imageobject>
            </inlinemediaobject></entry>

          <entry>undocks the pane from the main window</entry>
        </row>

        <row>
          <entry><inlinemediaobject>
              <imageobject role="html">
                <imagedata fileref="images/Dock.png" width="60%"/>
              </imageobject>

              <imageobject role="fo">
                <imagedata fileref="images/Dock.png" width="40%"/>
              </imageobject>
            </inlinemediaobject></entry>

          <entry>puts the pane back within the main window</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <para>You can overlap panes if desired. When this is done the panes display
  a tab at the top. The separators between the panes can be dragged to resize
  panes. Should you lose track of your changes to the user interface, you can
  use <guimenuitem> Options → Restore the main window</guimenuitem> any time to
  return to the original layout.</para>

  <para>It is possible to drag and drop files to each pane, which will react
  accordingly. <itemizedlist>
      <listitem>
        <para>Editor pane: If an OmegaT project file
        (<filename>omegat.project</filename>) is dropped on this pane, the
        corresponding project will be opened, closing first any opened
        project. Other dropped files will be copied to the
        <filename>source</filename> folder. This applies also to the <link linkend="windows.projectfiles">Project files</link> window.</para>
      </listitem>

      <listitem>
        <para>Fuzzy Matches pane: Dropped <filename>.tmx</filename> files will
        be copied to the <filename>tm</filename> folder.</para>
      </listitem>

      <listitem>
        <para>Glossary pane: Dropped files with known glossary extensions
        (<filename>.txt</filename>, <filename>.tab</filename>, etc.) will be
        copied to the <filename>glossary</filename> folder.</para>
      </listitem>
    </itemizedlist></para>

  <section id="editor.pane">
    <title>Editor</title>

    <para>This is where you type and edit your translation. The Editor pane
    displays the text of the partially translated document: the text already
    translated is displayed in translation while the untranslated text is
    displayed in the original language. The displayed text is split into
    segments and you may scroll through the document and double-click on any
    segment to open and edit it. In the above case, the segments already
    translated are shown in yellow.</para>

    <para>One of the above segments is the current segment. It is the segment
    that is displayed in two parts. The upper part is in the source language,
    in bold characters with a green background color, the lower part is the
    editing field, ended by a marker: the marker is <literal>&lt;segment nnnn&gt;</literal> where
    nnnn is a number of the segment in the project. Use the upper part as a
    reference and replace or modify the contents of the editing field with
    your translation.</para>

    <para>Note: the segment marker displays <literal>&lt;segment
    nnnn +yy more&gt; when the segment is non-unique. In that case, yy is the
    number of other occurrences of the segment in the
    project.</literal></para>

    <para>Depending upon the preferred editing behavior, the editing field for
    the untranslated segment may be empty, contain the source text, or contain
    the translation of the string most similar to the one to be translated.
    When you move to another segment, the translation is validated and stored.
    If you want the translation to be the same as the source, simply make the
    editing field empty by removing all the text (select all with
    <keycap>Ctrl+A</keycap> and delete with <keycap>Del</keycap>). OmegaT is
    able to store translations that are identical to the source. This is
    useful for documents that contain trade marks, names or other proper
    nouns, or parts in a third language that do not require translation. See
    <emphasis>Translation editing</emphasis> for more details.</para>

    <para>If you right click on the Editor pane, a pop-up menu opens,
    offering<emphasis role="bold"> Cut, Copy, Paste</emphasis> (i.e. same
    functions as <keycombo>
        <keycap>Ctrl</keycap>

        <keycap>X</keycap>
      </keycombo>, <keycombo>
        <keycap>Ctrl</keycap>

        <keycap>C</keycap>
      </keycombo> and <keycombo>
        <keycap>Ctrl</keycap>

        <keycap>V</keycap>
      </keycombo>), <emphasis role="bold">GoTo segment</emphasis> and
    <emphasis role="bold">Add glossary entry</emphasis> functions. In
    addition, when the right click occurs on an opened segment, other options
    concerning <emphasis role="bold">Alternative translations</emphasis> are
    proposed, for example to to jump to another instance of non-unique
    segments.</para>

    <para>It is possible to drag text from anywhere in the main window and to
    drop it within the segment. Texted dragged from outside the target segment
    is copied, while text dragged from within the segment is moved.</para>

    <para>By default, it is not possible to select words in the source segment
    using the keyboard rather than the mouse. Pressing <keycap>F2</keycap> key
    allows to move the cursor into the source segment (or anywhere in the
    editor) with the keyboard arrows. In this mode, "<guilabel>Cursor lock
    off</guilabel>" is displayed at the bottom of the pane. To come back to
    the standard mode "<guilabel>Cursor lock on</guilabel>", press
    <keycap>F2</keycap> again.</para>
  </section>

  <section>
    <title>Fuzzy Matches</title>

    <para>The match viewer shows the most similar segments from translation
    memories, both from internal project translation memory created in real
    time as you translate your project and from ancillary translation memories
    you have imported from your earlier jobs, or received from your client or
    translation agency.</para>

    <para>When you move to the next segment, the first fuzzy match (the one
    with the best matching percentage) is automatically selected. You may
    select a different match by pressing <guimenuitem>Ctrl+2, 3, 4, or
    5</guimenuitem>. Of course, pressing <keycombo>
        <keycap>Ctrl</keycap>

        <keycap>5</keycap>
      </keycombo> will have no effect, if there is no match #5. To use the
    selected match in your translation, use
    <guimenuitem>Ctrl+R</guimenuitem> to replace the target field with the match or use
    <guimenuitem>Ctrl+I </guimenuitem> to insert it at the cursor position.</para>

    <para>The three matching percentages are in the following order:
    <itemizedlist>
      <listitem>
		  <para>the percentage calculated with stemming<footnote>
		  <para>See <ulink url="https://en.wikipedia.org/wiki/Stemming">https://en.wikipedia.org/wiki/Stemming</ulink></para>
		  </footnote> and ignoring tags and numbers (generally the
		  highest)</para>
	  </listitem>
      <listitem>
		  <para>the percentage calculated without stemming and still ignoring
		  tags and numbers (generally slightly lower)</para>
	  </listitem>
      <listitem>
		  <para>the percentage calculated with the full text, including tags and
		  numbers (generally the lowest)
		  </para>
	  </listitem>
    </itemizedlist>
    </para>

    <para>It is possible to modify the sort order of the three percentages but
    not which is used to select the fuzzy matches.</para>

    <para>The selected fuzzy match is highlighted in bold, words that are
    missing in the segment you are translating are colored blue and words
    adjacent to the missing parts green. In the above example the source segment
    is <emphasis role="bold">Context menu command</emphasis>. The top match is
    100%, because all words match. So do the next two matches, and the match #4
    is similar, but different. The line with the matching percentage also
    includes the name of the translation memory containing the match. If there's
    no file name displayed, the source is the internal project translation
    memory. Orphan segments (match #2) describe segments in the default project
    translation memory that have no corresponding source segment.</para>
  </section>

  <section>
    <title>Glossary</title>

    <para>The Glossary pane allows you to access your own collection of
    expressions and specialist terminology which you have built up in your
    glossary files. It shows translation of terms found in the current
    segment. The source segment in the example below was “<emphasis>Context
    menu command</emphasis>”, as in the Fuzzy Matches example above, and the
    terms shown were found in the glossaries, available (Microsoft's Term
    collection and Slovenian Linux User group Glossary).</para>

    <para>If you have TransTips option activated (<guimenuitem>Options →
    TransTips</guimenuitem>), you can right click on the highlighted word in
    the source segment to open a pop-up menu with suggested translation, as
    offered by your glossary. Selecting one of them will insert it at the
    current cursor position into the target segment. You can also highlight
    your preferred alternative in the glossary pane and insert it into the
    target by right clicking on the selection.</para>
  </section>

  <section>
    <title>Dictionary</title>

    <para>Dictionaries are the electronic equivalents of printed dictionaries
    like Merriam Webster, Duden, Larousse etc., that you may have on your
    desk. See more about them in the chapter on <link linkend="appendix.dictionaries">Dictionaries</link></para>
  </section>

  <section>
    <title>Machine Translation</title>

    <para>The machine translation pane, when opened, contains the suggestions
    by machine translation tools for the current segment. Press
    <keysym>Ctrl+M</keysym> to replace the translation of the current segment
    with the suggested translation.</para>
  </section>

  <section>
    <title>Multiple Translations</title>

    <para>A given source segment may require several different translations,
    depending on the context. If the current translation of the segment does
    not fit, the user can select <guisubmenu>Edit → Create Alternative
    Translation</guisubmenu>. The target text entered after that will be
    treated as an alternative translation of the source segment. You can
    define one of the alternative - for instance the most probable among them
    - as default translation by selecting <guisubmenu>Edit → Use as Default
    Translation</guisubmenu></para>
  </section>

  <section>
    <title>Notes</title>

    <para>The translator can add notes to the opened segment, for instance to
    come back later to the segment and redo the translation, check that
    alternative translations are correct or to ask colleagues for their
    opinion. You can browse through notes using <guisubmenu>GoTo → Next
    Note</guisubmenu> and <guisubmenu>GoTo → Previous
    Note</guisubmenu>.</para>
  </section>

  <section>
    <title>Comments</title>

    <para>Some of the file formats, specialized for translation work, for
    instance PO, allow the inclusion of comments. This way the translator can
    be provided the context about the segment to be translated. In the example
    below, the author of the PO file included a warning for the translator to
    check the length of the translation:</para>
  </section>

  <section>
    <title>Status bar</title>

    <para>The status bar displays work-flow related messages at the bottom of
    the main window. This bar gives the user feedback on specific operations
    that are in progress. It also displays the number of fuzzy and glossary
    matches for the current segment.</para>

    <para>The counters in the lower right corner keep track of the progress of
    the translation (numbers in the left hand column refer to the figure
    above):</para>

    <table>
      <title>Main Window - counters</title>

      <tgroup cols="2">
        <colspec align="left" colnum="1"/>

        <tbody>
          <row>
            <entry>27/27</entry>

            <entry>number of segments - translated vs total for the current
            file</entry>
          </row>

          <row>
            <entry>9319/16338</entry>

            <entry>number of unique segments - translated vs total in the
            project</entry>
          </row>

          <row>
            <entry>31175</entry>

            <entry>total number of segments (including repeats) in the
            project</entry>
          </row>

          <row>
            <entry>103/114</entry>

            <entry>number of source and target characters in the current
            segment</entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <para>From a practical point of view, the most important pair of numbers
    is the second pair: it tells, how much you have done so far, in relation
    to the total or second number. The project in the example is evidently
    finished, as all the unique segments have been translated.</para>
  </section>
</chapter>

  <chapter id="project.folder">
  <title>Project folder</title>

  <para>An OmegaT project is a folder containing files and subfolders.</para>

  <section>
    <title>source</title>

    <para>The source subfolder contains files to be translated. You can add
    the files to it later. Note that the structure of the source subfolder may
    take any form you like. If the files to be translated are parts of a tree
    structure (as in a website), you need only specify the top-level subfolder
    and OmegaT will maintain the entire contents, while keeping the tree
    structure intact.</para>
  </section>

  <section>
    <title>target</title>

    <para>This subfolder is initially empty. To add contents to it, select
    <menuchoice>
        <shortcut>
          <keycombo>
            <keycap>Ctrl</keycap>

            <keycap>D</keycap>
          </keycombo>
        </shortcut>

        <guimenu>Project</guimenu>

        <guimenuitem>Create Translated Documents</guimenuitem>
      </menuchoice>. Files within the <filename>source</filename> folder,
    whether translated or not, are then generated here, with the same
    hierarchy as present in the source subfolder. The contents of the target
    subfolder will reflect the current state of the translation, as present in
    the project translation memory, saved in the current <emphasis role="bold">/omegat/project_save.tmx</emphasis>. Untranslated segments
    will hereby remain in the source language.</para>
  </section>

  <section>
    <title>tm</title>

    <para>The /tm/ folder can contain any number of ancillary translation
    memories - i.e. tmx files. Such files can be created in any of the three
    varieties indicated above. Note that other CAT tools can export (and
    import as well) tmx files, usually in all three forms. The best thing of
    course is to use OmegaT-specific TMX files (see above), so that the
    in-line formatting within the segment is retained.</para>

    <para>The contents of translation memories in the tm subfolder serve to
    generate suggestions for the text(s) to be translated. Any text, already
    translated and stored in those files, will appear among the fuzzy matches,
    if it is sufficiently similar to the text currently being
    translated.</para>

    <para>If the source segment in one of the ancillary TMs is identical to
    the text being translated, OmegaT acts as defined in the <menuchoice>
        <guimenu>Options</guimenu>

        <guimenuitem>Editing Behavior...</guimenuitem>
      </menuchoice> dialog window. For instance (if the default is accepted),
    the translation from the ancillary TM is accepted and prefixed
    with<emphasis> [fuzzy]</emphasis>, so that the translator can review the
    translations at a later stage and check whether the segments tagged this
    way, have been translated correctly.</para>

    <para>It may happen, that translation memories, available in the
    <filename>tm</filename> subfolder, contain segments with identical source
    text, but differing targets. TMX files are read sorted by their names and
    segments within a given TMX file line by line. The last segment with the
    identical source text will thus prevail (Note: of course it makes more
    sense to avoid this to happen in the first place).</para>

    <para>Note that the TMX files in the tm folder can be compressed with
    gzip.</para>

    <section>
      <title>tm/auto</title>

      <para>If it is clear from the very start, that translations in a given
      TM (or TMs) are all correct, one can put them into the<emphasis role="bold"> tm/auto</emphasis> folder and avoid confirming a lot
      of<emphasis> [fuzzy]</emphasis> cases.</para>

      <para><orderedlist>
          <listitem>
            <para>Put the TMX in /tm/auto.</para>
          </listitem>

          <listitem>
            <para>Open the project. The changes are displayed.</para>
          </listitem>

          <listitem>
            <para>Make a slight change anywhere in the project. This modifies
            <filename>project_save.tmx</filename> (by adding proper
            Translation Units from "auto" TMX)</para>
          </listitem>
        </orderedlist></para>

      <para>Note: if TMX is removed from /tm/auto before step 3, no extra
      Translation Unit is added.</para>
    </section>

    <section>
      <title>tm/enforce</title>

      <para>If you have no doubt that a TMX is more accurate than the
      <filename>project_save.tmx</filename> of OmegaT, put this TMX in
      /tm/enforce to overwrite existing default translations
      unconditionally.</para>

      <para><orderedlist>
          <listitem>
            <para>Put the TMX in /tm/enforce.</para>
          </listitem>

          <listitem>
            <para>Open the project. The changes are displayed.</para>
          </listitem>

          <listitem>
            <para>Make a slight change anywhere in the project. This modifies
            <filename>project_save.tmx</filename>.</para>
          </listitem>

          <listitem>
            <para>Make decision about immunity of the enforced
            segments:<itemizedlist>
                <listitem>
                  <para>If they <emphasis>don't need</emphasis> to stay immune
                  from further changes, then remove the TMX from
                  /tm/enforce.</para>
                </listitem>

                <listitem>
                  <para>If they <emphasis>need</emphasis> to stay immune from
                  further changes, then keep the TMX in /tm/enforce.</para>
                </listitem>
              </itemizedlist></para>
          </listitem>
        </orderedlist></para>

      <para>Note: if TMX is removed from /tm/enforce before step 3,
      enforcements aren't kept at all.</para>
    </section>

    <section>
      <title>tm/mt</title>

      <para>In the editor pane, when a match is inserted from a TMX contained
      in a folder named <filename>mt</filename>, the background of the active
      segment is changed to red. The background is restored to normal when the
      segment is left.</para>
    </section>

    <section>
      <title>tm/penalty-xxx</title>

      <para>Sometimes, it is useful to distinguish between high-quality
      translation memories and those that are, because of the subject matter,
      client, revision status, etc., less reliable. For translation memories
      in folders with a name <filename>penalty-xxx</filename> (with xxx
      between 0 and 100), matches will be degraded according to the name of
      the folder: a 100% match in any of TMs, residing in a folder called
      <filename>penalty-30</filename> for instance, will be lowered to a 70%
      match. The penalty applies to all three match percentages: matches 75,
      80, 90 will in this case be lowered to 45, 50, 60.</para>
    </section>
  </section>

  <section>
    <title>dictionary</title>

    <para>Initially empty, this folder will contain dictionaries you have
    added to the project. See <link linkend="appendix.dictionaries">Dictionaries</link> for more on this
    subject.</para>
  </section>

  <section>
    <title>glossary</title>

    <para>This folder is initially empty. It will contain glossaries you will
    be using in the project. See <link linkend="appendix.glossaries">Glossaries</link> for more on this
    subject.</para>
  </section>

  <section id="folder.omegat">
    <title>omegat</title>

    <para>The <emphasis role="bold">omegat</emphasis> subfolder contains at
    least one and possibly several other files. The most important file here
    is the <filename>project_save.tmx, </filename>that is the working
    translation memory for the project. Backups of this file (with extension
    bak) are added progressively to this subfolder, first at the beginning of
    the translation session, at its end, and while the translation
    progresses.</para>

    <para>During translation additional files may get created in this
    subfolder as follows</para>

    <variablelist>
      <varlistentry>
        <term>stats.txt</term>

        <listitem>
          <para>contains the current statistics of the current project. You
          can view it by selecting <guimenuitem>Tools &gt;
          Statistics</guimenuitem></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>ignored_words.txt.</term>

        <term>learned_words.txt</term>

        <listitem>
          <para>are created and used by the spell checker. If you already have
          collected words you wish the spell checker to ignore / accept, you
          just need to copy the corresponding two files into the
          <filename>omegat</filename>subfolder of your current project.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>project_stats_match.txt</term>

        <listitem>
          <para>contains the latest project match statistics, generated by
          <guimenuitem>Tools &gt; Match Statistics</guimenuitem></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>segmentation.conf</term>

        <listitem>
          <para>if existing, it contains project-specific segmentation
          rules.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>filters.xml</term>

        <listitem>
          <para>if existing, it contains project-specific file filters.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>uiLayout.xml</term>

        <listitem>
          <para>if existing, it contains project-specific GUI settings.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>omegat.project (file)</title>

    <para>Contains project parameters as defined in the <link linkend="dialogs.projectproperties">Project properties</link>
    dialog.</para>
  </section>

  <section>
    <title>.repositories</title>

    <para>In a team project, this folder contains a versioned copy of the
    project tree structure linked directly to the remote server.</para>

    <para>You can make changes to remote files (e.g. deleting a file) using
    this folder and a Git or SVN client.</para>

    <para>In some operating systems, this folder is not displayed by default.
    Activate the "Show hidden files" option to make it visible.</para>
  </section>
</chapter>

  <chapter id="howtos">
  <title>How To...</title>

  <section id="howto.setupteamproject">
  <title>Set up a Team Project</title>

  <para>Setting up a team project requires some knowledge of servers and the
  SVN or Git versioning systems. It should thus be carried out by a project
  manager, a project leader or a localisation engineer.</para>

  <para>As plenty of information about SVN and Git is easily available, we
  won't describe how they work here, but only how OmegaT works with
  them.</para>

  <section>
    <title>Step 1: Create an empty project on a server</title>

    <para><emphasis role="bold">Creating an empty project on a
    server</emphasis></para>

    <orderedlist>
      <listitem>
        <para>Create an SVN or Git repository on a server that will be
        accessible by the translators.</para>
      </listitem>

      <listitem>
        <para>Create a local copy of the repository (<command>check
        out</command> with SVN, <command>clone</command> with Git).</para>
      </listitem>

      <listitem>
        <para>Create a new, empty OmegaT project in the local repository. This
        can be done in two ways:</para>

        <itemizedlist>
          <listitem>
            <para><menuchoice>
                <guimenuitem>Project</guimenuitem>

                <guimenuitem>New...</guimenuitem>
              </menuchoice></para>
          </listitem>

          <listitem>
            <para>on the command line: <command>java -jar OmegaT.jar team init
            [lang1] [lang2]</command></para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>Add the new OmegaT project to the versioning system
        (<command>add</command> with SVN and Git)</para>

        <para>Note: If the project was created with the command line in step
        3, this step has already been done by the program.</para>
      </listitem>

      <listitem>
        <para>Publish the new OmegaT project on the server
        (<command>commit</command> with SVN, <command>commit</command>
        followed by <command>push</command> with Git).</para>
      </listitem>
    </orderedlist>

    <para><emphasis role="bold">Specific parameters</emphasis></para>

    <para>If the project uses specific filters and segmentation parameters,
    both the <filename>filters.xml</filename> and
    <filename>segmentation.conf</filename> files must be added to the
    versioning system and published on the server.</para>
  </section>

  <section>
    <title>Step 2: Add files to translate and other resources</title>

    <para>Use an SVN or Git client to add the files to translate.</para>

    <para>This can also be done within OmegaT:</para>

    <orderedlist>
      <listitem>
        <para>copy the files to the <filename>/source</filename> folder</para>
      </listitem>

      <listitem>
        <para>use <menuchoice>
            <guimenuitem>Project</guimenuitem>

            <guimenuitem>Commit Source Files</guimenuitem>
          </menuchoice></para>
      </listitem>
    </orderedlist>

    <para>To add other resources (dictionaries, TMXs or glossaries), use an
    SVN or Git client.</para>

    <para>To <emphasis role="bold">delete files</emphasis>, use an SVN or Git
    client.</para>

    <para>Note that only two files are modified by OmegaT during
    translation:</para>

    <itemizedlist>
      <listitem>
        <para><filename>omegat/project_save.tmx</filename></para>
      </listitem>

      <listitem>
        <para><filename>glossary/glossary.txt</filename></para>
      </listitem>
    </itemizedlist>

    <para>All other files are read-only. If the translator attempts to modify
    them, they will go back to their original state whenever the project is
    opened, closed, saved or reloaded.</para>
  </section>

  <section>
    <title>Step 3: Send an invitation to the translator</title>

    <para>Once the project is set up on the server, the project manager can
    invite the translator to work on it in either of two different
    ways:</para>

    <itemizedlist>
      <listitem>
        <para>sending the URL of the project and asking the translator to
        create a local copy with <menuchoice>
            <guimenuitem>Project</guimenuitem>

            <guimenuitem>Download Team Project</guimenuitem>
          </menuchoice>.</para>
      </listitem>

      <listitem>
        <para>sending an <filename>omegat.project</filename> file containing a
        reference to the URL and asking the translator to copy it into a
        dedicated folder and open it with OmegaT.</para>

        <para>The reference to the URL is specified as below (here to a Git
        repository):</para>

        <programlisting>&lt;repositories&gt;
 &lt;repository type="git" url="https://repo_for_OmegaT_team_project.git"&gt;
  &lt;mapping local="" repository=""/&gt;
 &lt;/repository&gt;
&lt;/repositories&gt;</programlisting>
      </listitem>
    </itemizedlist>

    <para>In both cases, the project manager must send the translator their ID
    and password to access the repository.</para>

    <para><emphasis role="bold">Checking statistics</emphasis></para>

    <para>The Project Manager should check with the translator that the
    statistics are identical on both sides (server side and translator
    side).</para>

    <para>If there are any differences, check that the
    <filename>filters.xml</filename> and
    <filename>segmentation.conf</filename> files are under version
    control.</para>
  </section>

  <section>
    <title>Special case: selective sharing</title>

    <para>The process above describes the usual case, where the project
    manager wants to have full control of the project and where the files (and
    the statistics) are identical on both sides (server side and translator
    side).</para>

    <para>OmegaT team projects can also be set up in a different way, where
    several translators share the project_save.tmx file but not (all of) the (source)
    files.</para>

    <para>In this case, the procedure is the same, but the project manager
    does not add (all) files to version-controlled project. Instead, the translators copy the files themselves,
        or add mappings to synchronize files from other locations.
    </para>

      <para>The mappings can be added via the UI:
          <menuchoice>
              <guimenuitem>Project</guimenuitem>
              <guimenuitem>Properties</guimenuitem>
              <guimenuitem>Repository Mapping</guimenuitem>
          </menuchoice>
	  or by editing <filename>omegat.project</filename>.
      </para>
  </section>

  <section id="howto.setupteamproject.mappingparameters">
    <title>Mapping parameters</title>

    <variablelist>
      <varlistentry>
        <term>repository type</term>

        <listitem>
          <para>This can be either http (which includes https), svn, git or file.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>repository url</term>

        <listitem>
          <para>Remote location or directory of the files to translate.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>mapping local</term>

        <listitem>
          <para>Name of the local folder or file, relative to the root of the
          OmegaT project.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>mapping repository</term>

        <listitem>
          <para>Name of the remote folder or file, relative to the repository
          url.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>excludes</term>

        <listitem>
          <para>Add patterns using wildcards (Apache Ant style): *, ?,
          **. Separate different patterns with a semicolon.</para>

          <para>Example: <userinput>**/excludedfolder/**;*.txt</userinput> excludes files that have /excludedfolder/ in the path, and files with .txt extension.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>includes</term>

        <listitem>
          <para>As above.</para>

          <para>Example: <userinput>**/*.docx</userinput> to add all .docx
          files, wherever they are located in the project, even in excluded folders</para>

          <para>By default, all files that are not excluded are included. You only need to specify this to
              override some exclusions.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>Example mappings</title>

    <para>Default project mapping: <programlisting>&lt;repositories&gt;
 &lt;repository type="svn" url="https://repo_for_OmegaT_team_project"&gt;
  &lt;mapping local="" repository=""/&gt;
 &lt;/repository&gt;
&lt;/repositories&gt;</programlisting></para>

    <para>All the contents of
    <filename>https://repo_for_OmegaT_team_project</filename> are mapped to
    the local OmegaT project</para>

    <para>Mapping for projects in a subdirectory of the repository: <programlisting>&lt;repositories&gt;
 &lt;repository type="svn" url="https://repo_for_All_OmegaT_team_projects"&gt;
  &lt;mapping local="" repository="En-US_DE_project"/&gt;
 &lt;/repository&gt;
&lt;/repositories&gt;</programlisting></para>

    <para>All the contents of
    <filename>https://repo_for_All_OmegaT_team_projects/En-US_DE_project</filename>
    are mapped to the local OmegaT project.</para>

    <para>Mapping for additional sources from remote repository, with filters: <programlisting>
&lt;repositories&gt;
 &lt;repository type="svn" url="https://repo_for_All_OmegaT_team_project_sources"&gt;
  &lt;mapping local="source/subdir" repository=""&gt;
   &lt;excludes&gt;**/*.bak&lt;/excludes&gt;
   &lt;includes&gt;readme.bak&lt;/includes&gt;
  &lt;/mapping&gt;
 &lt;/repository&gt;
&lt;/repositories&gt;</programlisting></para>

    <para>All the contents of
      <filename>https://repo_for_All_OmegaT_team_project_sources</filename>
      are mapped to the local OmegaT project source folder, except all *.bak files but readme.bak.
    </para>

    <para><programlisting>Mapping for extra source files from the web: &lt;repository type="http" url="https://github.com/omegat-org/omegat/raw/master/"&gt;
 &lt;mapping local="source/Bundle.properties" repository="src/org/omegat/Bundle.properties"/&gt;
&lt;/repository&gt;</programlisting></para>

    <para>The remote file
    <filename>https://github.com/omegat-org/omegat/raw/master/src/org/omegat/Bundle.properties</filename>
    is mapped to the local file
    <filename>source/Bundle.properties</filename>.</para>

    <para>Mapping with renaming: <programlisting>&lt;repository type="http" url="https://github.com/omegat-org/omegat/raw/master/"&gt;
 &lt;mapping local="source/readme_tr.txt" repository="release/readme.txt"/&gt;
&lt;/repository&gt;</programlisting></para>

    <para>The remote file
    <filename>https://github.com/omegat-org/omegat/raw/master/release/readme.txt</filename>
    is mapped to the local file
    <filename>source/readme_tr.txt</filename>.</para>

    <para>This makes it possible to rename the file to be translated.</para>

    <para>Local file mapping: <programlisting>&lt;repository type="file" url="/home/me/myfiles"&gt;
 &lt;mapping local="source/file.txt" repository="my/file.txt"/&gt;
 &lt;mapping local="source/file2.txt" repository="some/file.txt"/&gt;
&lt;/repository&gt;</programlisting></para>

    <para>The local file
        <filename>/home/me/myfiles/my/file.txt</filename>
        is mapped to the local file
        <filename>source/file.txt</filename> and <filename>/home/me/myfiles/some/file.txt</filename> is mapped to the local file <filename>source/file2.txt</filename>.
    </para>

    <para>Warning: if a file does not exist, the project won't load.</para>
    <para>You can add as many mappings as you want, but only in the context of a team project, i.e. one of the mappings includes omegat.project.
    This feature is intended for gathering source files, but you're not restricted to source files.</para>
  </section>
  <section>
    <title>Note about omegat.project and mappings</title>
    <para>When you create a new project and commit that to a repository, the <filename>omegat.project</filename> file
        doesn't contain any mapping.
        When you download the project, the project is converted to a team project locally and a default mapping is added.
    </para>
    <para>Note that the omegat.project file in the repository is not changed automatically and still doesn't contain
        the mappings. When you load a project, all changes in the repository are copied to the local project, including
        the <filename>omegat.project</filename> file with project settings. If the file doesn't contain mappings, the
        existing local mappings are re-applied, and only those. All other local changes to the project are reverted.
      If the file does contain mappings, then local changes to mappings are lost.
    </para>
  </section>

</section>

  <section id="howto.useteamproject">
  <title>Use a Team Project</title>

  <para>OmegaT team projects must first be <link linkend="howto.setupteamproject">set up</link> on a server.</para>

  <para>To use a team project for the first time, follow the procedure
  provided by the project manager.</para>

  <para>Once the project has been opened, translation proceeds in the same way
  as for a non-team project, except the following points.</para>

  <para><emphasis role="bold">Automatic saving</emphasis></para>

  <para>Every 3 minutes (by default), the local project is synchronised with
  the remote repository so that the project manager or other translators can
  see and use translations added during that period.</para>

  <para>The interval of 3 minutes can be changed in <link linkend="dialogs.preferences.savingandoutput"><menuchoice>
      <guimenuitem>Options</guimenuitem>

      <guimenuitem>Preferences</guimenuitem>

      <guimenuitem>Saving and Output</guimenuitem>
    </menuchoice></link>.</para>

  <para><emphasis role="bold">Synchronised files</emphasis></para>

  <para>Whenever the project is automatically saved, but also when it is
  opened, closed and reloaded, only two files are actually
  synchronised:</para>

  <itemizedlist>
    <listitem>
      <para><filename>omegat/project_save.tmx</filename></para>
    </listitem>

    <listitem>
      <para><filename>glossary/glossary.txt</filename></para>
    </listitem>
  </itemizedlist>

  <para>All other files will be replaced by the files in the remote
  repository.</para>

  <para><emphasis role="bold">Adding new source files</emphasis></para>

  <para>To add a new source file:</para>

  <para><orderedlist>
      <listitem>
        <para>copy the files to the <filename>/source</filename> folder</para>
      </listitem>

      <listitem>
        <para>use <menuchoice>
            <guimenuitem>Project</guimenuitem>

            <guimenuitem>Commit Source Files</guimenuitem>
          </menuchoice></para>
      </listitem>
    </orderedlist>Existing source files can be modified, but the commit
  operation must be carried out before an automatic save and before the
  project is reloaded or closed.</para>

  <para><emphasis role="bold">Deleting source files</emphasis></para>

  <para>Files must be deleted by the project manager.</para>

  <para><emphasis role="bold">Changing segmentation rules or file
  filters</emphasis></para>

  <para>Project parameters must be changed by the project manager.</para>

  <para><emphasis role="bold">Working offline</emphasis></para>

  <para>A team project can be opened and translated offline. All the changes
  will be synchronised the next time a connection is available.</para>

  <para>To work offline:</para>

  <itemizedlist>
    <listitem>
      <para>Disconnect from the network before opening the project,</para>
    </listitem>

    <listitem>
      <para>or open the project with the command line using the
      <command>--no-team</command> option.</para>
    </listitem>
  </itemizedlist>
</section>

  <section id="howto.reusetm">
  <title>Reuse Translation Memories</title>

  <para>Initially, that is when the project is created, the main TM of the
  project, <filename>project_save.tmx</filename> is empty. This TM gradually
  becomes filled during the translation. To speed up this process, existing
  translations can be reused. If a given sentence has already been translated
  once, and translated correctly, there is no need for it to be retranslated.
  Translation memories may also contain reference translations: multinational
  legislation, such as that of the European Community, is a typical
  example.</para>

  <para>When you create the target documents in an
  <application>OmegaT</application> project, the translation memory of the
  project is output in the form of three files in the root folder of your
  <application>OmegaT</application> project (see the above description). You
  can regard these three tmx files (<filename>-omegat.tmx</filename>,
  <filename>-level1.tmx</filename> and <filename>-level2.tmx</filename>) as an
  "export translation memory", i.e. as an export of your current project's
  content in bilingual form.</para>

  <para>Should you wish to reuse a translation memory from a previous project
  (for example because the new project is similar to the previous project, or
  uses terminology which might have been used before), you can use these
  translation memories as "input translation memories", i.e. for import into
  your new project. In this case, place the translation memories you wish to
  use in the <emphasis>/tm</emphasis> or <emphasis>/tm</emphasis>/auto folder
  of your new project: in the former case you will get hits from these
  translation memories in the fuzzy matches viewer, and in the latter case
  these TMs will be used to pre-translate your source text.</para>

  <para>By default, the /tm folder is below the project's root folder (e.g.
  ...<emphasis>/MyProject/tm</emphasis>), but you can choose a different
  folder in the project properties dialog if you wish. This is useful if you
  frequently use translation memories produced in the past, for example
  because they are on the same subject or for the same customer. In this case,
  a useful procedure would be:</para>

  <itemizedlist>
    <listitem>
      <para>Create a folder (a "repository folder") in a convenient location
      on your hard drive for the translation memories for a particular
      customer or subject.</para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para>Whenever you finish a project, copy one of the three "export"
      translation memory files from the root folder of the project to the
      repository folder.</para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para>When you begin a new project on the same subject or for the same
      customer, navigate to the repository folder in the <guimenuitem>Project
      &gt; Properties &gt; Edit Project dialog</guimenuitem> and select it as
      the translation memory folder.</para>
    </listitem>
  </itemizedlist>

  <para>Note that all the tmx files in the /tm repository are parsed when the
  project is opened, so putting all different TMs you may have on hand into
  this folder may unnecessarily slow OmegaT down. You may even consider
  removing those that are not required any more, once you have used their
  contents to fill up the <filename>project-save.tmx</filename> file.</para>

  <section>
    <title>Importing and exporting translation memories</title>

    <para>OmegaT supports imported tmx versions 1.1-1.4b (both level 1 and
    level 2). This enables the translation memories produced by other tools to
    be read by OmegaT. However, OmegaT does not fully support imported level 2
    tmx files (these store not only the translation, but also the formatting).
    Level 2 tmx files will still be imported and their textual content can be
    seen in OmegaT, but the quality of fuzzy matches will be somewhat
    lower.</para>

    <para>OmegaT follows very strict procedures when loading translation
    memory (tmx) files. If an error is found in such a file, OmegaT will
    indicate the position within the defective file at which the error is
    located.</para>

    <para>Some tools are known to produce invalid tmx files under certain
    conditions. If you wish to use such files as reference translations in
    OmegaT, they must be repaired, or OmegaT will report an error and fail to
    load them. Fixes are trivial operations and OmegaT assists troubleshooting
    with the related error message. You can ask the user group for advice if
    you have problems.</para>

    <para>OmegaT exports version 1.4 TMX files (both level 1 and level 2). The
    level 2 export is not fully compliant with the level 2 standard, but is
    sufficiently close and will generate correct matches in other translation
    memory tools supporting TMX Level 2. If you only need textual information
    (and not formatting information), use the level 1 file that OmegaT has
    created.</para>
  </section>

  <section>
    <title>Creating a translation memory for selected documents</title>

    <para>In case translators need to share their TMX bases while excluding
    some of their parts or including just translations of certain files,
    sharing the complete <filename>ProjectName-omegat.tmx</filename> is out of
    question. The following recipe is just one of the possibilities, but
    simple enough to follow and without any dangers for the assets.</para>

    <itemizedlist>
      <listitem>
        <para>Create a project, separate for other projects, in the desired
        language pair, with an appropriate name - note that the TMXs created
        will include this name.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Copy the documents, you need the translation memory for, into
        the source folder of the project.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Copy the translation memories, containing the translations of
        the documents above, into <filename>tm/auto</filename> subfolder of
        the new project.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Start the project. Check for possible Tag errors with
        <keycap>Ctrl+T </keycap>and untranslated segments with
        <keycap>Ctrl+U</keycap>. To check everything is as expected, you may
        press <keycap>Ctrl+D</keycap> to create the target documents and check
        their contents.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>When you exit the project. the TMX files in the main project
        folder (see above) now contain the translations in the selected
        language pair, for the files, you have copied into the source folder.
        Copy them to a safe place for future referrals.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>To avoid reusing the project and thus possibly polluting future
        cases, delete the project folder or archive it away from your
        workplace.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Sharing translation memories</title>

    <para>In cases where a team of translators is involved, translators will
    prefer to share common translation memories rather than distribute their
    local versions.</para>

    <para>OmegaT interfaces to SVN and Git, two common team software
    versioning and revision control systems (RCS), available under an open
    source license. In case of OmegaT complete project folders - in other
    words the translation memories involved as well as source folders, project
    settings etc - are managed by the selected RCS. see more in Chapter</para>
  </section>

  <section>
    <title>Using TMX with alternative language</title>

    <para>There may be cases where you have done a project with e.g. Dutch
    sources, and a translation in say English. Then you need a translation in
    e.g. Chinese, but your translator does not understand Dutch; she, however,
    understands perfectly English. In this case, the NL-EN translation memory
    can serve as a go-between to help generate NL to ZH translation.</para>

    <para>The solution in our example is to copy the existing translation
    memory into the tm/tmx2source/ subfolder and rename it to ZH_CN.tmx to
    indicate the target language of the tmx. The translator will be shown
    English translations for source segments in Dutch and use them to create
    the Chinese translation.</para>

    <para><emphasis role="bold">Important: </emphasis>the supporting TMX must
    be renamed XX_YY.tmx, where XX_YY is the target language of the tmx, for
    instance to ZH_CN.tmx in the example above. The project and TMX source
    languages should of course be identical - NL in our example. Note that
    only one TMX for a given language pair is possible, so if several
    translation memories should be involved, you will need to merge them all
    into the XX_YY.tmx.</para>
  </section>
</section>

  <section id="howto.preventdataloss">
  <title>Prevent data loss</title>

  <para><application>OmegaT</application> is a robust application. However,
  you should take precautions against data loss when using
  <application>OmegaT</application>, just as with any other application. When
  you translate your files, <application>OmegaT</application> stores all your
  progress in the translation memory <literal>project_save.tmx</literal> that
  resides in the project's <literal>/omegat</literal> subfolder.</para>

  <para>OmegaT also backs up the translation memory to
  project_save.tmx.YEARMMDDHHNN.bak in the same subfolder each time a project
  is opened or reloaded. YEAR is the 4-digit year, MM is the month, DD the day
  of the month, and HH and NN are the hours and minutes when the previous
  translation memory was saved.</para>

  <para>If you believe that you have lost translation data, you can use the
  following procedure to restore the project to its most recently saved state,
  usually not older than approximately 10 minutes or so:</para>

  <orderedlist>
    <listitem>
      <para>close the project</para>
    </listitem>

    <listitem>
      <para>rename the current <filename>project_save.tmx </filename>file
      (e.g. to <filename>project_save.tmx.temporary</filename>)</para>
    </listitem>

    <listitem>
      <para>select the backup translation memory that is the most likely to
      contain the data you are looking for</para>
    </listitem>

    <listitem>
      <para>rename it <literal>project_save.tmx</literal></para>
    </listitem>

    <listitem>
      <para>open the project</para>
    </listitem>
  </orderedlist>

  <para>To avoid losing important data:</para>

  <itemizedlist>
    <listitem>
      <para>Make regular copies of the file /omegat/project_save.tmx to backup
      media, such as CD or DVD.</para>
    </listitem>

    <listitem>
      <para>Until you are familiar with <application>OmegaT</application>,
      create translated files at regular intervals and check that the
      translated file contains the latest version of your translation.</para>
    </listitem>

    <listitem>
      <para>Take particular care when making changes to the files in
      <literal>/source</literal> while in the middle of a project. If the
      source file is modified after you have begun translating,
      <application>OmegaT</application> may be unable to find a segment that
      you have already translated.</para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para>Use these Help texts to get started. Should you run into problems,
      post a message in the <ulink url="https://omegat.org/support"><application>OmegaT</application>
      user group</ulink>. Do not hesitate to post in the language you feel the
      most familiar with.</para>
    </listitem>
  </itemizedlist>
</section>

  <section id="howto.translatepdf">
  <title>Translate a PDF file</title>

<para>PDF files are a special case. They contain text formatting
  information, but such information cannot be reused by
  <application>OmegaT</application> in order to create target files.
  Thus, PDF files are handled as plain text files, and output files are
  plain text files.</para>
  <para>If you need to reproduce text formatting (as well as other
  things such as drawings) in your translation, there are three ways
  to try:</para>
  <orderedlist>
    <listitem>
      <para>Use <application>OmegaT’s</application> default filter
      (PDF input), translate, create a target file (it will be a plain
      text file), add relevant formatting and items manually.</para>
    </listitem>
    <listitem>
      <para>Use the Iceni Infix filter.
      See <ulink url="https://omegat.org/howtos/iceni_infix.html">Howto - Translating PDF files with Iceni Infix and OmegaT</ulink>.</para>
    </listitem>
    <listitem>
      <para>Import the source file to
      <ulink url="https://www.libreoffice.org/discover/draw/">LibreOffice Draw</ulink>,
      save it as an ODG file, translate, export to PDF as needed.</para>
    </listitem>
  </orderedlist>
  <para><emphasis role="bold">Note:</emphasis> the above information
  applies only to PDF files with a text layer. If you have a PDF file
  made of scanned pages (sometimes such files are referred to as ‘dead’
  PDFs), you need to use an OCR (optical character recognition) program
  to recognize the text and convert it to a format that can be handled
  by OmegaT.</para>



  <section id="other.file.formats">
    <title>Other file formats</title>

    <para>Other plain text or formatted text file formats suitable for
    processing in OmegaT may also exist.</para>

    <para>External tools can be used to convert files to supported
    formats. The translated files will then need to be converted back to the
    original format. For example, if you have an outdated Microsoft Word
    version, that does not handle the ODT format, here's a round trip for Word
    files with the DOC extension:</para>

    <itemizedlist>
      <listitem>
        <para>import the file into ODF writer</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>save the file in ODT format</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>translate it into the target ODT file</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>load the target file in ODF writer</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>save the file as a DOC file</para>
      </listitem>
    </itemizedlist>

    <para>The quality of formatting of the translated file will depend on the
    quality of the round-trip conversion. Before proceeding with such
    conversions, be sure to test all options. Check the <ulink url="http://www.omegat.org">OmegaT home page</ulink> for an up-to-date
    listing of auxiliary translation tools.</para>
</section>
</section>

  <section id="howto.managerighttoleft">
  <title>Manage Right-To-Left languages</title>

   <para>Justification of source and target segments depends upon the project
    languages. By default, left justification is used for Left-To-Right (LTR)
    languages and right justification for Right-To-Left (RTL) languages. You
    can toggle between different display modes by pressing <keycombo>
        <keycap>Shift</keycap>

        <keycap>Ctrl</keycap>

        <keycap>O</keycap>
      </keycombo> (this is the letter O and not the numeral 0). The <keycombo>
        <keycap>Shift</keycap>

        <keycap>Ctrl</keycap>

        <keycap>O</keycap>
      </keycombo> toggle has three states:</para>

    <itemizedlist>
      <listitem>
        <para>default justification, that is as defined by the language</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>left justification</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>right justification</para>
      </listitem>
    </itemizedlist>

    <para>Using the RTL mode in <application>OmegaT</application> has no
    influence whatsoever on the display mode of the translated documents
    created in <application>OmegaT</application>. The display mode of the
    translated documents must be modified within the application (such as
    Microsoft Word) commonly used to display or modify them (check the
    relevant manuals for details). Using <keycombo>
        <keycap>Shift</keycap>

        <keycap>Ctrl</keycap>

        <keycap>O</keycap>
      </keycombo> causes both text input and display in
    <application>OmegaT</application> to change. It can be used separately for
    all three panes (Editor, Fuzzy Matches and Glossary) by clicking on the
    pane and toggling the display mode. It can also be used in all the input
    fields found in <application>OmegaT</application> - in the search window,
    for segmentation rules etc.</para>

    <para>Mac OS X users, note: use <keycombo>
        <keycap>Shift</keycap>

        <keycap>Ctrl</keycap>

        <keycap>O</keycap>
      </keycombo> shortcut and <emphasis role="bold">not
    </emphasis>cmd+Ctrl+O.</para>

    <section>
      <title>Mixing RTL and LTR strings in segments</title>

      <para>When writing purely RTL text, the default (LTR) view may be used.
      In many cases, however, it is necessary to embed LTR text in RTL text.
      For example, in OmegaT tags, product names that must be left in the LTR
      source language, place holders in localization files, and numbers in
      text. In cases like these it becomes necessary to switch to RTL mode, so
      that the RTL (in fact bidirectional) text is displayed correctly. It
      should be noted that when <application>OmegaT</application> is in RTL
      mode, both source and target are displayed in RTL mode. This means that
      if the source language is LTR and the target language is RTL, or vice
      versa, it may be necessary to toggle back and forth between RTL and LTR
      modes to view the source and enter the target easily in their respective
      modes.</para>
    </section>

    <section>
      <title><application>OmegaT</application> tags in RTL segments</title>

      <para>As stated above, OmegaT tags are LTR strings. When translating
      between RTL and LTR languages, correctly reading the tags from the
      source and entering them properly in the target may require the
      translator to toggle between LTR and RTL modes numerous times.</para>

      <para>If the document allows, the translator is strongly encouraged to
      remove style information from the original document so that as few tags
      as possible appear in the OmegaT interface. Follow the indications given
      in Hints for tags management. Frequently validate tags (see Tag
      validation) and produce translated documents (see below and Menu) at
      regular intervals to make it easier to catch any problems that arise. A
      hint: translating a plain text version of the text and adding the
      necessary style in the relevant application at a later stage may turn
      out to be less hassle.</para>
    </section>

    <section>
      <title>Creating translated RTL documents</title>

      <para>When the translated document is created, its display direction
      will be the same as that of the original document. If the original
      document was LTR, the display direction of the target document must be
      changed manually to RTL in its viewing application. Each output format
      has specific ways of dealing with RTL display; check the relevant
      application manuals for details.</para>

      <para>For .docx files, a number of changes are however done
      automatically: <itemizedlist>
          <listitem>
            Paragraphs, sections and tables are set to bidi
          </listitem>

          <listitem>
            Runs (text elements) are set to RTL
          </listitem>
        </itemizedlist></para>

      <para>To avoid changing the target files display parameters each time
      the files are opened, it may be possible to change the source file
      display parameters such that such parameters are inherited by the target
      files. Such modifications are possible in ODF files for example.</para>

  </section>
</section>

</chapter>

<!--   <xi:include href="OmegaT4_Troubleshooting.xml"
              xmlns:xi="http://www.w3.org/2001/XInclude"/> -->

  <appendix id="appendix.dictionaries">
  <title>Dictionaries</title>

  <section>
    <title>How to download and install dictionaries</title>

    <para>Dictionaries in <application>OmegaT</application> are based on the
    StarDict or on the Lingvo DSL format. To install the necessary files for
    the StarDict format, proceed as follows:</para>

    <itemizedlist>
      <listitem>
        <para>Search for the required language combination - for instance on
        the <ulink url="https://sourceforge.net/p/omegat/wiki/Reference%20Material/">dictionary links given by the OmegaT
        Wiki</ulink>.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Download the file - it should be a <filename>tarball</filename>
        archive (extension <emphasis>tar.bz</emphasis> or
        <emphasis>tar.bz2</emphasis>).</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Use untar utility (or its equivalent, for instance<filename>
        winrar</filename> in Windows) to extract its contents into the project
        folder "Dictionary". There should be three files, with extensions
        <emphasis>dz, idx </emphasis>and <emphasis>ifo</emphasis>.</para>
      </listitem>
    </itemizedlist>

    <para>Note that in addition to "source-target" dictionaries you can, using
    the Dictionary feature, obtain access to information such as:</para>

    <itemizedlist>
      <listitem>
        <para>Webster's Revised Unabridged Dictionary (1913)</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Longman Dictionary of Contemporary English</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>The Britannica Concise Encyclopedia</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>etc...</para>
      </listitem>
    </itemizedlist>

    <para>Some of the dictionaries have no strings attached - i.e. are "Free
    to use", and others, like the selection above, are under the GPL license.
    The following example shows Merriam Webster 10th dictionary "in
    action":</para>

    <figure id="Dict.Merriam.Webster">
      <title>Merriam Webster dictionary - use</title>

      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="images/DictMerriamWebster.png"/>
        </imageobject>

        <imageobject role="fo">
          <imagedata fileref="images/DictMerriamWebster.png" width="60%"/>
        </imageobject>
      </mediaobject>
    </figure>
  </section>

  <section>
    <title>Problems with dictionaries</title>

    <itemizedlist>
      <listitem>
        <para>Check that your dict files are in the correct folder (or in a
        subfolder below it). Check in <menuchoice>
            <shortcut>
              <keycombo>
                <keycap>Ctrl</keycap>

                <keycap>E</keycap>
              </keycombo>
            </shortcut>

            <guimenu>Project</guimenu>

            <guimenuitem>Properties</guimenuitem>
          </menuchoice>.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Does the folder contain three files of the same name, with
        extensions? If only one file is present, check its extension. If it is
        <emphasis>tar.bz</emphasis>, you have forgotten to unpack (untar)
        it.</para>
      </listitem>
    </itemizedlist>
  </section>
</appendix>

  <appendix id="appendix.glossaries">
  <title>Glossaries</title>

  <para>Glossaries are terminology files. They can be created and updated
  manually or imported from other projects.</para>

  <para>A given project can have any number of reference glossaries, but only
  one glossary, the project default glossary, will be directly writable from
  the OmegaT user interface.</para>

  <para>Regardless of the number of glossaries in a project, any term in a
  segment that has a match in a glossary will be displayed in the Glossary
  pane.</para>

  <section>
    <title>Default glossary</title>

    <para>The default writable glossary is located in the the
    <filename>/glossary</filename> project folder and is called
    <filename>glossary.txt</filename>.</para>

    <para>Its name and location can be modified in the project properties
    dialog but its extension must be <filename>.txt</filename> or
    <filename>.utf8</filename> and its location must be contained in the
    <filename>/glossary</filename> project folder.</para>

    <para>The file does not need to exist when setting it, it will be created
    when adding the first glossary entry. If the file already exists, no
    attempt is done to verify the format or the character set of the file: the
    new entries will always be in tab-separated format and the file will be
    saved in UTF-8 encoding.</para>
  </section>

  <section>
    <title>Usage</title>

    <para>To use an existing glossary, simply place it in the
    <filename>/glossary</filename> folder after creating the project.
    <application>OmegaT</application> automatically detects glossary files in
    this folder when a project is opened.</para>

    <para>To add a new term to the writable glossary use
    <guimenuitem>Edit</guimenuitem> &gt; <guimenuitem>Create Glossary
    Entry</guimenuitem> (<keycap>Ctrl+Shift+G</keycap>). Newly added terms
    will be immediately recognized. To add new terms to reference glossaries,
    edit them in an external text editor. Newly added terms will be recognized
    as soon as the changes have been saved.</para>

    <para>The source term can be a multi-word term.</para>

    <para>The glossary function uses stemming to find matches. Deactivate
    <guimenuitem>Use stemming for glossary entries</guimenuitem> in the OmegaT
    global preferences to only find exact matches for a term.</para>

    <para>The source term is displayed before the " = " sign and the target
    terms after. Comments are displayed after a number and each on a separate
    line. Terms from the project writable glossary are displayed in bold face.
    Terms from the reference glossaries are displayed in normal face.</para>

    <para>To display the <guimenuitem>Autocompletion</guimenuitem> contextual
    menu for the glossary matches, hit the OS dependant key
    (<keycap>Escape</keycap> for macOS, <keycap>Ctrl+Space</keycap> for the
    other platforms).</para>

    <para>To underline matching terms in the source part of the segment use
    <guimenuitem>View</guimenuitem> &gt; <guimenuitem>Mark Glossary
    Matches</guimenuitem>. Right-click on the underlined term and select a
    target term to insert it at the cursor location in the target part of the
    segment.</para>
  </section>

  <section>
    <title>File format</title>

    <para>OmegaT glossary files are simple plain text three-column lists with
    the source term in the first column, an optional target term in the second
    column and an optional comment in the third column.</para>

    <para>Plain text glossaries can be "tab separated values" (TSV) files or
    "comma separated values" (CSV) files. A third possible format is the "TBX"
    (TermBase eXchange) ISO standard.</para>

    <para>The project default writable glossary is always a TSV file saved in
    UTF-8 encoding.</para>

    <para>Glossaries are read in an encoding that depends on the file
    extension:</para>

    <table xml:id="glossary.extensions">
      <caption>Format, extensions and expected encoding</caption>

      <thead>
        <tr>
          <td>Format</td>

          <td>Extension</td>

          <td>Encoding</td>
        </tr>
      </thead>

      <tbody>
        <tr>
          <td>TSV</td>

          <td>
            <filename>.txt</filename>
          </td>

          <td>UTF-8</td>
        </tr>

        <tr>
          <td>TSV</td>

          <td>
            <filename>.utf8</filename>
          </td>

          <td>UTF-8</td>
        </tr>

        <tr>
          <td>TSV</td>

          <td>
            <filename>.tab</filename>
          </td>

          <td>OS default encoding</td>
        </tr>

        <tr>
          <td>TSV</td>

          <td>
            <filename>.tsv</filename>
          </td>

          <td>OS default encoding</td>
        </tr>

        <tr>
          <td>CSV</td>

          <td>
            <filename>.csv</filename>
          </td>

          <td>UTF-8</td>
        </tr>

        <tr>
          <td>TBX</td>

          <td>
            <filename>.tbx</filename>
          </td>

          <td>UTF-8</td>
        </tr>
      </tbody>
    </table>

    <para>Glossaries must be located in the <filename>/glossary</filename>
    project folder. Glossaries located in nested folders are also
    recognized.</para>
  </section>

  <section>
    <title>Common glossary problems</title>

    <para><emphasis role="bold">Problem: No glossary terms are displayed -
    possible causes:</emphasis></para>

    <itemizedlist>
      <listitem>
        <para>No glossary file found in the "glossary" folder.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>The glossary file is empty.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>The items are not separated with a TAB character.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>The glossary file does not have the correct extension (.tab,
        .utf8 or .txt).</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>There is no EXACT match between the glossary entry and the
        source text in your document - for instance plurals.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>The glossary file does not have the correct encoding.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>There are no terms in the current segment which match any terms
        in the glossary.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>One or more of the above problems may have been fixed, but the
        project has not been reloaded.</para>
      </listitem>
    </itemizedlist>

    <para><emphasis role="bold">Problem: In the glossary pane, some characters
    are not displayed properly</emphasis></para>

    <itemizedlist>
      <listitem>
        <para>...but the same characters are displayed properly in the Editing
        pane: the extension and the file encoding do not match.</para>
      </listitem>
    </itemizedlist>
  </section>
</appendix>

   <appendix id="appendix.spellchecker">
  <title>Spell checker</title>

  <para>OmegaT has a built-in spell checker based on the spelling checker used
  in Apache OpenOffice, LibreOffice, Firefox and Thunderbird. It is
  consequently able to use the huge range of free spelling dictionaries
  available for these applications.</para>

  <section>
    <title>Installing spelling dictionaries</title>

    <para>Before the spell check function can be used, a suitable dictionary
    or dictionaries (i.e. for your target language) must be installed. To
    install spelling dictionaries, follow this procedure:</para>

    <itemizedlist>
      <listitem>
        <para>In your file manager, create a new folder in a suitable location
        in which to store spelling dictionaries (D:\Translations\spellcheckers
        in the example below).</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>In OmegaT, select <guimenuitem>Options &gt; Spell
        Checking</guimenuitem>, then click <guibutton>Choose
        </guibutton> beside the Dictionary file folder field. Navigate to and
        select the folder you created for dictionaries.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Place the dictionary files you wish to use in this folder. There
        are essentially two ways in which you can do this. You can either copy
        files manually, i.e. from elsewhere on your system, using your file
        manager; or you can use OmegaT's <emphasis role="bold">"Install new
        dictionary"</emphasis> function to provide a list of available
        dictionaries to select from. Note that the "Install" function requires
        an Internet connection. The selected languages will then be installed
        and will eventually appear in your spell checker setup window (this
        may take a while).</para>
      </listitem>
    </itemizedlist>

    <para>Copying the files manually makes sense if you already have suitable
    dictionary files on your system, for instance as part of your Apache OpenOffice,
    LibreOffice, Firefox or Thunderbird installation. It is simpler, however, to look for
    dictionaries online, using the <emphasis role="bold">URL of online
    dictionaries</emphasis> field:</para>

    <figure id="spellchecker.setup">
      <title>Spellchecker setup</title>

      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="images/SpellcheckerSetup_25.png"/>
        </imageobject>

        <imageobject role="fo">
          <imagedata fileref="images/SpellcheckerSetup_25.png" width="80%"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Clicking on <guibutton>Install new dictionary</guibutton> button
    will open the Dictionary installer window, where you can select the
    dictionaries you want to install.</para>

    <para>The names of the files must correspond to the language code of your
    target language as defined in the project properties dialog
    (<guimenu>Project &gt; Properties</guimenu>). For example, if you have
    selected ES-MX (Mexican Spanish) as the target language, the dictionary
    files must be named es_MX.dic and es_MX.aff. If you only have a standard
    Spanish dictionary available, with file names es_es.dic and es_es.aff for
    instance, you can copy these files to es_MX.dic and es_MX.aff, and the
    spelling dictionary will work. Note that this will of course check for the
    standard (Castillian) rather than for Mexican Spanish.</para>
  </section>

  <section>
    <title>Using spelling dictionaries</title>

    <para>There is no need to instruct OmegaT to use a particular spelling
    dictionary; OmegaT will use the correct language dictionary based upon the
    language codes of your project. Check however that the language codes are
    exactly the same: an FR-FR dictionary will not work with an FR target
    setting, for example. If necessary, edit the file names of the dictionary
    or change your project's language settings.</para>

    <para>To enable the spell checker, select <guimenuitem>Options &gt; Spell
    Checking</guimenuitem> and tick the <guilabel>Automatically check the
    spelling of text</guilabel> check box (see above).</para>

    <figure id="spellchecker.in.action">
      <title>Using spellchecker</title>

      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="images/SpellcheckingText.png"/>
        </imageobject>

        <imageobject role="fo">
          <imagedata fileref="images/SpellcheckingText.png" width="80%"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>Right-clicking on an underlined word (Artund in the figure above)
    opens a drop-down menu listing suggestions for the correction (Art und).
    You can also instruct the spell checker to ignore all the occurrences of
    the mis-spelled word, or add it to the dictionary.</para>
  </section>

  <section id="hints">
    <title>Hints</title>

    <para>If the spell checker is not working, then make sure first that the
    check box <guilabel>"Automatically check the spelling of text"</guilabel>
    in the spell checker dialog (<guisubmenu>Options &gt; Spell
    checking...)</guisubmenu> is checked.</para>

    <para>Also check that the target language code of your project against the
    available vocabularies in the setup window. The spell checker uses the
    target language code to determine the language to be used : if the target
    language is Brazilian Portuguese (PT_BR), the subfolder with vocabularies
    must contain the two vocabulary files, called
    <emphasis>pt_br.aff</emphasis> and <emphasis>pt_br.dic</emphasis>.</para>

    <para>If you have already translated a large body of text, and then
    realize the target language code of the project does not match the spell
    checker's language code (you specified pt_BR as the language, but there
    are no pt_BR vocabularies, for instance) you can simply copy the two
    corresponding files and rename them (e.g. from
    <emphasis>pt_PT.aff</emphasis> and <emphasis>pt_PT.dic</emphasis> to
    <emphasis>pt_BR.aff</emphasis> and <emphasis>pt_BR.dic</emphasis>). Of
    course it is much wiser, to take a short break and download the correct
    versions of the spell checker.</para>

    <para>Note that <filename>Remove</filename> physically removes the
    selected vocabularies. If they are used by some other application on your
    system, they will disappear from that application, too. If, for whatever
    reason, you need to do this from time to time, it may make sense to copy
    the files involved to a different folder, reserved just for use by
    OmegaT.</para>
  </section>
</appendix>

  <appendix id="appendix.regexp">
  <title>Regular expressions</title>

  <para>The regular expressions (or regex for short) used in searches and
  segmentation rules are those supported by Java. Should you need more
  specific information, consult the <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html">Java
  Regex documentation</ulink>. See additional references and examples
  below.</para>

  <note>
    <para>This chapter is intended for advanced users, who need to define
    their own variants of segmentation rules or devise more complex and
    powerful key search items.</para>
  </note>

  <table>
    <title>Regex - Flags</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">The construct</entry>

          <entry align="left">... matches the following</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>(?i)</entry>

          <entry>Enables case-insensitive matching (by default, the pattern is
          case-sensitive).</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>Regex - Character</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">The construct</entry>

          <entry align="left">... matches the following</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>x</entry>

          <entry>The character x, except the following...</entry>
        </row>

        <row>
          <entry>\uhhhh</entry>

          <entry>The character with hexadecimal value 0xhhhh</entry>
        </row>

        <row>
          <entry>\t</entry>

          <entry>The tab character ('\u0009')</entry>
        </row>

        <row>
          <entry>\n</entry>

          <entry>The newline (line feed) character ('\u000A')</entry>
        </row>

        <row>
          <entry>\r</entry>

          <entry>The carriage-return character ('\u000D')</entry>
        </row>

        <row>
          <entry>\f</entry>

          <entry>The form-feed character ('\u000C')</entry>
        </row>

        <row>
          <entry>\a</entry>

          <entry>The alert (bell) character ('\u0007')</entry>
        </row>

        <row>
          <entry>\e</entry>

          <entry>The escape character ('\u001B')</entry>
        </row>

        <row>
          <entry>\cx</entry>

          <entry>The control character corresponding to x</entry>
        </row>

        <row>
          <entry>\0n</entry>

          <entry>The character with octal value 0n (0 &lt;= n &lt;= 7)</entry>
        </row>

        <row>
          <entry>\0nn</entry>

          <entry>The character with octal value 0nn (0 &lt;= n &lt;=
          7)</entry>
        </row>

        <row>
          <entry>\0mnn</entry>

          <entry>The character with octal value 0mnn (0 &lt;= m &lt;= 3, 0
          &lt;= n &lt;= 7)</entry>
        </row>

        <row>
          <entry>\xhh</entry>

          <entry>The character with hexadecimal value 0xhh</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>Regex - Quotation</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">The construct</entry>

          <entry align="left">...matches the following</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>\</entry>

          <entry>Nothing, but quotes the following character. This is required
          if you would like to enter any of the meta characters
          !$()*+.&lt;&gt;?[\]^{|} to match as themselves.</entry>
        </row>

        <row>
          <entry>\\</entry>

          <entry>For example, this is the backslash character</entry>
        </row>

        <row>
          <entry>\Q</entry>

          <entry>Nothing, but quotes all characters until \E</entry>
        </row>

        <row>
          <entry>\E</entry>

          <entry>Nothing, but ends quoting started by \Q</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>Regex - Classes for Unicode blocks and categories</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">The construct</entry>

          <entry align="left">...matches the following</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>\p{InGreek}</entry>

          <entry>A character in the Greek block (simple <ulink url="http://download.oracle.com/javase/1.6.0/docs/api/java/util/regex/Pattern.html#ubc">
          block</ulink>)</entry>
        </row>

        <row>
          <entry>\p{Lu}</entry>

          <entry>An uppercase letter (simple <ulink url="http://download.oracle.com/javase/1.6.0/docs/api/java/util/regex/Pattern.html#ubc">
          category</ulink>)</entry>
        </row>

        <row>
          <entry>\p{Sc}</entry>

          <entry>A currency symbol</entry>
        </row>

        <row>
          <entry>\P{InGreek}</entry>

          <entry>Any character except one in the Greek block
          (negation)</entry>
        </row>

        <row>
          <entry>[\p{L}&amp;&amp;[^\p{Lu}]]</entry>

          <entry>Any letter except an uppercase letter (subtraction)</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>Regex - Character classes</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">The construct</entry>

          <entry align="left">...matches the following</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>[abc]</entry>

          <entry>a, b, or c (simple class)</entry>
        </row>

        <row>
          <entry>[^abc]</entry>

          <entry>Any character except a, b, or c (negation)</entry>
        </row>

        <row>
          <entry>[a-zA-Z]</entry>

          <entry>a through z or A through Z, inclusive (range)</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>Regex - Predefined character classes</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">The construct</entry>

          <entry align="left">...matches the following</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>.</entry>

          <entry>Any character (except for line terminators)</entry>
        </row>

        <row>
          <entry>\d</entry>

          <entry>A digit: [0-9]</entry>
        </row>

        <row>
          <entry>\D</entry>

          <entry>A non-digit: [^0-9]</entry>
        </row>

        <row>
          <entry>\s</entry>

          <entry>A whitespace character: [ \t\n\x0B\f\r]</entry>
        </row>

        <row>
          <entry>\S</entry>

          <entry>A non-whitespace character: [^\s]</entry>
        </row>

        <row>
          <entry>\w</entry>

          <entry>A word character: [a-zA-Z_0-9]</entry>
        </row>

        <row>
          <entry>\W</entry>

          <entry>A non-word character: [^\w]</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>Regex - Boundary matchers</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">The construct</entry>

          <entry align="left">...matches the following</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>^</entry>

          <entry>The beginning of a line</entry>
        </row>

        <row>
          <entry>$</entry>

          <entry>The end of a line</entry>
        </row>

        <row>
          <entry>\b</entry>

          <entry>A word boundary</entry>
        </row>

        <row>
          <entry>\B</entry>

          <entry>A non-word boundary</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>Regex - Greedy quantifiers</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">The construct</entry>

          <entry align="left">...matches the following</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>X<emphasis>?</emphasis></entry>

          <entry>X, once or not at all</entry>
        </row>

        <row>
          <entry>X<emphasis>*</emphasis></entry>

          <entry>X, zero or more times</entry>
        </row>

        <row>
          <entry>X<emphasis>+</emphasis></entry>

          <entry>X, one or more times</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <note>
    <para>greedy quantifiers will match as much as they can. For example,
    <emphasis>a+</emphasis> will match the aaa in
    <emphasis>aaabbb</emphasis></para>
  </note>

  <table>
    <title>Regex - Reluctant (non-greedy) quantifiers</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">The construct</entry>

          <entry align="left">...matches the following</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>X??</entry>

          <entry>X, once or not at all</entry>
        </row>

        <row>
          <entry>X*?</entry>

          <entry>X, zero or more times</entry>
        </row>

        <row>
          <entry>X+?</entry>

          <entry>X, one or more times</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <note>
    <para>non-greedy quantifiers will match as little as they can. For
    example, <emphasis>a+?</emphasis> will match the first
    <emphasis>a</emphasis> in <emphasis>aaabbb</emphasis></para>
  </note>

  <table>
    <title>Regex - Logical operators</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">The construct</entry>

          <entry align="left">...matches the following</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>XY</entry>

          <entry>X followed by Y</entry>
        </row>

        <row>
          <entry>X|Y</entry>

          <entry>Either X or Y</entry>
        </row>

        <row>
          <entry>(XY)</entry>

          <entry>XY as a single group</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <section id="regex.tools.and.examples.of.use">
    <title>Regex tools and examples of use</title>

    <para>A number of interactive tools are available to develop and test
    regular expressions. They generally follow much the same pattern (for an
    example from the Regular Expression Tester see below): the regular
    expression (top entry) analyzes the search text (Text box in the middle) ,
    yielding the hits, shown in the result Text box.</para>

    <figure id="regerx.tester">
      <title>Regex Tester</title>

      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="images/RegexTester.png"/>
        </imageobject>

        <imageobject role="fo">
          <imagedata fileref="images/RegexTester.png" width="80%"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>See <ulink url="http://weitz.de/regex-coach/">The Regex
    Coach</ulink> for Windows,Linux, FreeBSD versions of a stand-alone tool.
    This is much the same as the above example.</para>

    <para>A nice collection of useful regex cases can be found in
    <application>OmegaT</application> itself (see Options &gt; Segmentation).
    The following list includes expressions you may find useful when searching
    through the translation memory:</para>

    <table>
      <title>Regex - Examples of regular expressions in translations</title>

      <tgroup align="left" cols="2" rowsep="1">
        <colspec align="left" colnum="1"/>

        <thead>
          <row>
            <entry>Regular expression</entry>

            <entry>Finds the following:</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>(\b\w+\b)\s\1\b</entry>

            <entry>double words</entry>
          </row>

          <row>
            <entry>[\.,]\s*[\.,]+</entry>

            <entry>comma or a period, followed by spaces and yet another comma
            or period</entry>
          </row>

          <row>
            <entry>\. \s+$</entry>

            <entry>extra spaces after the period at the end of the
            line</entry>
          </row>

          <row>
            <entry>\s+a\s+[aeiou]</entry>

            <entry>English: words, beginning with vowels, should generally be
            preceded by "an", not "a"</entry>
          </row>

          <row>
            <entry>\s+an\s+[^aeiou]</entry>

            <entry>English: the same check as above, but concerning consonants
            ("a", not "an")</entry>
          </row>

          <row>
            <entry>\s{2,}</entry>

            <entry>more than one space</entry>
          </row>

          <row>
            <entry>\.[A-Z]</entry>

            <entry>Period, followed by an upper-case letter - possibly a space
            is missing between the period and the start of a new
            sentence?</entry>
          </row>

          <row>
            <entry>\bis\b</entry>

            <entry>search for “is”, not “this” or “isn't” etc.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>
</appendix>

  <appendix id="appendix.shortcut.custom">
  <title>Shortcuts customization</title>

  <section id="ch04.shortcuts.customization">
    <title>Shortcuts customization</title>

    <para>Most of the items that appear in the main menu can have a new
    shortcut assigned. You can change the already assigned shortcuts and add
    new shortcuts by putting a shortcut definition file in your
    <application>OmegaT</application> preferences folder (accessible by
    <menuchoice>
        <guimenuitem>Options</guimenuitem>

        <guimenuitem>Access Configuration Folder</guimenuitem>
      </menuchoice> menu).</para>

    <para>The shortcut definition file must be named
    <filename>MainMenuShortcuts.properties</filename> and must contain at most
    one shortcut definition per line. Empty lines are accepted and comment
    lines should start with "//". Anything after the "//" will be
    ignored.</para>

    <para>Once the <filename>MainMenuShortcuts.properties</filename> file is
    modified, <application>OmegaT</application> must be relaunched to take the
    new shortcuts into account.</para>

    <para>The shortcut definition syntax is the following: <code>&lt;menu item
    code&gt;=&lt;shortcut&gt;</code>, where <emphasis>&lt;menu item
    code&gt;</emphasis> is a code taken from the tables below and
    <emphasis>&lt;shortcut&gt;</emphasis> is a combination of pressed keys
    specified by the user<footnote>
        <para>The full syntax for keystrokes (shortcuts) is defined in the
        following Java 1.6 documentation from Oracle (bottom of page): <ulink url="http://docs.oracle.com/javase/6/docs/api/javax/swing/KeyStroke.html">Java
        1.6 keystrokes shortcuts</ulink></para>
      </footnote>.</para>

    <para>&lt;shortcut&gt; must be of the following form: 0 or more
    <code>&lt;modifier&gt;</code> followed by 0 or 1
    <code>&lt;event&gt;</code> followed by 1 <code>&lt;key&gt;</code>,
    where:<itemizedlist>
        <listitem>
          <para><code>&lt;modifier&gt;</code> can be:
          <emphasis>shift</emphasis>, <emphasis>control</emphasis>,
          <emphasis>ctrl</emphasis>, <emphasis>meta</emphasis><footnote>
              <para>On the Mac, the modifier <emphasis>meta</emphasis> must be
              used to specify the <emphasis>command</emphasis> key.</para>
            </footnote>, <emphasis>alt</emphasis>,
          <emphasis>altGraph</emphasis></para>
        </listitem>

        <listitem>
          <para><code>&lt;event&gt;</code> can be: <emphasis>typed</emphasis>,
          <emphasis>pressed</emphasis>, <emphasis>released</emphasis></para>
        </listitem>

        <listitem>
          <para>and <code>&lt;key&gt;</code> can be any key available on your
          keyboard<footnote>
              <para>The possible keyevents (keys) are listed in the following
              Java 1.6 documentation from Oracle: <ulink url="http://docs.oracle.com/javase/6/docs/api/java/awt/event/KeyEvent.html">Java
              1.6 keyEvents description</ulink></para>
            </footnote>.</para>
        </listitem>
      </itemizedlist></para>

    <para>For example, in the default OmegaT shortcuts<footnote>
        <para>The default OmegaT shortcuts are available from Sourceforge:
        <ulink url="https://sourceforge.net/p/omegat/svn/HEAD/tree/trunk/src/org/omegat/gui/main/MainMenuShortcuts.properties">Default
        OmegaT Shortcuts</ulink></para>

        <para>The default OmegaT shortcuts for the Mac are also available from
        Sourceforge, they all use "meta" instead of "ctrl": <ulink url="https://sourceforge.net/p/omegat/svn/HEAD/tree/trunk/src/org/omegat/gui/main/MainMenuShortcuts.mac.properties">Default
        OmegaT Shortcuts for the Mac</ulink></para>
      </footnote>, one can find:</para>

    <itemizedlist>
      <listitem>
        <para><code>projectOpenMenuItem=ctrl O</code></para>
      </listitem>

      <listitem>
        <para><code>editCreateGlossaryEntryMenuItem=ctrl shift G</code></para>
      </listitem>
    </itemizedlist>

    <para>The first is the shortcut for <guimenuitem>Open
    Project</guimenuitem>, the second for <guimenuitem>Create Glossary
    Entry</guimenuitem>.</para>

    <para>If you want to use <keycombo>
        <keycap>Shift</keycap>

        <keycap>Ctrl</keycap>

        <keycap>O</keycap>
      </keycombo> to open a project, modify your
    <filename>MainMenuShortcuts.properties</filename> as follows:<code>
    </code></para>

    <para><code>projectOpenMenuItem=shift ctrl O</code>.</para>

    <para>If you are on a Mac and you want to add a <keycombo>
        <keycap>Shift</keycap>

        <keycap>Command</keycap>

        <keycap>S</keycap>
      </keycombo> shortcut to <menuchoice>
        <guimenu>Tools</guimenu>

        <guimenuitem>Statistics</guimenuitem>
      </menuchoice>, add the following line to your
    <filename>MainMenuShortcuts.properties</filename>:<code/></para>

    <para><code> toolsShowStatisticsStandardMenuItem=shift meta
    S</code></para>

    <para>Save then the file and relaunch <application>OmegaT</application>.
    Your new shortcuts should now appear next to the menu items you have
    modified. If they do not conflict with system shortcuts, they should be
    available from within OmegaT.</para>
  </section>

  <section id="ch04.shortcuts.ProjectMenu">
    <title>Project Menu</title>

    <table>
      <title>Project Menu</title>

      <tgroup cols="3" colsep="1">
        <colspec align="left" colname="1" colnum="1"/>

        <colspec align="left" colname="2" colnum="2"/>

        <colspec align="left" colname="3" colnum="3"/>

        <thead>
          <row>
            <entry>Menu Item</entry>

            <entry>Default shortcut</entry>

            <entry>Menu Item Code</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>New</entry>

            <entry><keycap>Ctrl+Shift+N</keycap></entry>

            <entry>projectNewMenuItem</entry>
          </row>

          <row>
            <entry>Download Team Project</entry>

            <entry/>

            <entry>projectTeamNewMenuItem</entry>
          </row>

          <row>
            <entry>Open</entry>

            <entry><keycap>Ctrl+O</keycap></entry>

            <entry>projectOpenMenuItem</entry>
          </row>

          <row>
            <entry>Open Recent Project</entry>

            <entry/>

            <entry>projectOpenRecentMenuItem</entry>
          </row>

          <row>
            <entry>Copy Files to Source Folder...</entry>

            <entry/>

            <entry>projectImportMenuItem</entry>
          </row>

          <row>
            <entry>Download MediaWiki Page...</entry>

            <entry/>

            <entry>projectWikiImportMenuItem</entry>
          </row>

          <row>
            <entry>Reload</entry>

            <entry><keycap>F5</keycap></entry>

            <entry>projectReloadMenuItem</entry>
          </row>

          <row>
            <entry>Close</entry>

            <entry><keycap>Ctrl+Shift+W</keycap></entry>

            <entry>projectCloseMenuItem</entry>
          </row>

          <row>
            <entry>Save</entry>

            <entry><keycap>Ctrl+S</keycap></entry>

            <entry>projectSaveMenuItem</entry>
          </row>

          <row>
            <entry>Create Translated Documents</entry>

            <entry><keycap>Ctrl+D</keycap></entry>

            <entry>projectCompileMenuItem</entry>
          </row>

          <row>
            <entry>Create Current Translated Documents</entry>

            <entry><keycap>Ctrl+Shift+D</keycap></entry>

            <entry>projectSingleCompileMenuItem</entry>
          </row>

          <row>
            <entry>Properties...</entry>

            <entry><keycap>Ctrl+E</keycap></entry>

            <entry>projectEditMenuItem</entry>
          </row>

          <row>
            <entry>Project Files...</entry>

            <entry><keycap>Ctrl+L</keycap></entry>

            <entry>viewFileListMenuItem</entry>
          </row>

          <row>
            <entry>Access Project Contents/Root</entry>

            <entry/>

            <entry>projectAccessRootMenuItem</entry>
          </row>

          <row>
            <entry>Access Project Contents/Dictionaries</entry>

            <entry/>

            <entry>projectAccessDictionaryMenuItem</entry>
          </row>

          <row>
            <entry>Access Project Contents/Glossaries</entry>

            <entry/>

            <entry>projectAccessGlossaryMenuItem</entry>
          </row>

          <row>
            <entry>Access Project Contents/Source Files</entry>

            <entry/>

            <entry>projectAccessSourceMenuItem </entry>
          </row>

          <row>
            <entry>Access Project Contents/Target Files</entry>

            <entry/>

            <entry>projectAccessTargetMenuItem</entry>
          </row>

          <row>
            <entry>Access Project Contents/Current Source Document</entry>

            <entry/>

            <entry>projectAccessCurrentSourceDocumentMenuItem</entry>
          </row>

          <row>
            <entry>Access Project Contents/Current Target Document</entry>

            <entry/>

            <entry>projectAccessCurrentTargetDocumentMenuItem</entry>
          </row>

          <row>
            <entry>Access Project Contents/Writeable Glossary</entry>

            <entry/>

            <entry>projectAccessWriteableGlossaryMenuItem</entry>
          </row>

          <row>
            <entry>Quit</entry>

            <entry><keycap>Ctrl+Q</keycap></entry>

            <entry>projectExitMenuItem</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section id="ch04.shortcuts.EditMenu">
    <title>Edit Menu</title>

    <table>
      <title>Edit Menu</title>

      <tgroup cols="3" colsep="1">
        <colspec align="left" colname="1" colnum="1"/>

        <colspec align="left" colname="2" colnum="2"/>

        <colspec align="left" colname="3" colnum="3"/>

        <thead>
          <row>
            <entry>Menu Item</entry>

            <entry>Default shortcut</entry>

            <entry>Menu Item Code</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>Undo Last Action</entry>

            <entry><keycap>Ctrl+Z</keycap></entry>

            <entry>editUndoMenuItem</entry>
          </row>

          <row>
            <entry>Redo Last Action</entry>

            <entry><keycap>Ctrl+Y</keycap></entry>

            <entry>editRedoMenuItem</entry>
          </row>

          <row>
            <entry>Replace With Match or Selection</entry>

            <entry><keycap>Ctrl+R</keycap></entry>

            <entry>editOverwriteTranslationMenuItem</entry>
          </row>

          <row>
            <entry>Insert Match or Selection</entry>

            <entry><keycap>Ctrl+I</keycap></entry>

            <entry>editInsertTranslationMenuItem</entry>
          </row>

          <row>
            <entry>Replace with Machine Translation</entry>

            <entry><keycap>Ctrl+M</keycap></entry>

            <entry>editOverwriteMachineTranslationMenuItem</entry>
          </row>

          <row>
            <entry>Replace With Source</entry>

            <entry><keycap>Ctrl+Shift+R</keycap></entry>

            <entry>editOverwriteSourceMenuItem</entry>
          </row>

          <row>
            <entry>Insert Source</entry>

            <entry><keycap>Ctrl+Shift+I</keycap></entry>

            <entry>editInsertSourceMenuItem</entry>
          </row>

          <row>
            <entry>Insert Missing Source Tags</entry>

            <entry><keycap>Ctrl+Shift+T</keycap></entry>

            <entry>editTagPainterMenuItem</entry>
          </row>

          <row>
            <entry>Insert Next Missing Tag</entry>

            <entry><keycap>Ctrl+T</keycap></entry>

            <entry>editTagNextMissedMenuItem</entry>
          </row>

          <row>
            <entry>Export Selection</entry>

            <entry><keycap>Ctrl+Shift+C</keycap></entry>

            <entry>editExportSelectionMenuItem</entry>
          </row>

          <row>
            <entry>Create Glossary Entry</entry>

            <entry><keycap>Ctrl+Shift+G</keycap></entry>

            <entry>editCreateGlossaryEntryMenuItem</entry>
          </row>

          <row>
            <entry>Search Project...</entry>

            <entry><keycap>Ctrl+F</keycap></entry>

            <entry>editFindInProjectMenuItem</entry>
          </row>

          <row>
            <entry/>

            <entry><keycap>Ctrl+Shift+F</keycap></entry>

            <entry>findInProjectReuseLastWindow</entry>
          </row>

          <row>
            <entry>Search and Replace...</entry>

            <entry><keycap>Ctrl+K</keycap></entry>

            <entry>editReplaceInProjectMenuItem</entry>
          </row>

          <row>
            <entry>Switch Case To/Lower Case</entry>

            <entry/>

            <entry>lowerCaseMenuItem</entry>
          </row>

          <row>
            <entry>Switch Case To/Upper Case</entry>

            <entry/>

            <entry>upperCaseMenuItem</entry>
          </row>

          <row>
            <entry>Switch Case To/Title Case</entry>

            <entry/>

            <entry>titleCaseMenuItem</entry>
          </row>

          <row>
            <entry>Switch Case To/Sentence Case</entry>

            <entry/>

            <entry>sentenceCaseMenuItem</entry>
          </row>

          <row>
            <entry>Switch Case To/Cycle</entry>

            <entry><keycap>Shift+F3</keycap></entry>

            <entry>cycleSwitchCaseMenuItem</entry>
          </row>

          <row>
            <entry>Select Previous Match</entry>

            <entry><keycap>Ctrl+↑</keycap></entry>

            <entry>editSelectFuzzyPrevMenuItem</entry>
          </row>

          <row>
            <entry>Select Next Match</entry>

            <entry><keycap>Ctrl+↓</keycap></entry>

            <entry>editSelectFuzzyNextMenuItem</entry>
          </row>

          <row>
            <entry>Select Match #1</entry>

            <entry><keycap>Ctrl+1</keycap></entry>

            <entry>editSelectFuzzy1MenuItem</entry>
          </row>

          <row>
            <entry>Select Match #2</entry>

            <entry><keycap>Ctrl+2</keycap></entry>

            <entry>editSelectFuzzy2MenuItem</entry>
          </row>

          <row>
            <entry>Select Match #3</entry>

            <entry><keycap>Ctrl+3</keycap></entry>

            <entry>editSelectFuzzy3MenuItem</entry>
          </row>

          <row>
            <entry>Select Match #4</entry>

            <entry><keycap>Ctrl+4</keycap></entry>

            <entry>editSelectFuzzy4MenuItem</entry>
          </row>

          <row>
            <entry>Select Match #5</entry>

            <entry><keycap>Ctrl+5</keycap></entry>

            <entry>editSelectFuzzy5MenuItem</entry>
          </row>

          <row>
            <entry>Use as Default Translation</entry>

            <entry/>

            <entry>editMultipleDefault</entry>
          </row>

          <row>
            <entry>Create Alternative Translation</entry>

            <entry/>

            <entry>editMultipleAlternate</entry>
          </row>

          <row>
            <entry>Remove translation</entry>

            <entry/>

            <entry>editRegisterUntranslatedMenuItem</entry>
          </row>

          <row>
            <entry>Set empty translation</entry>

            <entry/>

            <entry>editRegisterEmptyMenuItem</entry>
          </row>

          <row>
            <entry>Register Identical Translation</entry>

            <entry><keycap>Ctrl+Shift+S</keycap></entry>

            <entry>editRegisterIdenticalMenuItem</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section id="ch04.shortcuts.GoToMenu">
    <title>GoTo Menu</title>

    <table>
      <title>GoTo Menu</title>

      <tgroup cols="3" colsep="1">
        <colspec align="left" colname="1" colnum="1"/>

        <colspec align="left" colname="2" colnum="2"/>

        <colspec align="left" colname="3" colnum="3"/>

        <thead>
          <row>
            <entry>Menu Item</entry>

            <entry>Default shortcut</entry>

            <entry>Menu Item Code</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>Next Untranslated Segment</entry>

            <entry><keycap>Ctrl+U</keycap></entry>

            <entry>gotoNextUntranslatedMenuItem</entry>
          </row>

          <row>
            <entry>Next Translated Segment</entry>

            <entry><keycap>Ctrl+Shift+U</keycap></entry>

            <entry>gotoNextTranslatedMenuItem</entry>
          </row>

          <row>
            <entry>Next Segment</entry>

            <entry><keycap>Ctrl+N</keycap> or <keycap>Enter</keycap> or
            <keycap>Tab</keycap></entry>

            <entry>gotoNextSegmentMenuItem</entry>
          </row>

          <row>
            <entry>Previous Segment</entry>

            <entry><keycap>Ctrl+P</keycap> or <keycap>Ctrl+Enter</keycap> or
            <keycap>Ctrl+Tab</keycap></entry>

            <entry>gotoPreviousSegmentMenuItem</entry>
          </row>

          <row>
            <entry>Segment number...</entry>

            <entry><keycap>Ctrl+J</keycap></entry>

            <entry>gotoSegmentMenuItem</entry>
          </row>

          <row>
            <entry>Next Note</entry>

            <entry/>

            <entry>gotoNextNoteMenuItem</entry>
          </row>

          <row>
            <entry>Previous Note</entry>

            <entry/>

            <entry>gotoPreviousNoteMenuItem</entry>
          </row>

          <row>
            <entry>Next Unique Segment</entry>

            <entry><keycap>Ctrl+Shift+Q</keycap></entry>

            <entry>gotoNextUniqueMenuItem</entry>
          </row>

          <row>
            <entry>Source of Selected Match</entry>

            <entry><keycap>Ctrl+Shift+M</keycap></entry>

            <entry>gotoMatchSourceSegment</entry>
          </row>

          <row>
            <entry>Forward in history...</entry>

            <entry><keycap>Ctrl+Shift+N</keycap></entry>

            <entry>gotoHistoryForwardMenuItem</entry>
          </row>

          <row>
            <entry>Back in history...</entry>

            <entry><keycap>Ctrl+Shift+P</keycap></entry>

            <entry>gotoHistoryBackMenuItem</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section id="ch04.shortcuts.ViewMenu">
    <title>View Menu</title>

    <table>
      <title>View Menu</title>

       <tgroup cols="3" colsep="1">
        <colspec align="left" colname="1" colnum="1"/>

        <colspec align="left" colname="2" colnum="2"/>

        <colspec align="left" colname="3" colnum="3"/>

        <thead>
          <row>
            <entry>Menu Item</entry>

            <entry>Default shortcut</entry>

            <entry>Menu Item Code</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>Mark Translated Segments</entry>

            <entry/>

            <entry>viewMarkTranslatedSegmentsCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Mark Untranslated Segments</entry>

            <entry/>

            <entry>viewMarkUntranslatedSegmentsCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Display Source Segments</entry>

            <entry/>

            <entry>viewDisplaySegmentSourceCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Mark Non-Unique Segments</entry>

            <entry/>

            <entry>viewMarkNonUniqueSegmentsCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Mark Segments with Notes</entry>

            <entry/>

            <entry>viewMarkNotedSegmentsCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Mark Non-breakable Spaces</entry>

            <entry/>

            <entry>viewMarkNBSPCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Mark Whitespace</entry>

            <entry/>

            <entry>viewMarkWhitespaceCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Mark Bidirectional Algorithm Control Characters</entry>

            <entry/>

            <entry>viewMarkBidiCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Mark Auto-Populated Segments</entry>

            <entry/>

            <entry>viewMarkAutoPopulatedCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Modification Info/Display None</entry>

            <entry/>

            <entry>viewDisplayModificationInfoNoneRadioButtonMenuItem</entry>
          </row>

          <row>
            <entry>Modification Info/Display Selected</entry>

            <entry/>

            <entry>viewDisplayModificationInfoSelectedRadioButtonMenuItem</entry>
          </row>

          <row>
            <entry>Modification Info/Display All</entry>

            <entry/>

            <entry>viewDisplayModificationInfoAllRadioButtonMenuItem</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section id="ch04.shortcuts.ToolsMenu">
    <title>Tools Menu</title>

    <table>
      <title>Tools Menu</title>

      <tgroup cols="3" colsep="1">
        <colspec align="left" colname="1" colnum="1"/>

        <colspec align="left" colname="2" colnum="2"/>

        <colspec align="left" colname="3" colnum="3"/>

        <thead>
          <row>
            <entry>Menu Item</entry>

            <entry>Default shortcut</entry>

            <entry>Menu Item Code</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>Validate Tags</entry>

            <entry><keycap>Ctrl+Shift+V</keycap></entry>

            <entry>toolsValidateTagsMenuItem</entry>
          </row>

          <row>
            <entry>Validate Tags for Current Document</entry>

            <entry/>

            <entry>toolsSingleValidateTagsMenuItem</entry>
          </row>

          <row>
            <entry>Statistics</entry>

            <entry/>

            <entry>toolsShowStatisticsStandardMenuItem</entry>
          </row>

          <row>
            <entry>Match Statistics</entry>

            <entry/>

            <entry>toolsShowStatisticsMatchesMenuItem</entry>
          </row>

          <row>
            <entry>Match Statistics per File</entry>

            <entry/>

            <entry>toolsShowStatisticsMatchesPerFileMenuItem</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section id="ch04.shortcuts.OptionsMenu">
    <title>Options Menu</title>

    <table>
      <title>Options Menu</title>

      <tgroup cols="3" colsep="1">
        <colspec align="left" colname="1" colnum="1"/>

        <colspec align="left" colname="2" colnum="2"/>

        <colspec align="left" colname="3" colnum="3"/>

        <thead>
          <row>
            <entry>Menu Item</entry>

            <entry>Default shortcut</entry>

            <entry>Menu Item Code</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>Use TAB To Advance</entry>

            <entry/>

            <entry>optionsTabAdvanceCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Always Confirm Quit</entry>

            <entry/>

            <entry>optionsAlwaysConfirmQuitCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Glossary/Display Context Description for TBX
            Glossaries</entry>

            <entry/>

            <entry>optionsGlossaryTBXDisplayContextCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Use Terms Appearing Separately in the Source Text</entry>

            <entry/>

            <entry>optionsGlossaryExactMatchCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>Glossary/Use Stemming for Glossary Entries</entry>

            <entry/>

            <entry>optionsGlossaryStemmingCheckBoxMenuItem</entry>
          </row>

          <row>
            <entry>TransTips/Enable Transtips</entry>

            <entry/>

            <entry>optionsTransTipsEnableMenuItem</entry>
          </row>

          <row>
            <entry>Auto-completion/Show Relevant Suggestions
            Automatically</entry>

            <entry/>

            <entry>optionsAutoCompleteShowAutomaticallyItem</entry>
          </row>

          <row>
            <entry>Auto-completion/Glossary...</entry>

            <entry/>

            <entry>optionsAutoCompleteGlossaryMenuItem</entry>
          </row>

          <row>
            <entry>Auto-completion/Auto-text...</entry>

            <entry/>

            <entry>optionsAutoCompleteAutoTextMenuItem</entry>
          </row>

          <row>
            <entry>Auto-completion/Character Table...</entry>

            <entry/>

            <entry>optionsAutoCompleteCharTableMenuItem</entry>
          </row>

          <row>
            <entry>Font...</entry>

            <entry/>

            <entry>optionsFontSelectionMenuItem</entry>
          </row>

          <row>
            <entry>Custom Colours...</entry>

            <entry/>

            <entry>optionsColorsSelectionMenuItem</entry>
          </row>

          <row>
            <entry>File Filters...</entry>

            <entry/>

            <entry>optionsSetupFileFiltersMenuItem</entry>
          </row>

          <row>
            <entry>Segmentation...</entry>

            <entry/>

            <entry>optionsSentsegMenuItem</entry>
          </row>

          <row>
            <entry>Spell checking...</entry>

            <entry/>

            <entry>optionsSpellCheckMenuItem</entry>
          </row>

          <row>
            <entry>Editing Behavior...</entry>

            <entry/>

            <entry>optionsWorkflowMenuItem</entry>
          </row>

          <row>
            <entry>Tag Processing...</entry>

            <entry/>

            <entry>optionsTagValidationMenuItem</entry>
          </row>

          <row>
            <entry>Team...</entry>

            <entry/>

            <entry>optionsTeamMenuItem</entry>
          </row>

          <row>
            <entry>External TMXs...</entry>

            <entry/>

            <entry>optionsExtTMXMenuItem</entry>
          </row>

          <row>
            <entry>View...</entry>

            <entry/>

            <entry>optionsViewOptionsMenuItem</entry>
          </row>

          <row>
            <entry>Saving and Output...</entry>

            <entry/>

            <entry>optionsSaveOptionsMenuItem</entry>
          </row>

          <row>
            <entry>Proxy Login...</entry>

            <entry/>

            <entry>optionsViewOptionsMenuLoginItem</entry>
          </row>

          <row>
            <entry>Restore Main Window</entry>

            <entry/>

            <entry>optionsRestoreGUIMenuItem</entry>
          </row>

          <row>
            <entry>Access Configuration Folder</entry>

            <entry/>

            <entry>optionsAccessConfigDirMenuItem</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section id="ch04.shortcuts.HelpMenu">
    <title>Help Menu</title>

    <table>
      <title>Help Menu</title>

      <tgroup cols="3" colsep="1">
        <colspec align="left" colname="1" colnum="1"/>

        <colspec align="left" colname="2" colnum="2"/>

        <colspec align="left" colname="3" colnum="3"/>

        <thead>
          <row>
            <entry>Menu Item</entry>

            <entry>Default shortcut</entry>

            <entry>Menu Item Code</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>User Manual...</entry>

            <entry><keycap>F1</keycap></entry>

            <entry>helpContentsMenuItem</entry>
          </row>

          <row>
            <entry>About...</entry>

            <entry/>

            <entry>helpAboutMenuItem</entry>
          </row>

          <row>
            <entry>Last Changes...</entry>

            <entry/>

            <entry>helpLastChangesMenuItem</entry>
          </row>

          <row>
            <entry>Log...</entry>

            <entry/>

            <entry>helpLogMenuItem</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>
</appendix>
</book>
